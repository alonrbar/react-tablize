{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","external \"react\"","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\domUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\keyboard.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\reactUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\sizeUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\internal\\CustomScrollbars.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\internal\\ErrorBoundary.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\internal\\index.ts","external \"@emotion/styled-base\"","external \"react-virtualized-auto-sizer\"","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\list\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\list\\NonVirtualList.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\list\\VirtualList.tsx","external \"react-custom-scrollbars\"","external \"emotion-theming\"","external \"react-dom\"","external \"react-window\"","external \"lodash.flattendeep\"","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\VirtualCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\windowCalculator.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\VirtualGrid.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\VirtualTile.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableColumn.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableRow.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\index.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Keys","DomUtils","_classCallCheck","_scrollbarWidth","div","document","createElement","style","width","height","overflow","position","top","body","appendChild","offsetWidth","clientWidth","removeChild","_rtlOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","scrollLeft","ReactUtils","reactUtils_classCallCheck","children","createPropsToAdd","React","map","child","index","propsToAdd","parentElement","type","childrenArray","filter","elementInstanceOf","matchingChildren","childrenOfType","length","Error","concat","props","Array","isArray","elem","isPrototypeOf","SizeUtils","sizeUtils_classCallCheck","size","Number","isFinite","component","defaultHeight","minHeight","maxHeight","undefined","cssSizeString","table","head","defaultHeights","totalHeights","geElementHeights","total","headHeight","getHeadHeight","bodyHeights","isNullOrUndefined","val","asArray","areShallowEqual","a","b","keysA","keys","keysB","_i","_keysA","__webpack_exports__","reactUtils_ReactUtils","CustomScrollbarsInner","_this","external_react_","external_react_custom_scrollbars_default","ref","forwardedRef","view","current","_objectSpread","onScroll","CustomScrollbars","CustomScrollbars_CustomScrollbarsInner","_extends","displayName","ErrorBoundary","_React$Component","ErrorBoundary_classCallCheck","ErrorBoundary_possibleConstructorReturn","ErrorBoundary_getPrototypeOf","state","hasError","ErrorBoundary_inherits","error","errorInfo","setState","console","ErrorBoundary_ErrorBoundary","_List__WEBPACK_IMPORTED_MODULE_0__","_NonVirtualList__WEBPACK_IMPORTED_MODULE_1__","_VirtualList__WEBPACK_IMPORTED_MODULE_2__","NonVirtualList","_React$PureComponent","_getPrototypeOf2","_len","arguments","args","_key","_getPrototypeOf","apply","_defineProperty","_assertThisInitialized","scrollOffset","currentInner","listRef","isHorizontal","scrollTop","disableScrollEvents","scrollTo","left","e","_e$currentTarget","currentTarget","_inherits","_this2","listStyle","dir","boxSizing","outline","display","getListElementType","handleOnScroll","itemCount","fill","_","_ref","react__WEBPACK_IMPORTED_MODULE_0__","itemSize","customScrollbar","layout","scrollKeys","_scrollKeys","PageUp","PageDown","End","Home","VirtualList","window","addEventListener","scrollByKey","removeEventListener","_offsetByKey","tableRef","tableInnerRef","tableOuterRef","scrollElement","ReactDOM","currentOffset","pageSize","clientHeight","maxOffset","offsetByKey","Math","max","min","resetAfterIndex","forceUpdate","offset","react_window__WEBPACK_IMPORTED_MODULE_2__","innerRef","outerRef","assign","outerElementType","getOuterElementType","overscanCount","overscan","getKeyScrollProps","_ref2","renderRow","row","keyScroll","onMouseEnter","registerKeyHandlers","onMouseLeave","removeKeyHandlers","onKeyDown","VirtualCell","_possibleConstructorReturn","rightOrLeft","transformModifier","transform","CalcData","WindowCalculator","windowCalculator_classCallCheck","windowCalculator_defineProperty","column","elementType","fromPosition","toPosition","elementsOverscan","estimatedElementSize","calculateElementSize","totalElementsCount","fromIndex","findNearestItem","toIndex","info","push","getElementInfo","elementsCount","lastMeasuredIndex","data","cache","totalSizeOfMeasuredElements","lastMeasuredElemInfo","basePosition","maxIndex","_cache$lastMeasuredIn","_this$data$elementTyp","findNearestItemBinarySearch","findNearestItemExponentialSearch","high","low","middle","floor","currentPosition","interval","elementIndex","_this$data$elementTyp2","elementInfo","_ref3","_cache$index","TileKey","VirtualTileState","VirtualTile","VirtualTile_classCallCheck","VirtualTile_getPrototypeOf","VirtualTile_defineProperty","VirtualTile_assertThisInitialized","VirtualTile_inherits","scrollability","windowCalc","getEstimatedTotalSize","estimatedRowHeight","rowCount","estimatedColumnWidth","columnCount","className","renderCells","columns","elementsInRange","overscanColumnsCount","columnWidth","rows","overscanRowCount","rowHeight","cells","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","col","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","VirtualCell_VirtualCell","colIndex","rowIndex","err","VirtualGridProps","VirtualGrid_classCallCheck","VirtualGrid_defineProperty","VirtualGridState","VirtualGrid","VirtualGrid_getPrototypeOf","VirtualGrid_assertThisInitialized","tileKey","_this$tiles$tileKey","tiles","rowIndexOffset","columnIndexOffset","VirtualTile_VirtualTile","renderProps","tilePosition","getTilePosition","absRowIndex","absColIndex","relRowIndex","relColIndex","_e$currentTarget2","scrollHeight","scrollWidth","rtlOffsetType","activeTiles","scroll","VirtualGrid_inherits","VirtualGrid_createClass","_this$props$style","createTilesMap","prevProps","scrollableHeight","getScrollableAreaHeight","scrollableWidth","getScrollableAreaWidth","createClassName","getContainerHeight","getContainerWidth","handleScroll","renderTile","resetTiles","hasHeader","fixedHeaderHeight","hasFooter","fixedFooterHeight","hasFixedLeftColumn","fixedLeftWidth","hasFixedRightColumn","fixedRightWidth","createTilesMapEntry","createTileMapEntryFactory","HeaderLeft","HeaderCenter","HeaderRight","BodyLeft","BodyCenter","BodyRight","FooterLeft","FooterCenter","FooterRight","horizontalScrollbarWidth","getHorizontalScrollbarWidth","verticalScrollbarWidth","getVerticalScrollbarWidth","containerHeight","containerWidth","headerHeight","footerHeight","bodyHeight","bodyRowsCount","leftWidth","rightWidth","centerWidth","centerColumnsCount","_this2$getTilePositio","vertical","horizontal","isVerticalFixed","isHorizontalFixed","isCorner","_tileKey$toLowerCase$2","_slicedToArray","toLowerCase","split","_this$tiles$TileKey$B","_this$tiles$TileKey$B2","getScrollableHeight","_this$tiles$TileKey$B3","_this$tiles$TileKey$B4","bodyWidth","getScrollableWidth","scrollbarWidth","clearCache","GridView","GridView_classCallCheck","GridView_possibleConstructorReturn","GridView_getPrototypeOf","GridView_inherits","internal","GridView_objectSpread","external_react_virtualized_auto_sizer_default","VirtualGrid_VirtualGrid","GridView_extends","ColumnBodyProps","ColumnBody_classCallCheck","ColumnBody","ColumnBody_possibleConstructorReturn","ColumnBody_getPrototypeOf","ColumnBody_inherits","ColumnHead","ColumnHead_classCallCheck","ColumnHead_possibleConstructorReturn","ColumnHead_getPrototypeOf","ColumnHead_inherits","TableBodyProps","TableBody_classCallCheck","TableBody","TableBody_possibleConstructorReturn","TableBody_getPrototypeOf","TableBody_inherits","count","StyledTableView","styled_base_default","target","label","styles","StyledTableHead","theme","StyledTableBody","StyledTableRow","StyledTableCell","TableCell","TableCell_classCallCheck","TableCell_possibleConstructorReturn","TableCell_getPrototypeOf","TableCell_inherits","cell","isTableCell","TableHead","TableHead_classCallCheck","TableHead_possibleConstructorReturn","TableHead_getPrototypeOf","TableHead_inherits","TableColumnProps","TableColumn_classCallCheck","TableColumn","TableColumn_possibleConstructorReturn","TableColumn_getPrototypeOf","TableColumn_inherits","every","singleChildOfType","colHead","TableCell_TableCell","TableBody_TableBody","columnIndex","cellRender","flattenDeep","TableRow","TableRow_classCallCheck","TableRow_possibleConstructorReturn","TableRow_getPrototypeOf","TableRow_inherits","isTableRow","content","RowAutoSize","TableViewProps","TableView_classCallCheck","TableView_defineProperty","TableView","TableView_getPrototypeOf","TableView_assertThisInitialized","TableView_inherits","tableElement","refresh","createHeadFromColumns","createBodyFromColumns","external_emotion_theming_","getTheme","TableView_objectSpread","renderTableHead","renderTableBody","_head$props","divProps","_objectWithoutProperties","TableView_extends","defaultHeadHeight","renderCell","getBodyHeights","renderTableRows","hasChildren","renderItemsPlaceHolder","rowRender","ListComponent","getListComponent","getRowHeight","customScrollbars","renderBodyRow","rowContent","getRowContent","rowKey","getRowKey","TableRow_TableRow","getCellProps","visible","textAlign","emptyMessage","isVirtual","rowProps","GridView_GridView","TableColumn_TableColumn","TableView_TableView"],"mappings":"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","file":"react-tablize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-tablize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-tablize\"] = factory();\n\telse\n\t\troot[\"react-tablize\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = require(\"react\");","export type RtlOffsetType = 'negative' | 'positive-descending' | 'positive-ascending';\r\n\r\nexport class DomUtils {\r\n\r\n    public static get scrollbarWidth(): number {\r\n        if (this._scrollbarWidth === null) {\r\n\r\n            // https://github.com/sonicdoe/measure-scrollbar/blob/master/index.js\r\n\r\n            const div = document.createElement('div');\r\n\r\n            div.style.width = '100px';\r\n            div.style.height = '100px';\r\n            div.style.overflow = 'scroll';\r\n            div.style.position = 'absolute';\r\n            div.style.top = '-9999px';\r\n\r\n            document.body.appendChild(div);\r\n\r\n            this._scrollbarWidth = div.offsetWidth - div.clientWidth;\r\n\r\n            document.body.removeChild(div);\r\n        }\r\n\r\n        return this._scrollbarWidth;\r\n    }\r\n\r\n    /**\r\n     * TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n     * Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\r\n     * Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\r\n     * The safest way to check this is to intentionally set a negative offset,\r\n     * and then verify that the subsequent \"scroll\" event matches the negative offset.\r\n     * If it does not match, then we can assume a non-standard RTL scroll implementation.\r\n     *\r\n     * From: https://github.com/bvaughn/react-window/blob/master/src/domHelpers.js\r\n     */\r\n    public static get rtlOffsetType(): RtlOffsetType {\r\n        if (DomUtils._rtlOffsetType)\r\n            return DomUtils._rtlOffsetType;\r\n\r\n        const outerDiv = document.createElement('div');\r\n        const outerStyle = outerDiv.style;\r\n        outerStyle.width = '50px';\r\n        outerStyle.height = '50px';\r\n        outerStyle.overflow = 'scroll';\r\n        outerStyle.direction = 'rtl';\r\n\r\n        const innerDiv = document.createElement('div');\r\n        const innerStyle = innerDiv.style;\r\n        innerStyle.width = '100px';\r\n        innerStyle.height = '100px';\r\n\r\n        outerDiv.appendChild(innerDiv);\r\n\r\n        document.body.appendChild(outerDiv);\r\n\r\n        if (outerDiv.scrollLeft > 0) {\r\n            DomUtils._rtlOffsetType = 'positive-descending';\r\n        } else {\r\n            outerDiv.scrollLeft = 1;\r\n            if (outerDiv.scrollLeft === 0) {\r\n                DomUtils._rtlOffsetType = 'negative';\r\n            } else {\r\n                DomUtils._rtlOffsetType = 'positive-ascending';\r\n            }\r\n        }\r\n\r\n        document.body.removeChild(outerDiv);\r\n\r\n        return DomUtils._rtlOffsetType;\r\n    }\r\n\r\n    private static _scrollbarWidth: number = null;\r\n\r\n    private static _rtlOffsetType: RtlOffsetType;\r\n}","export enum Keys {\r\n    PageUp = 'PageUp',\r\n    PageDown = 'PageDown',\r\n    End ='End',\r\n    Home ='Home',\r\n}\r\n\r\nexport interface KeyEvent {\r\n    key: string;\r\n}","import * as React from 'react';\r\nimport { Constructor } from '../types';\r\n\r\nexport class ReactUtils {\r\n\r\n    public static addPropsToChildren(children: React.ReactNode, createPropsToAdd: (child: React.ReactElement<any>, index?: number) => any) {\r\n\r\n        // https://stackoverflow.com/questions/32370994/how-to-pass-props-to-this-props-children\r\n        return React.Children.map(children, (child: React.ReactElement<any>, index: number) => {\r\n            const propsToAdd = createPropsToAdd(child, index);\r\n            return React.cloneElement(child, propsToAdd);\r\n        });\r\n    }    \r\n\r\n    public static childrenOfType<T>(parentElement: any, type: Constructor<T>): T[] {\r\n        const children = ReactUtils.childrenArray(parentElement);\r\n        if (!children)\r\n            return null;\r\n        return children.filter(child => ReactUtils.elementInstanceOf(child, type)) as any;\r\n    }\r\n\r\n    /**\r\n     * Return the only child that matches the given type.  \r\n     * If more than one child matches an error is thrown.  \r\n     * \r\n     * Notice that this function gives no indication of the total number of\r\n     * children, only the number of matching children.\r\n     * @param parentElement \r\n     * @param type \r\n     */\r\n    public static singleChildOfType<T>(parentElement: any, type: Constructor<T>): T {\r\n        const matchingChildren = ReactUtils.childrenOfType(parentElement, type);\r\n        if (!matchingChildren || !matchingChildren.length)\r\n            return null;\r\n\r\n        if (matchingChildren.length > 1)\r\n            throw new Error(`Only one ${type.name} child element is allowed.`);\r\n\r\n        return matchingChildren[0] as any;\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private static childrenArray(parentElement: any): React.ReactChild[] {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (Array.isArray(children))\r\n            return children;\r\n\r\n        return React.Children.map(children, child => child);\r\n    }\r\n\r\n    private static elementInstanceOf<T>(elem: any, type: Constructor<T>): elem is T {\r\n        if (!elem)\r\n            return false;\r\n        if (!elem.type)\r\n            return false;\r\n\r\n        // https://stackoverflow.com/questions/39387405/using-instanceof-to-test-for-base-class-of-a-react-component\r\n        // https://stackoverflow.com/questions/14486110/how-to-check-if-a-javascript-class-inherits-another-without-creating-an-obj\r\n        // https://stackoverflow.com/questions/2464426/whats-the-difference-between-isprototypeof-and-instanceof-in-javascript\r\n\r\n        return elem.type === type ||\r\n            elem.type.prototype instanceof type ||\r\n            Object.prototype.isPrototypeOf.call(type, elem.type);\r\n    }    \r\n}","\r\nexport interface ElementHeights {\r\n    height: string | number;\r\n    minHeight: string | number;\r\n    maxHeight: string | number;\r\n}\r\n\r\nexport interface TableHeights {\r\n    total: string | number;\r\n    head: string | number;\r\n}\r\n\r\nexport type ComponentWithStyle = React.Component<{ style?: React.CSSProperties }>;\r\n\r\nexport class SizeUtils {\r\n\r\n    public static cssSizeString(size: any): string {\r\n        if (Number.isFinite(size))\r\n            return size + 'px';\r\n        return size;\r\n    }\r\n\r\n    public static geElementHeights(component: ComponentWithStyle, defaultHeight: number | string): ElementHeights {\r\n        const style = (component && component.props.style) || {};\r\n\r\n        let height = style.height;\r\n        let minHeight = style.minHeight;\r\n        let maxHeight = style.maxHeight;\r\n\r\n        if (height === undefined && minHeight === undefined) {\r\n            height = defaultHeight;\r\n        }\r\n\r\n        height = this.cssSizeString(height);\r\n        minHeight = this.cssSizeString(minHeight);\r\n        maxHeight = this.cssSizeString(maxHeight);\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    public static getBodyHeights(table: ComponentWithStyle, head: ComponentWithStyle, defaultHeights: TableHeights): ElementHeights {\r\n\r\n        const totalHeights = this.geElementHeights(table, defaultHeights.total);\r\n        const headHeight = this.getHeadHeight(head, defaultHeights.head);\r\n        const bodyHeights = this.geElementHeights(table, undefined);\r\n\r\n        let height = bodyHeights.height || totalHeights.height;\r\n        let minHeight = bodyHeights.minHeight || totalHeights.minHeight;\r\n        let maxHeight = bodyHeights.maxHeight || totalHeights.maxHeight;\r\n\r\n        if (headHeight) {\r\n            height = `calc(${height} - ${headHeight})`;\r\n            if (minHeight)\r\n                minHeight = `calc(${minHeight} - ${headHeight})`;\r\n            if (maxHeight)\r\n                maxHeight = `calc(${maxHeight} - ${headHeight})`;\r\n        }\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    private static getHeadHeight(head: ComponentWithStyle, defaultHeight: string | number): string | number {\r\n        if (head) {\r\n            return this.geElementHeights(head, defaultHeight).height;\r\n        }\r\n        return 0;\r\n    }    \r\n}","\r\nexport function isNullOrUndefined(val: any): boolean {\r\n    return val === null || val === undefined;\r\n}\r\n\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n    if (Array.isArray(val))\r\n        return val;\r\n\r\n    return [val];\r\n}\r\n\r\nexport function range(count: number): number[] {\r\n    // https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp\r\n    return [...Array(count || 0).keys()];\r\n}\r\n\r\nexport function areShallowEqual(a: object, b: object) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n\r\n    if (a === null || a === undefined || b === null || b === undefined) {\r\n        return false;\r\n    }\r\n\r\n    const keysA = Object.keys(a);\r\n    const keysB = Object.keys(b);\r\n\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n\r\n    for (const key of keysA) {\r\n        if ((a as any)[key] !== (b as any)[key])\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}","export * from './domUtils';\r\nexport * from './keyboard';\r\nexport * from './reactUtils';\r\nexport * from './sizeUtils';\r\nexport * from './utils';\r\n","import * as React from 'react';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\n\r\nexport interface CustomScrollbarsProps {\r\n    style?: React.CSSProperties;\r\n    onScroll?: any;\r\n    forwardedRef: React.RefFunction<any> | React.RefObject<any>;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nclass CustomScrollbarsInner extends React.PureComponent<CustomScrollbarsProps> {\r\n    public render() {\r\n\r\n        // https://github.com/bvaughn/react-window/issues/110#issuecomment-469061213\r\n\r\n        const refSetter = (elem: any) => {\r\n            if (!this.props.forwardedRef)\r\n                return;\r\n\r\n            const ref = (elem || {}).view;\r\n            if (typeof this.props.forwardedRef === 'function') {\r\n                this.props.forwardedRef(ref);\r\n            } else {\r\n                (this.props.forwardedRef as any).current = ref;\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Scrollbars\r\n                ref={refSetter}\r\n                style={{\r\n                    ...this.props.style,\r\n                    overflow: 'hidden',\r\n                    direction: 'ltr'\r\n                }}\r\n                onScroll={this.props.onScroll}\r\n            >\r\n                {this.props.children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport const CustomScrollbars = React.forwardRef((props, ref) => (\r\n    <CustomScrollbarsInner {...props} forwardedRef={ref as any} />\r\n));\r\nCustomScrollbars.displayName = 'CustomScrollbars';","import * as React from 'react';\r\n\r\nclass ErrorBoundaryState {\r\n    public hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<{}, ErrorBoundaryState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n        this.setState({ hasError: true });\r\n        console.error(error);  // eslint-disable-line no-console\r\n    }\r\n\r\n    public render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <span>X</span>\r\n            );\r\n        }\r\n        return this.props.children !== undefined ? this.props.children : null;\r\n    }\r\n}","export * from './CustomScrollbars';\r\nexport * from './ErrorBoundary';\r\n","module.exports = require(\"@emotion/styled-base\");","module.exports = require(\"react-virtualized-auto-sizer\");","export * from './List';\r\nexport * from './NonVirtualList';\r\nexport * from './VirtualList';\r\n","import * as React from 'react';\r\nimport { CustomScrollbars } from '../internal';\r\nimport { ListProps } from './List';\r\n\r\nexport class NonVirtualList extends React.PureComponent<ListProps> {\r\n\r\n    private get isHorizontal(): boolean {\r\n        return this.props.layout === 'horizontal';\r\n    }\r\n\r\n    private disableScrollEvents = false;\r\n\r\n    private readonly listRef = React.createRef<HTMLDivElement>();\r\n\r\n    public scrollTo = (scrollOffset: number) => {\r\n        const currentInner = this.listRef.current;\r\n        if (currentInner) {\r\n\r\n            if (scrollOffset === undefined)\r\n                return;\r\n\r\n            const currentOffset = (this.isHorizontal ? currentInner.scrollLeft : currentInner.scrollTop);\r\n            if (scrollOffset === currentOffset)\r\n                return;\r\n\r\n            this.disableScrollEvents = true;\r\n            currentInner.scrollTo({\r\n                top: (this.isHorizontal ? undefined : scrollOffset),\r\n                left: (this.isHorizontal ? scrollOffset : undefined)\r\n            });\r\n        }\r\n    };\r\n\r\n    public render() {\r\n\r\n        const listStyle: React.CSSProperties = {\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n            direction: this.props.dir,\r\n            boxSizing: 'content-box',\r\n            outline: 'none',\r\n            overflow: 'auto',\r\n            [this.isHorizontal ? 'overflowY' : 'overflowX']: 'hidden'\r\n        };\r\n\r\n        if (this.isHorizontal) {\r\n            listStyle.display = 'flex';\r\n        }\r\n\r\n        return React.createElement(this.getListElementType() as any,\r\n            {\r\n                ref: this.listRef,\r\n                style: listStyle,\r\n                onScroll: this.handleOnScroll\r\n            },\r\n\r\n            // rows\r\n            Array(this.props.itemCount).fill(0).map((_, index) => (\r\n                <div\r\n                    key={index}\r\n                    style={{\r\n                        [this.isHorizontal ? 'minWidth' : 'minHeight']: this.props.itemSize(index),\r\n                        [this.isHorizontal ? 'height' : 'width']: (this.isHorizontal ? this.props.height : this.props.width)\r\n                    }}\r\n                >\r\n\r\n                    {/* content */}\r\n                    {this.props.children(index)}\r\n\r\n                </div>\r\n            ))\r\n        );\r\n    }\r\n\r\n    private handleOnScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n        if (this.disableScrollEvents) {\r\n            this.disableScrollEvents = false;\r\n            return;\r\n        }\r\n\r\n        if (!this.props.onScroll)\r\n            return;\r\n\r\n        const { scrollTop, scrollLeft } = e.currentTarget;\r\n        this.props.onScroll(this.isHorizontal ? scrollLeft : scrollTop);\r\n    };\r\n\r\n    private getListElementType() {\r\n        return this.props.customScrollbar ? CustomScrollbars : 'div';\r\n    }\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { VariableSizeList } from 'react-window';\r\nimport { CustomScrollbars } from '../internal';\r\nimport { IMap } from '../types';\r\nimport { KeyEvent, Keys } from '../utils';\r\nimport { List, ListProps } from './List';\r\n\r\nconst scrollKeys: IMap<boolean> = {\r\n    [Keys.PageUp]: true,\r\n    [Keys.PageDown]: true,\r\n    [Keys.End]: true,\r\n    [Keys.Home]: true,\r\n};\r\n\r\nexport interface VirtualListProps extends ListProps {\r\n    keyScroll?: boolean;\r\n}\r\n\r\nexport class VirtualList extends React.PureComponent<VirtualListProps> implements List {\r\n\r\n    private tableRef = React.createRef<VariableSizeList>();\r\n    private tableInnerRef = React.createRef<HTMLElement>();\r\n    private tableOuterRef = React.createRef<HTMLElement>();\r\n\r\n    public refresh() {\r\n        if (this.tableRef.current) {\r\n            this.tableRef.current.resetAfterIndex(0, false);\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    public scrollTo(offset: number): void {\r\n        if (this.tableRef.current) {\r\n            this.tableRef.current.scrollTo(offset);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <VariableSizeList\r\n                ref={this.tableRef}\r\n                innerRef={this.tableInnerRef}\r\n                outerRef={this.tableOuterRef}\r\n                style={Object.assign({ outline: 'none' }, this.props.style)}\r\n                outerElementType={this.getOuterElementType()}\r\n                direction={this.props.dir}\r\n                layout={this.props.layout}\r\n                height={this.props.height}\r\n                width={this.props.width}\r\n                itemCount={this.props.itemCount}\r\n                itemSize={this.props.itemSize}\r\n                overscanCount={this.props.overscan}\r\n                {...this.getKeyScrollProps()}\r\n            >\r\n                {({ index, style }) => this.renderRow(index, style)}\r\n            </VariableSizeList>\r\n        );\r\n    }\r\n\r\n    private renderRow(index: number, style: React.CSSProperties) {\r\n        const row = this.props.children(index);\r\n\r\n        return React.cloneElement(row, {\r\n            style: {\r\n                ...row.props.style,\r\n                ...style\r\n            }\r\n        });\r\n    }\r\n\r\n    //\r\n    // scroll with keys\r\n    //\r\n\r\n    private getKeyScrollProps() {\r\n        if (this.props.keyScroll === false)\r\n            return {};\r\n        return {\r\n            onMouseEnter: this.registerKeyHandlers,\r\n            onMouseLeave: this.removeKeyHandlers,\r\n            onKeyDown: this.scrollByKey\r\n        };\r\n    }\r\n\r\n    private registerKeyHandlers = () => {\r\n        window.addEventListener('keydown', this.scrollByKey);\r\n    };\r\n\r\n    private removeKeyHandlers = () => {\r\n        window.removeEventListener('keydown', this.scrollByKey);\r\n    };\r\n\r\n    private scrollByKey = ({ key }: KeyEvent) => {\r\n\r\n        // https://dev.to/dance2die/scrolling-with-page-up-down-keys-in-react-window-31ei\r\n\r\n        if (!scrollKeys[key])\r\n            return;\r\n\r\n        if (!this.tableRef.current || !this.tableInnerRef.current || !this.tableOuterRef.current)\r\n            return;\r\n\r\n        const scrollElement = (this.props.customScrollbar ? this.tableOuterRef.current : this.tableRef.current);\r\n        const table = (ReactDOM.findDOMNode(scrollElement) as HTMLElement);\r\n        const currentOffset = table.scrollTop;\r\n        const bodyHeight = table.clientHeight;\r\n        const pageSize = bodyHeight * 0.85;\r\n        const minOffset = 0.1;\r\n        const maxOffset = this.tableInnerRef.current.clientHeight;\r\n\r\n        const offsetByKey: IMap<number> = {\r\n            [Keys.PageUp]: Math.max(minOffset, currentOffset - pageSize),\r\n            [Keys.PageDown]: Math.min(currentOffset + pageSize, maxOffset),\r\n            [Keys.End]: maxOffset,\r\n            [Keys.Home]: minOffset,\r\n        };\r\n\r\n        this.tableRef.current.scrollTo(offsetByKey[key]);\r\n    };\r\n\r\n    private getOuterElementType() {\r\n        return this.props.customScrollbar ? CustomScrollbars : undefined;\r\n    }\r\n}","module.exports = require(\"react-custom-scrollbars\");","module.exports = require(\"emotion-theming\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-window\");","module.exports = require(\"lodash.flattendeep\");","import * as React from 'react';\r\nimport { DocDir } from '../types';\r\n\r\n// inspired by: https://github.com/Flipkart/recyclerlistview/blob/master/src/platform/web/viewrenderer/ViewRenderer.tsx\r\n\r\nexport interface VirtualCellProps {\r\n    height: number;\r\n    direction: DocDir;\r\n    width: number;\r\n    left: number;\r\n    top: number;\r\n    children: React.ReactNode;\r\n}\r\n\r\nexport class VirtualCell extends React.PureComponent<VirtualCellProps> {\r\n    public render() {\r\n\r\n        const rightOrLeft = this.props.direction === 'rtl' ? 'right' : 'left';\r\n\r\n        // https://rtl-css.net/tutorial/quick-tip-rtling-css3-transform-functions-translate-and-translatex\r\n        const transformModifier = (this.props.direction === 'rtl') ? -1 : 1;\r\n        const transform = `translate(${this.props.left * transformModifier}px,${this.props.top}px)`;\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    height: this.props.height,\r\n                    width: this.props.width,\r\n                    position: \"absolute\",\r\n                    [rightOrLeft]: 0,\r\n                    top: 0,\r\n                    willChange: \"transform\",\r\n                    transform\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import { IMap, SizeCallback } from '../types';\r\n\r\n// based on:\r\n// https://github.com/bvaughn/react-window/blob/master/src/VariableSizeGrid.js\r\n// https://github.com/fulcrumapp/react-virtual-grid/blob/master/src/grid-calculator.js\r\n// https://github.com/ranneyd/sticky-table/blob/master/src/useVirtual.js\r\n\r\nexport type ElementType = 'column' | 'row';\r\n\r\nexport interface ElementInfo {\r\n    index: number;\r\n    basePosition: number;\r\n    size: number;\r\n}\r\n\r\nclass CalcData {\r\n    public cache: IMap<ElementInfo> = {};\r\n    public lastMeasuredIndex = -1;\r\n}\r\n\r\ntype CalcDataMap = {\r\n    [key in ElementType]: CalcData;\r\n};\r\n\r\nexport class WindowCalculator {\r\n\r\n    private readonly data: CalcDataMap = {\r\n        column: new CalcData(),\r\n        row: new CalcData()\r\n    };\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public elementsInRange(\r\n        elementType: ElementType,\r\n        fromPosition: number,\r\n        toPosition: number,\r\n        elementsOverscan: number,\r\n        estimatedElementSize: number,\r\n        calculateElementSize: SizeCallback,\r\n        totalElementsCount: number\r\n    ) {\r\n\r\n        let fromIndex = this.findNearestItem(\r\n            elementType,\r\n            fromPosition,\r\n            totalElementsCount,\r\n            estimatedElementSize,\r\n            calculateElementSize\r\n        );\r\n        fromIndex = Math.max(0, fromIndex - elementsOverscan);\r\n\r\n        let toIndex = this.findNearestItem(\r\n            elementType,\r\n            toPosition,\r\n            totalElementsCount,\r\n            estimatedElementSize,\r\n            calculateElementSize\r\n        );\r\n        toIndex = Math.min(toIndex + elementsOverscan, totalElementsCount);\r\n\r\n        const info: ElementInfo[] = [];\r\n        for (let i = fromIndex; i <= toIndex; i++) {\r\n            info.push(this.getElementInfo(\r\n                elementType,\r\n                i,\r\n                estimatedElementSize,\r\n                calculateElementSize\r\n            ));\r\n        }\r\n        return info;\r\n    }\r\n\r\n    public getEstimatedTotalSize(elementType: ElementType, estimatedElementSize: number, elementsCount: number) {\r\n\r\n        let { lastMeasuredIndex } = this.data[elementType];\r\n        const { cache } = this.data[elementType];\r\n\r\n        // Edge case check for when the number of items decreases while a scroll is in progress.\r\n        // https://github.com/bvaughn/react-window/pull/138\r\n        if (lastMeasuredIndex >= elementsCount) {\r\n            lastMeasuredIndex = elementsCount - 1;\r\n        }\r\n\r\n        let totalSizeOfMeasuredElements = 0;\r\n        if (lastMeasuredIndex >= 0) {\r\n            const lastMeasuredElemInfo = cache[lastMeasuredIndex];\r\n            totalSizeOfMeasuredElements = lastMeasuredElemInfo.basePosition + lastMeasuredElemInfo.size;\r\n        }\r\n\r\n        const numUnmeasuredElements = elementsCount - lastMeasuredIndex - 1;\r\n        const totalSizeOfUnmeasuredElements = numUnmeasuredElements * estimatedElementSize;\r\n\r\n        return totalSizeOfMeasuredElements + totalSizeOfUnmeasuredElements;\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private findNearestItem(\r\n        elementType: ElementType,\r\n        position: number,\r\n        maxIndex: number,\r\n        estimatedElementSize: number,\r\n        calculateElementSize: SizeCallback\r\n    ) {\r\n\r\n        const { lastMeasuredIndex, cache } = this.data[elementType];\r\n        const lastMeasuredPosition = cache[lastMeasuredIndex]?.basePosition ?? -1;\r\n\r\n        if (lastMeasuredPosition >= position) {\r\n\r\n            // If we've already measured items within this range just use a binary search as it's faster.\r\n            return this.findNearestItemBinarySearch(\r\n                elementType,\r\n                lastMeasuredIndex,\r\n                0,\r\n                position,\r\n                estimatedElementSize,\r\n                calculateElementSize\r\n            );\r\n\r\n        } else {\r\n\r\n            // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\r\n            // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\r\n            // The overall complexity for this approach is O(log n).\r\n            return this.findNearestItemExponentialSearch(\r\n                elementType,\r\n                Math.max(lastMeasuredIndex, 0),\r\n                maxIndex,\r\n                position,\r\n                estimatedElementSize,\r\n                calculateElementSize\r\n            );\r\n        }\r\n    };\r\n\r\n    private findNearestItemBinarySearch(\r\n        elementType: ElementType,\r\n        high: number,\r\n        low: number,\r\n        position: number,\r\n        estimatedElementSize: number,\r\n        calculateElementSize: SizeCallback\r\n    ) {\r\n        while (low <= high) {\r\n            const middle = low + Math.floor((high - low) / 2);\r\n            const currentPosition = this.getElementInfo(elementType, middle, estimatedElementSize, calculateElementSize).basePosition;\r\n\r\n            if (currentPosition === position) {\r\n                return middle;\r\n            } else if (currentPosition < position) {\r\n                low = middle + 1;\r\n            } else if (currentPosition > position) {\r\n                high = middle - 1;\r\n            }\r\n        }\r\n\r\n        if (low > 0) {\r\n            return low - 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    private findNearestItemExponentialSearch(\r\n        elementType: ElementType,\r\n        index: number,\r\n        maxIndex: number,\r\n        position: number,\r\n        estimatedElementSize: number,\r\n        calculateElementSize: SizeCallback\r\n    ) {\r\n        let interval = 1;\r\n\r\n        while (\r\n            index < maxIndex &&\r\n            this.getElementInfo(elementType, index, estimatedElementSize, calculateElementSize).basePosition < position\r\n        ) {\r\n            index += interval;\r\n            interval *= 2;\r\n        }\r\n\r\n        return this.findNearestItemBinarySearch(\r\n            elementType,\r\n            Math.min(index, maxIndex - 1),\r\n            Math.floor(index / 2),\r\n            position,\r\n            estimatedElementSize,\r\n            calculateElementSize\r\n        );\r\n    };\r\n\r\n    private getElementInfo(\r\n        elementType: ElementType,\r\n        elementIndex: number,\r\n        estimatedElementSize: number,\r\n        calculateElementSize: SizeCallback\r\n    ) {\r\n\r\n        const { lastMeasuredIndex, cache } = this.data[elementType];\r\n\r\n        // fill missing cache entries\r\n        if (elementIndex > lastMeasuredIndex) {\r\n\r\n            let position = 0;\r\n\r\n            // skipped already cached entries\r\n            if (lastMeasuredIndex !== -1) {\r\n                const elementInfo = cache[lastMeasuredIndex];\r\n                position = elementInfo.basePosition + elementInfo.size;\r\n            }\r\n\r\n            // add new cache entries\r\n            for (let index = (lastMeasuredIndex + 1); index <= elementIndex; index++) {\r\n                const size = cache[index]?.size ?? calculateElementSize?.(index) ?? estimatedElementSize;\r\n\r\n                cache[index] = {\r\n                    index,\r\n                    basePosition: position,\r\n                    size,\r\n                };\r\n\r\n                position += size;\r\n            }\r\n\r\n            this.data[elementType].lastMeasuredIndex = elementIndex;\r\n        }\r\n\r\n        return cache[elementIndex];\r\n    }\r\n}","import * as React from 'react';\r\nimport { DocDir, ScrollEvent, SizeCallback } from '../types';\r\nimport { DomUtils, areShallowEqual } from '../utils';\r\nimport { VirtualTile, VirtualTileProps } from './VirtualTile';\r\n\r\nexport enum TileKey {\r\n    HeaderLeft = 'Header_Left',\r\n    HeaderCenter = 'Header_Center',\r\n    HeaderRight = 'Header_Right',\r\n    BodyLeft = 'Body_Left',\r\n    BodyCenter = 'Body_Center',\r\n    BodyRight = 'Body_Right',\r\n    FooterLeft = 'Footer_Left',\r\n    FooterCenter = 'Footer_Center',\r\n    FooterRight = 'Footer_Right'\r\n}\r\n\r\nexport interface TilePosition {\r\n    vertical: 'header' | 'body' | 'footer';\r\n    horizontal: 'left' | 'center' | 'right';\r\n}\r\n\r\nexport interface RenderCellProps {\r\n    absColIndex: number;\r\n    absRowIndex: number;\r\n    relColIndex: number;\r\n    relRowIndex: number;\r\n    tileKey: TileKey;\r\n    tilePosition: TilePosition;\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\nexport class VirtualGridProps {\r\n\r\n    public onScroll?: (e: ScrollEvent) => void;\r\n\r\n    public height: number;\r\n    public width: number;\r\n    public columnCount: number;\r\n    public rowCount: number;\r\n    public estimatedColumnWidth: number;\r\n    public estimatedRowHeight: number;\r\n    public columnWidth?: SizeCallback;\r\n    public rowHeight?: SizeCallback;\r\n    public overscanColumnsCount?= 0;\r\n    public overscanRowCount?= 0;\r\n\r\n    public fixedHeaderHeight?= 0;\r\n    public fixedFooterHeight?= 0;\r\n    public fixedLeftWidth?= 0;\r\n    public fixedRightWidth?= 0;\r\n\r\n    public style?: React.CSSProperties;\r\n    public tileStyle?: (tileKey: TileKey) => React.CSSProperties;\r\n\r\n    public children: (props: RenderCellProps) => React.ReactNode;\r\n}\r\n\r\ninterface TileEntry {\r\n    ref: React.RefObject<VirtualTile>;\r\n    rowIndexOffset: number;\r\n    columnIndexOffset: number;\r\n    props: Omit<VirtualTileProps, \"children\">;\r\n}\r\n\r\ntype TilesMap = {\r\n    [key in TileKey]: TileEntry\r\n};\r\n\r\nclass VirtualGridState {\r\n    public scrollTop = 0;\r\n    public scrollLeft = 0;\r\n}\r\n\r\nexport class VirtualGrid extends React.PureComponent<VirtualGridProps, VirtualGridState> {\r\n\r\n    public static defaultProps: unknown = new VirtualGridProps();\r\n\r\n    private get direction(): DocDir {\r\n        return this.props.style?.direction === 'rtl' ? 'rtl' : 'ltr';\r\n    }\r\n\r\n    private get activeTiles(): TileKey[] {\r\n        return Object.keys(this.tiles) as TileKey[];\r\n    }\r\n\r\n    private tiles: Partial<TilesMap> = {};\r\n\r\n    constructor(props: VirtualGridProps) {\r\n        super(props);\r\n        this.state = new VirtualGridState();\r\n    }\r\n\r\n    //\r\n    // life cycle\r\n    //\r\n\r\n    public componentDidMount() {\r\n        this.tiles = this.createTilesMap();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: VirtualGridProps) {\r\n        if (!areShallowEqual(this.props, prevProps)) {\r\n            this.tiles = this.createTilesMap();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        const scrollableHeight = this.getScrollableAreaHeight();\r\n        const scrollableWidth = this.getScrollableAreaWidth();\r\n\r\n        return (\r\n            <div\r\n                className={this.createClassName('Container')}\r\n                style={{\r\n                    direction: this.direction,\r\n                    position: 'relative',\r\n                    height: this.getContainerHeight(scrollableHeight, scrollableWidth),\r\n                    width: this.getContainerWidth(scrollableHeight, scrollableWidth),\r\n                    overflow: 'auto',\r\n                    ...this.props.style\r\n                }}\r\n                onScroll={this.handleScroll}\r\n            >\r\n                <div\r\n                    className={this.createClassName('ScrollableArea')}\r\n                    style={{\r\n                        height: scrollableHeight,\r\n                        width: scrollableWidth\r\n                    }}\r\n                >\r\n                    {this.activeTiles.map(this.renderTile)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderTile = (tileKey: TileKey): React.ReactNode => {\r\n        const { ref, props, rowIndexOffset, columnIndexOffset } = this.tiles[tileKey];\r\n        return (\r\n            <VirtualTile\r\n                key={tileKey}\r\n                ref={ref}\r\n                {...props}\r\n                top={props.top + this.state.scrollTop}\r\n                left={props.left + this.state.scrollLeft}\r\n            >\r\n                {renderProps => this.props.children({\r\n                    tileKey,\r\n                    tilePosition: this.getTilePosition(tileKey),\r\n                    absRowIndex: renderProps.rowIndex + rowIndexOffset,\r\n                    absColIndex: renderProps.colIndex + columnIndexOffset,\r\n                    relRowIndex: renderProps.rowIndex,\r\n                    relColIndex: renderProps.colIndex,\r\n                    height: renderProps.height,\r\n                    width: renderProps.width\r\n                })}\r\n            </VirtualTile>\r\n        );\r\n    };\r\n\r\n    //\r\n    // event handlers\r\n    //\r\n\r\n    private handleScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n        let { scrollTop, scrollLeft } = e.currentTarget;\r\n        const { scrollHeight, scrollWidth, clientHeight, clientWidth } = e.currentTarget;\r\n\r\n        // RTL support\r\n        if (this.direction === 'rtl') {\r\n            switch (DomUtils.rtlOffsetType) {\r\n                case 'negative':\r\n                    scrollLeft = -scrollLeft;\r\n                    break;\r\n                case 'positive-ascending':\r\n                    // noop\r\n                    break;\r\n                case 'positive-descending':\r\n                default:\r\n                    scrollLeft = scrollWidth - clientWidth - scrollLeft;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // fix scroll offset to prevent \"over scroll\"\r\n        scrollTop = Math.min(scrollTop, scrollHeight - clientHeight);\r\n        scrollLeft = Math.min(scrollLeft, scrollWidth - clientWidth);\r\n\r\n        // restore tiles position\r\n        this.setState({\r\n            scrollTop,\r\n            scrollLeft\r\n        });\r\n\r\n        // scroll tiles content\r\n        for (const tileKey of this.activeTiles) {\r\n            const { ref } = this.tiles[tileKey];\r\n            ref.current.scroll({\r\n                scrollTop,\r\n                scrollLeft\r\n            });\r\n        }\r\n    };\r\n\r\n    //\r\n    // render helpers\r\n    //\r\n\r\n    private createTilesMap(): Partial<TilesMap> {\r\n        this.resetTiles();\r\n\r\n        const map: Partial<TilesMap> = {};\r\n\r\n        const hasHeader = !!this.props.fixedHeaderHeight;\r\n        const hasFooter = !!this.props.fixedFooterHeight;\r\n        const hasFixedLeftColumn = !!this.props.fixedLeftWidth;\r\n        const hasFixedRightColumn = !!this.props.fixedRightWidth;\r\n\r\n        const createTilesMapEntry = this.createTileMapEntryFactory();\r\n\r\n        // header\r\n\r\n        if (hasHeader) {\r\n\r\n            if (hasFixedLeftColumn) {\r\n                map[TileKey.HeaderLeft] = createTilesMapEntry(TileKey.HeaderLeft);\r\n            }\r\n\r\n            map[TileKey.HeaderCenter] = createTilesMapEntry(TileKey.HeaderCenter);\r\n\r\n            if (hasFixedRightColumn) {\r\n                map[TileKey.HeaderRight] = createTilesMapEntry(TileKey.HeaderRight);\r\n            }\r\n        }\r\n\r\n        // body\r\n\r\n        if (hasFixedLeftColumn) {\r\n            map[TileKey.BodyLeft] = createTilesMapEntry(TileKey.BodyLeft);\r\n        }\r\n\r\n        map[TileKey.BodyCenter] = createTilesMapEntry(TileKey.BodyCenter);\r\n\r\n        if (hasFixedRightColumn) {\r\n            map[TileKey.BodyRight] = createTilesMapEntry(TileKey.BodyRight);\r\n        }\r\n\r\n        // footer\r\n\r\n        if (hasFooter) {\r\n\r\n            if (hasFixedLeftColumn) {\r\n                map[TileKey.FooterLeft] = createTilesMapEntry(TileKey.FooterLeft);\r\n            }\r\n\r\n            map[TileKey.FooterCenter] = createTilesMapEntry(TileKey.FooterCenter);\r\n\r\n            if (hasFixedRightColumn) {\r\n                map[TileKey.FooterRight] = createTilesMapEntry(TileKey.FooterRight);\r\n            }\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    private createTileMapEntryFactory() {\r\n\r\n        // calculate base dimensions\r\n\r\n        const scrollableHeight = this.getScrollableAreaHeight();\r\n        const scrollableWidth = this.getScrollableAreaWidth();\r\n\r\n        const horizontalScrollbarWidth = this.getHorizontalScrollbarWidth(scrollableWidth);\r\n        const verticalScrollbarWidth = this.getVerticalScrollbarWidth(scrollableHeight);\r\n\r\n        const containerHeight = this.getContainerHeight(scrollableHeight, scrollableWidth);\r\n        const containerWidth = this.getContainerWidth(scrollableHeight, scrollableWidth);\r\n\r\n        const headerHeight = this.props.fixedHeaderHeight;\r\n        const footerHeight = this.props.fixedFooterHeight;\r\n        const bodyHeight = containerHeight - horizontalScrollbarWidth - headerHeight - footerHeight;\r\n\r\n        const bodyRowsCount = this.props.rowCount - (headerHeight && 1) - (footerHeight && 1);\r\n\r\n        const leftWidth = this.props.fixedLeftWidth;\r\n        const rightWidth = this.props.fixedRightWidth;\r\n        const centerWidth = containerWidth - verticalScrollbarWidth - leftWidth - rightWidth;\r\n\r\n        const centerColumnsCount = this.props.columnCount - (leftWidth && 1) - (rightWidth && 1);\r\n\r\n        // create factory method\r\n\r\n        return (tileKey: TileKey): TileEntry => {\r\n\r\n            const { vertical, horizontal } = this.getTilePosition(tileKey);\r\n\r\n            const isVerticalFixed = vertical === 'header' || vertical === 'footer';\r\n            const isHorizontalFixed = horizontal === 'left' || horizontal === 'right';\r\n            const isCorner = isVerticalFixed && isHorizontalFixed;\r\n\r\n            return {\r\n                ref: React.createRef<VirtualTile>(),\r\n\r\n                rowIndexOffset: vertical === 'header' ? 0 :\r\n                    vertical === 'body' ? (headerHeight && 1) :\r\n                        bodyRowsCount + (headerHeight && 1),\r\n\r\n                columnIndexOffset: horizontal === 'left' ? 0 :\r\n                    horizontal === 'center' ? (leftWidth && 1) :\r\n                        centerColumnsCount + (leftWidth && 1),\r\n\r\n                props: {\r\n                    className: this.createClassName(tileKey),\r\n\r\n                    scrollability: isCorner ? 'none' :\r\n                        isVerticalFixed ? 'horizontal' :\r\n                            isHorizontalFixed ? 'vertical' :\r\n                                'both',\r\n\r\n                    direction: this.direction,\r\n\r\n                    height: vertical === 'header' ? headerHeight :\r\n                        vertical === 'body' ? bodyHeight :\r\n                            footerHeight,\r\n\r\n                    width: horizontal === 'left' ? leftWidth :\r\n                        horizontal === 'center' ? centerWidth :\r\n                            rightWidth,\r\n\r\n                    columnCount: horizontal === 'left' ? 1 :\r\n                        horizontal === 'center' ? centerColumnsCount :\r\n                            1,\r\n\r\n                    rowCount: vertical === 'header' ? 1 :\r\n                        vertical === 'body' ? bodyRowsCount :\r\n                            1,\r\n\r\n                    estimatedColumnWidth: horizontal === 'left' ? leftWidth :\r\n                        horizontal === 'center' ? this.props.estimatedColumnWidth :\r\n                            rightWidth,\r\n\r\n                    estimatedRowHeight: vertical === 'header' ? headerHeight :\r\n                        vertical === 'body' ? this.props.estimatedRowHeight :\r\n                            footerHeight,\r\n\r\n                    top: vertical === 'header' ? 0 :\r\n                        vertical === 'body' ? headerHeight :\r\n                            headerHeight + bodyHeight,\r\n\r\n                    left: horizontal === 'left' ? 0 :\r\n                        horizontal === 'center' ? leftWidth :\r\n                            leftWidth + centerWidth,\r\n\r\n                    columnWidth: horizontal === 'left' ? null :\r\n                        horizontal === 'center' ? this.props.columnWidth :\r\n                            null,\r\n\r\n                    rowHeight: vertical === 'header' ? null :\r\n                        vertical === 'body' ? this.props.rowHeight :\r\n                            null,\r\n\r\n                    overscanColumnsCount: horizontal === 'left' ? 0 :\r\n                        horizontal === 'center' ? this.props.overscanColumnsCount :\r\n                            0,\r\n\r\n                    overscanRowCount: vertical === 'header' ? 0 :\r\n                        vertical === 'body' ? this.props.overscanRowCount :\r\n                            0\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    private getTilePosition(tileKey: TileKey): TilePosition {\r\n        const [vertical, horizontal] = tileKey.toLowerCase().split('_');\r\n        return {\r\n            vertical,\r\n            horizontal\r\n\r\n        } as TilePosition;\r\n    }\r\n\r\n    private getScrollableAreaHeight() {\r\n\r\n        const headerHeight = this.props.fixedHeaderHeight;\r\n        const footerHeight = this.props.fixedFooterHeight;\r\n\r\n        let bodyHeight: number;\r\n        const body = this.tiles[TileKey.BodyCenter]?.ref?.current;\r\n        if (body) {\r\n            bodyHeight = body.getScrollableHeight();\r\n        } else {\r\n            const bodyRows = this.props.rowCount - (headerHeight && 1) - (footerHeight && 1);\r\n            bodyHeight = bodyRows * this.props.estimatedRowHeight;\r\n        }\r\n\r\n        return bodyHeight + headerHeight + footerHeight;\r\n    }\r\n\r\n    private getScrollableAreaWidth() {\r\n\r\n        const leftWidth = this.props.fixedLeftWidth;\r\n        const rightWidth = this.props.fixedRightWidth;\r\n\r\n        let bodyWidth: number;\r\n        const body = this.tiles[TileKey.BodyCenter]?.ref?.current;\r\n        if (body) {\r\n            bodyWidth = body.getScrollableWidth();\r\n        } else {\r\n            const bodyColumns = this.props.columnCount - (leftWidth && 1) - (rightWidth && 1);\r\n            bodyWidth = bodyColumns * this.props.estimatedColumnWidth;\r\n        }\r\n\r\n        return bodyWidth + leftWidth + rightWidth;\r\n    }\r\n\r\n    private getVerticalScrollbarWidth(scrollableHeight: number): number {\r\n        const hasVerticalScrollbar = scrollableHeight > this.props.height;\r\n        return (hasVerticalScrollbar && DomUtils.scrollbarWidth) || 0;\r\n    }\r\n\r\n    private getHorizontalScrollbarWidth(scrollableWidth: number): number {\r\n        const hasHorizontalScrollbar = scrollableWidth > this.props.width;\r\n        return (hasHorizontalScrollbar && DomUtils.scrollbarWidth) || 0;\r\n    }\r\n\r\n    private getContainerHeight(scrollableHeight: number, scrollableWidth: number): number {\r\n        const horizontalScrollbarWidth = this.getHorizontalScrollbarWidth(scrollableWidth);\r\n        return Math.min(this.props.height, scrollableHeight + horizontalScrollbarWidth);\r\n    }\r\n\r\n    private getContainerWidth(scrollableHeight: number, scrollableWidth: number): number {\r\n        const verticalScrollbarWidth = this.getVerticalScrollbarWidth(scrollableHeight);\r\n        return Math.min(this.props.width, scrollableWidth + verticalScrollbarWidth);\r\n    }\r\n\r\n    /**\r\n     * We are only using classes for easier debug inspection...\r\n     */\r\n    private createClassName(className: string): string {\r\n        return `ReactTablize__VirtualGrid__${className}`;\r\n    }\r\n\r\n    //\r\n    // misc\r\n    //\r\n\r\n    private resetTiles() {\r\n        for (const tileKey of this.activeTiles) {\r\n            this.tiles[tileKey].ref.current.clearCache();\r\n        }\r\n        this.tiles = {};\r\n    }\r\n}","import * as React from 'react';\r\nimport { DocDir, ScrollEvent, SizeCallback } from '../types';\r\nimport { VirtualCell } from './VirtualCell';\r\nimport { WindowCalculator } from './windowCalculator';\r\n\r\nexport type Scrollability = 'vertical' | 'horizontal' | 'none' | 'both';\r\n\r\nexport interface RenderTileCellProps {\r\n    colIndex: number;\r\n    rowIndex: number;\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\nexport interface VirtualTileProps {\r\n    scrollability: Scrollability;\r\n    direction: DocDir;\r\n    height: number;\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n    columnCount: number;\r\n    rowCount: number;\r\n    estimatedColumnWidth: number;\r\n    estimatedRowHeight: number;\r\n    columnWidth?: SizeCallback;\r\n    rowHeight?: SizeCallback;\r\n    overscanColumnsCount?: number;\r\n    overscanRowCount?: number;\r\n\r\n    /**\r\n     * We are only using classes for easier debug inspection...\r\n     */\r\n    className: string;\r\n\r\n    children: (props: RenderTileCellProps) => React.ReactNode;\r\n}\r\n\r\nclass VirtualTileState {\r\n    public scrollTop = 0;\r\n    public scrollLeft = 0;\r\n}\r\n\r\nexport class VirtualTile extends React.PureComponent<VirtualTileProps, VirtualTileState> {\r\n\r\n    private windowCalc = new WindowCalculator();\r\n\r\n    constructor(props: VirtualTileProps) {\r\n        super(props);\r\n\r\n        this.state = new VirtualTileState();\r\n    }\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public scroll(e: ScrollEvent): void {\r\n        const { scrollTop, scrollLeft } = e;\r\n\r\n        switch (this.props.scrollability) {\r\n\r\n            case 'both':\r\n                this.setState({ scrollTop, scrollLeft });\r\n                break;\r\n\r\n            case 'vertical':\r\n                this.setState({ scrollTop });\r\n                break;\r\n\r\n            case 'horizontal':\r\n                this.setState({ scrollLeft });\r\n                break;\r\n\r\n            case 'none':\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Invalid ${nameof(this.props.scrollability)} value: '${this.props.scrollability}'.`);\r\n        }\r\n    }\r\n\r\n    public getScrollableHeight(): number {\r\n        return this.windowCalc.getEstimatedTotalSize('row', this.props.estimatedRowHeight, this.props.rowCount);\r\n    }\r\n\r\n    public getScrollableWidth(): number {\r\n        return this.windowCalc.getEstimatedTotalSize('column', this.props.estimatedColumnWidth, this.props.columnCount);\r\n    }\r\n\r\n    public clearCache(): void {\r\n        this.windowCalc = new WindowCalculator();\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        const rightOrLeft = this.props.direction === 'rtl' ? 'right' : 'left';\r\n\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                style={{\r\n                    height: this.props.height,\r\n                    width: this.props.width,\r\n                    position: 'absolute',\r\n                    top: this.props.top,\r\n                    [rightOrLeft]: this.props.left,\r\n                    overflow: 'hidden'\r\n                }}\r\n            >\r\n                {this.renderCells()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderCells() {\r\n\r\n        const columns = this.windowCalc.elementsInRange(\r\n            'column',\r\n            this.state.scrollLeft,\r\n            this.state.scrollLeft + this.props.width,\r\n            this.props.overscanColumnsCount,\r\n            this.props.estimatedColumnWidth,\r\n            this.props.columnWidth,\r\n            this.props.columnCount\r\n        );\r\n        const rows = this.windowCalc.elementsInRange(\r\n            'row',\r\n            this.state.scrollTop,\r\n            this.state.scrollTop + this.props.height,\r\n            this.props.overscanRowCount,\r\n            this.props.estimatedRowHeight,\r\n            this.props.rowHeight,\r\n            this.props.rowCount\r\n        );\r\n\r\n        const cells: React.ReactNode[] = [];\r\n        for (const col of columns) {\r\n            for (const row of rows) {\r\n                cells.push(\r\n                    <VirtualCell\r\n                        key={`${col.index}, ${row.index}`}\r\n                        direction={this.props.direction}\r\n                        height={row.size}\r\n                        width={col.size}\r\n                        top={row.basePosition - this.state.scrollTop}\r\n                        left={col.basePosition - this.state.scrollLeft}\r\n                    >\r\n                        {this.props.children({\r\n                            colIndex: col.index,\r\n                            rowIndex: row.index,\r\n                            height: row.size,\r\n                            width: col.size\r\n                        })}\r\n                    </VirtualCell>\r\n                );\r\n            }\r\n        }\r\n\r\n        return cells;\r\n    }\r\n}","import * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { DocDir } from '../types';\r\nimport { SizeUtils } from '../utils';\r\nimport { VirtualGridProps, VirtualGrid } from './VirtualGrid';\r\n\r\nexport interface GridViewProps extends Omit<VirtualGridProps, 'height' | 'width'> {\r\n    height?: string | number;\r\n    width?: string | number;\r\n}\r\n\r\nexport class GridView extends React.PureComponent<GridViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n\r\n    private get direction(): DocDir {\r\n        return this.props.style?.direction === 'rtl' ? 'rtl' : 'ltr';\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <ErrorBoundary>\r\n                <div\r\n                    style={{\r\n                        direction: this.direction,\r\n                        width: '100%',\r\n                        ...this.props.style,\r\n                        ...SizeUtils.geElementHeights(this, GridView.defaultHeight)\r\n                    }}\r\n                >\r\n                    <AutoSizer>\r\n                        {({ width, height }) => (\r\n                            <VirtualGrid \r\n                                {...this.props}\r\n                                height={height}\r\n                                width={width}\r\n                            />\r\n                        )}\r\n                    </AutoSizer>\r\n                </div>\r\n            </ErrorBoundary >\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { CellRender } from './TableCell';\r\n\r\nexport class ColumnBodyProps {\r\n    public children?: CellRender;\r\n}\r\n\r\nexport class ColumnBody extends React.PureComponent<ColumnBodyProps> { }","import * as React from 'react';\r\nimport { TableCellProps } from './TableCell';\r\n\r\nexport interface ColumnHeadProps extends TableCellProps {\r\n}\r\n\r\nexport class ColumnHead extends React.PureComponent<ColumnHeadProps> { }","import * as React from 'react';\r\nimport { isNullOrUndefined } from '../utils';\r\nimport { RowRender } from './TableRow';\r\n\r\nexport class TableBodyProps {\r\n    public children?: RowRender;\r\n}\r\n\r\nexport class TableBody extends React.PureComponent<TableBodyProps> {\r\n\r\n    public static hasChildren(body: TableBody): boolean {\r\n        if (!body)\r\n            return false;\r\n\r\n        if (isNullOrUndefined(body.props.children))\r\n            return false;\r\n\r\n        if (typeof body.props.children === 'function')\r\n            return true;\r\n\r\n        if (Array.isArray(body.props.children))\r\n            return body.props.children.length > 0;\r\n\r\n        const childrenCount = React.Children.count(body.props.children);\r\n        return childrenCount > 0;\r\n    }\r\n}","import styled from '@emotion/styled';\r\nimport { DomUtils } from '../utils';\r\n\r\nexport const StyledTableView = styled.div`\r\n    width: 100%;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nexport const StyledTableHead = styled.div`\r\n    display: flex;\r\n    overflow-y: hidden;\r\n    \r\n    /* add padding to compensate for scrollbar width */\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-right')}: ${DomUtils.scrollbarWidth}px;\r\n`;\r\n\r\nexport const StyledTableBody = styled.div`\r\n    /* no style... */\r\n`;\r\n\r\nexport const StyledTableRow = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const StyledTableCell = styled.div`\r\n    flex: 1;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n","import * as React from 'react';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { StyledTableCell } from './style';\r\n\r\nconst TableCellSymbol = '__ReactTablize__TableCell__';\r\n\r\nexport type CellContent = React.ReactNode;\r\n\r\nexport interface TableCellProps extends React.DivProps {\r\n    children?: CellContent;\r\n    visible?: boolean;\r\n}\r\n\r\nexport class TableCell extends React.PureComponent<TableCellProps> {\r\n\r\n    public static defaultProps: TableCellProps = {\r\n        [TableCellSymbol as any]: true\r\n    };\r\n\r\n    public static isTableCell(cell: unknown): cell is React.ReactElement<TableCellProps> {\r\n        return React.isValidElement(cell) && (cell.props as any)[TableCellSymbol];\r\n    }\r\n\r\n    public static getCellProps(cell: unknown): TableCellProps {\r\n        return (TableCell.isTableCell(cell) && cell.props) || {};\r\n    }\r\n\r\n    public static getCellContent(cell: unknown): CellContent {\r\n        return TableCell.isTableCell(cell) ?\r\n            cell.props.children :\r\n            cell;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <StyledTableCell {...this.props}>\r\n                <ErrorBoundary>\r\n                    {this.props.children}\r\n                </ErrorBoundary>\r\n            </StyledTableCell>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface CellRenderArgs {\r\n    rowIndex: number;\r\n    columnIndex: number;\r\n}\r\n\r\nexport type CellRender = (args: CellRenderArgs) => TableCell | CellContent;","import * as React from 'react';\r\nimport { RowContent } from './TableRow';\r\n\r\nexport interface TableHeadProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableHead extends React.PureComponent<TableHeadProps> { }","import * as React from 'react';\r\nimport { ReactUtils } from '../utils';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\nimport { TableBody } from './TableBody';\r\nimport { TableCell } from './TableCell';\r\nimport { TableHead } from './TableHead';\r\n\r\nexport class TableColumnProps {\r\n    public children?: [React.SubComp<ColumnHead>, React.SubComp<ColumnBody>];\r\n}\r\n\r\nexport class TableColumn extends React.PureComponent<TableColumnProps> { \r\n\r\n    public static createHeadFromColumns(columns: TableColumn[]): TableHead {\r\n\r\n        if (columns.every(col => !ReactUtils.singleChildOfType(col, ColumnHead)))\r\n            return null;\r\n\r\n        const head: any = (\r\n            <TableHead>\r\n                {columns.map(col => {\r\n                    const colHead = ReactUtils.singleChildOfType(col, ColumnHead);\r\n                    if (!colHead)\r\n                        return null;\r\n\r\n                    // eslint-disable-next-line react/jsx-key\r\n                    return <TableCell {...(colHead.props as any)} />;\r\n                })}\r\n            </TableHead>\r\n        );\r\n        return head;\r\n    }\r\n\r\n    public static createBodyFromColumns(columns: TableColumn[]): TableBody {\r\n        const body: any = (\r\n            <TableBody>\r\n                {(rowIndex: number) => columns.map((col, columnIndex) => {\r\n                    const cellRender = ReactUtils.singleChildOfType(col, ColumnBody).props.children;\r\n                    if (!cellRender)\r\n                        return null;\r\n                    return cellRender({ rowIndex, columnIndex });\r\n                })}\r\n            </TableBody>\r\n        );\r\n        return body;\r\n    }    \r\n}","import * as React from 'react';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { OneOrMore } from '../types';\r\nimport { StyledTableRow } from './style';\r\nimport { CellContent, TableCell } from './TableCell';\r\nconst flattenDeep = require('lodash.flattendeep');\r\n\r\nconst TableRowSymbol = '__ReactTablize__TableRow__';\r\n\r\n/**\r\n * One or more cells.\r\n */\r\nexport type RowContent = OneOrMore<React.SubComp<TableCell> | CellContent>;\r\n\r\nexport interface TableRowProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableRow extends React.PureComponent<TableRowProps> {\r\n\r\n    public static defaultProps: TableRowProps = {\r\n        [TableRowSymbol as any]: true\r\n    };\r\n\r\n    public static isTableRow(row: unknown): row is React.ReactElement<TableRowProps> {\r\n        return React.isValidElement(row) && (row.props as any)[TableRowSymbol];\r\n    }\r\n\r\n    public static getRowProps(row: unknown): TableRowProps {\r\n        return (TableRow.isTableRow(row) && row.props) || {};\r\n    }\r\n\r\n    public static getRowContent(row: unknown): RowContent {\r\n\r\n        let content: RowContent = row;\r\n\r\n        // row element\r\n        if (TableRow.isTableRow(content)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        if (Array.isArray(content)) {\r\n            content = flattenDeep(content);\r\n        }\r\n        return content;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <StyledTableRow {...this.props}>\r\n                <ErrorBoundary>\r\n                    {this.props.children}\r\n                </ErrorBoundary>\r\n            </StyledTableRow>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport type RowRender = (index: number) => React.SubComp<TableRow> | RowContent;","import { Theme } from '@emotion/styled';\r\nimport { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { List, NonVirtualList, VirtualList } from '../list';\r\nimport { DocDir, OneOrMore, SizeCallback } from '../types';\r\nimport { asArray, isNullOrUndefined, ReactUtils, SizeUtils } from '../utils';\r\nimport { StyledTableBody, StyledTableHead, StyledTableView } from './style';\r\nimport { TableBody } from './TableBody';\r\nimport { TableCell } from './TableCell';\r\nimport { TableColumn } from './TableColumn';\r\nimport { TableHead } from './TableHead';\r\nimport { RowRender, TableRow, TableRowProps } from './TableRow';\r\n\r\ntype TableChildren_RowsSyntax = [React.SubComp<TableHead>, React.SubComp<TableBody>];\r\n\r\ntype TableChildren_ColumnsSyntax = OneOrMore<React.SubComp<TableColumn>>;\r\n\r\n/**\r\n * Applicable only on non-virtual tables.\r\n */\r\nexport const RowAutoSize = (): number => undefined;\r\n\r\nexport type RowKeyCallback = (index: number) => React.Key;\r\n\r\nexport class TableViewProps {\r\n\r\n    //\r\n    // main props\r\n    //\r\n\r\n    public isVirtual?: boolean;\r\n    public rowCount: number;\r\n    public rowKey?: RowKeyCallback;\r\n    public children?: TableChildren_RowsSyntax | TableChildren_ColumnsSyntax;\r\n\r\n    //\r\n    // appearance\r\n    //\r\n\r\n    public dir?: DocDir = 'ltr';\r\n    public className?: string;\r\n    public style?: React.CSSProperties;\r\n    /**\r\n     * Row height in pixels.  \r\n     * \r\n     * Default: 50\r\n     */\r\n    public rowHeight?: number | SizeCallback = 50;\r\n    public emptyMessage?= \"No Items to Display\";\r\n    public customScrollbars?: boolean;\r\n\r\n    //\r\n    // behavior\r\n    //\r\n\r\n    public keyScroll?: boolean;\r\n\r\n    //\r\n    // virtualization\r\n    //\r\n\r\n    /**\r\n     * Number of extra buffer items to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 20\r\n     */\r\n    public overscanCount?= 20;\r\n}\r\n\r\nexport class TableView extends React.PureComponent<TableViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n    public static readonly defaultHeadHeight = '40px';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = TableHead;\r\n\r\n    public static Body = TableBody;\r\n\r\n    public static Row = TableRow;\r\n\r\n    public static Cell = TableCell;\r\n\r\n    public static Column = TableColumn;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps = new TableViewProps();\r\n\r\n    private tableElement = React.createRef<List>();\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public refresh() {\r\n        if (this.tableElement.current) {\r\n            this.tableElement.current.refresh();\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        // head & body\r\n        let head = ReactUtils.singleChildOfType(this, TableHead);\r\n        let body = ReactUtils.singleChildOfType(this, TableBody);\r\n        const columns = ReactUtils.childrenOfType(this, TableColumn);\r\n\r\n        // columns\r\n        if (columns && columns.length) {\r\n            if (head || body)\r\n                throw new Error('Can not specify head and/or body when specifying table columns.');\r\n\r\n            head = TableColumn.createHeadFromColumns(columns);\r\n            body = TableColumn.createBodyFromColumns(columns);\r\n        }\r\n\r\n        // render\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <StyledTableView\r\n                        className={this.props.className}\r\n                        style={{\r\n                            ...this.props.style,\r\n                            ...SizeUtils.geElementHeights(this, TableView.defaultHeight)\r\n                        }}\r\n                    >\r\n                        {this.renderTableHead(head)}\r\n                        {this.renderTableBody(head, body)}\r\n                    </StyledTableView>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderTableHead(head: TableHead) {\r\n\r\n        if (!head)\r\n            return null;\r\n\r\n        const { children, ...divProps } = head.props;\r\n\r\n        return (\r\n            <StyledTableHead\r\n                {...divProps}\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    ...head.props.style,\r\n                    ...SizeUtils.geElementHeights(head, TableView.defaultHeadHeight)\r\n                }}\r\n            >\r\n                {React.Children.map(children, this.renderCell)}\r\n            </StyledTableHead>\r\n        );\r\n    }\r\n\r\n    private renderTableBody(head: TableHead, body: TableBody) {\r\n\r\n        const bodyHeights = SizeUtils.getBodyHeights(this, head, {\r\n            total: TableView.defaultHeight,\r\n            head: TableView.defaultHeadHeight\r\n        });\r\n\r\n        return (\r\n            <StyledTableBody\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    ...bodyHeights\r\n                }}\r\n            >\r\n                <ErrorBoundary>\r\n                    {this.renderTableRows(body)}\r\n                </ErrorBoundary>\r\n            </StyledTableBody>\r\n        );\r\n    }\r\n\r\n    private renderTableRows(body: TableBody) {\r\n\r\n        // placeholder\r\n        if (this.props.rowCount === 0 || !TableBody.hasChildren(body)) {\r\n            return this.renderItemsPlaceHolder();\r\n        }\r\n\r\n        // table rows\r\n        const rowRender = body.props.children;\r\n        const ListComponent = this.getListComponent();\r\n        return (\r\n            <AutoSizer>\r\n                {({ width, height }) => (\r\n                    <ListComponent\r\n                        ref={this.tableElement as React.Ref<any>}\r\n                        style={{ outline: 'none' }}\r\n                        dir={this.props.dir}\r\n                        layout=\"vertical\"\r\n                        height={height}\r\n                        width={width}\r\n                        itemCount={this.props.rowCount}\r\n                        itemSize={this.getRowHeight}\r\n                        overscan={this.props.overscanCount}\r\n                        customScrollbar={this.props.customScrollbars}\r\n                    >\r\n                        {index => this.renderBodyRow(index, rowRender)}\r\n                    </ListComponent>\r\n                )}\r\n            </AutoSizer>\r\n        );\r\n    }\r\n\r\n    private renderBodyRow(index: number, rowRender: RowRender) {\r\n        if (!rowRender)\r\n            return null;\r\n\r\n        const row = rowRender(index);\r\n        let rowContent = TableRow.getRowContent(row);\r\n        rowContent = asArray(rowContent).map(this.renderCell);\r\n\r\n        // already a row - just adjust the content\r\n        if (TableRow.isTableRow(row)) {\r\n            const rowKey = this.getRowKey(row.props, index);\r\n            return React.cloneElement(row, { key: rowKey }, rowContent);\r\n        }\r\n\r\n        // not a row - wrap content with row element\r\n        else {\r\n            const rowKey = this.getRowKey({}, index);\r\n            return (\r\n                <TableRow key={rowKey}>\r\n                    {rowContent}\r\n                </TableRow>\r\n            );\r\n        }\r\n    }\r\n\r\n    private renderCell(cell: unknown, columnIndex: number) {\r\n        const cellProps = TableCell.getCellProps(cell);\r\n        if (cellProps.visible === false)\r\n            return null;\r\n\r\n        // already a cell - just add key and return\r\n        if (TableCell.isTableCell(cell)) {\r\n            return React.cloneElement(cell, { key: columnIndex });\r\n        }\r\n\r\n        // not a cell - wrap content with cell element\r\n        return (\r\n            <TableCell key={columnIndex}>\r\n                {cell}\r\n            </TableCell>\r\n        );\r\n    }\r\n\r\n    private renderItemsPlaceHolder() {\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {this.props.emptyMessage}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //\r\n    // helpers\r\n    //\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir\r\n        };\r\n    }\r\n\r\n    private getListComponent() {\r\n        return this.props.isVirtual !== false ?\r\n            VirtualList :\r\n            NonVirtualList;\r\n    }\r\n\r\n    private getRowKey(rowProps: TableRowProps, index: number): React.Key {\r\n\r\n        if (!isNullOrUndefined(rowProps.key))\r\n            return rowProps.key;\r\n\r\n        if (typeof this.props.rowKey === 'function')\r\n            return this.props.rowKey(index);\r\n\r\n        return index;\r\n    }\r\n\r\n    private getRowHeight = (rowIndex: number): number => {\r\n        if (typeof this.props.rowHeight === 'function')\r\n            return this.props.rowHeight(rowIndex);\r\n        return this.props.rowHeight;\r\n    };\r\n}","export * from './grid';\r\nexport * from './table';\r\n"],"sourceRoot":""}