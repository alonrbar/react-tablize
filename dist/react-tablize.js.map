{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\ErrorBoundary.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\reactUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridFooter.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\styled.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableColumn.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableRow.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\index.ts","external \"@emotion/styled\"","external \"emotion-theming\"","external \"lodash.flattendeep\"","external \"normalize-scroll-left\"","external \"react\"","external \"react-dom\"","external \"react-virtualized-auto-sizer\"","external \"react-window\""],"names":["ErrorBoundaryState","ErrorBoundary","props","state","hasError","error","errorInfo","setState","console","children","undefined","React","ReactUtils","elem","type","prototype","isPrototypeOf","createPropsToAdd","map","child","index","propsToAdd","parentElement","Array","isArray","childrenArray","filter","elementInstanceOf","matchingChildren","childrenOfType","length","Error","name","isNullOrUndefined","val","asArray","cssSizeString","size","Number","isFinite","getHeights","style","defaultHeight","height","minHeight","maxHeight","randomInt","min","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","Math","floor","random","range","count","keys","GridBody","GridCellSymbol","GridCell","cell","cellElemChildren","cellElemProps","content","GridFooter","GridHead","styledWithTheme","scrollbarWidth","tableBorder","StyledGridView","styled","div","StyledGridHead","theme","dir","StyledGridHeadCell","StyledGridBody","StyledGridBodyCell","GridView","body","ReactDOM","mainBodyGrid","current","head","headList","scrollLeft","detectScrollType","setTimeout","proportion","scrollWidth","freezedColumns","freezedColumnsGrid","scrollTop","colIndex","columnWidth","rowHeightProp","rowIndex","columnCount","divProps","getTheme","Object","assign","direction","utils","renderHead","renderBody","renderFooter","singleChildOfType","cellRender","freezeColumns","defaultHeadHeight","width","display","columnIndex","renderHeadCell","isScrolling","overflow","getFrozenColumnsWidth","getColumnWidth","overscanColumnsCount","useIsScrolling","args","extract","cellProps","cellContent","rowCount","rowHeight","heights","getBodyHeights","frozenColumnsWidth","getRowHeight","overscanRowsCount","renderBodyCell","syncScroll","footer","totalHeights","headHeight","getHeadHeight","bodyHeights","bodyHeight","bodyMinHeight","bodyMaxHeight","reduce","a","b","ColumnBodyProps","ColumnBody","ColumnHead","TableBodyProps","TableBody","TableCell","TableColumnProps","TableColumn","TableHeadProps","TableHead","TableRow","StyledTableView","StyledTableHead","StyledTableHeadRow","StyledTableHeadCell","StyledTableBody","StyledTableBodyRow","StyledTableBodyCell","flattenDeep","require","TableViewProps","TableView","columns","createHeadFromColumns","createBodyFromColumns","className","renderTableHead","renderTableBody","headCell","getHeadCellProps","visible","getHeadCellContent","headProps","getHeadProps","heightValues","renderTableRows","hasBody","renderItemsPlaceHolder","outline","rowRender","row","getRowProps","rowStyle","rowProps","rowKey","getRowKey","rowContent","getRowContent","getCellProps","getCellContent","textAlign","emptyMessage","every","col","colHead","childrenCount","isReactFragment","key"],"mappings":"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","file":"react-tablize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-tablize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-tablize\"] = factory();\n\telse\n\t\troot[\"react-tablize\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as React from 'react';\r\n\r\nclass ErrorBoundaryState {\r\n    public hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<{}, ErrorBoundaryState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n        this.setState({ hasError: true });\r\n        console.error(error);\r\n    }\r\n\r\n    public render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <span>X</span>\r\n            );\r\n        }\r\n        return this.props.children !== undefined ? this.props.children : null;\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport class ReactUtils {\r\n\r\n    //\r\n    // props\r\n    //\r\n\r\n    public static getProps<T>(elem: any): T {\r\n        return (elem && (elem as any).props) || {};\r\n    }\r\n\r\n    //\r\n    // react element\r\n    //\r\n\r\n    public static elementInstanceOf<T>(elem: any, type: Constructor<T>): elem is T {\r\n        if (!elem)\r\n            return false;\r\n        if (!elem.type)\r\n            return false;\r\n\r\n        // https://stackoverflow.com/questions/39387405/using-instanceof-to-test-for-base-class-of-a-react-component\r\n        // https://stackoverflow.com/questions/14486110/how-to-check-if-a-javascript-class-inherits-another-without-creating-an-obj\r\n        // https://stackoverflow.com/questions/2464426/whats-the-difference-between-isprototypeof-and-instanceof-in-javascript\r\n\r\n        return elem.type === type ||\r\n            elem.type.prototype instanceof type ||\r\n            type.isPrototypeOf(elem.type);\r\n    }\r\n\r\n    public static isReactFragment(elem: any): boolean {\r\n        return React.isValidElement(elem) && elem.type === React.Fragment;\r\n    }\r\n\r\n    //\r\n    // react children\r\n    //\r\n\r\n    public static addPropsToChildren(children: React.ReactNode, createPropsToAdd: (child: React.ReactElement<any>, index?: number) => any) {\r\n\r\n        // https://stackoverflow.com/questions/32370994/how-to-pass-props-to-this-props-children\r\n        return React.Children.map(children, (child: React.ReactElement<any>, index: number) => {\r\n            const propsToAdd = createPropsToAdd(child, index);\r\n            return React.cloneElement(child, propsToAdd);\r\n        });\r\n    }\r\n\r\n    public static childrenArray(parentElement: any): React.ReactChild[] {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (Array.isArray(children))\r\n            return children;\r\n\r\n        return React.Children.map(children, child => child);\r\n    }\r\n\r\n    public static childrenOfType<T>(parentElement: any, type: Constructor<T>): T[] {\r\n        const children = ReactUtils.childrenArray(parentElement);\r\n        if (!children)\r\n            return null;\r\n        return children.filter(child => ReactUtils.elementInstanceOf(child, type)) as any;\r\n    }\r\n\r\n    /**\r\n     * Return the only child that matches the given type.  \r\n     * If more than one child matches an error is thrown.  \r\n     * \r\n     * Notice that this function gives no indication of the total number of\r\n     * children, only the number of matching children.\r\n     * @param parentElement \r\n     * @param type \r\n     */\r\n    public static singleChildOfType<T>(parentElement: any, type: Constructor<T>): T {\r\n        const matchingChildren = ReactUtils.childrenOfType(parentElement, type);\r\n        if (!matchingChildren || !matchingChildren.length)\r\n            return null;\r\n\r\n        if (matchingChildren.length > 1)\r\n            throw new Error(`Only one ${type.name} child element is allowed.`);\r\n\r\n        return matchingChildren[0] as any;\r\n    }\r\n\r\n    // tslint:disable-next-line:ban-types\r\n    public static singleFunctionChild(parentElement: any): Function {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (typeof parentElement.props.children !== 'function')\r\n            return null;\r\n\r\n        return children;\r\n    }\r\n}","\r\nexport function isNullOrUndefined(val: any): boolean {\r\n    return val === null || val === undefined;\r\n}\r\n\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n    if (Array.isArray(val))\r\n        return val;\r\n\r\n    return [val];\r\n}\r\n\r\nexport function cssSizeString(size: any): string {\r\n    if (Number.isFinite(size))\r\n        return size + 'px';\r\n    return size;\r\n}\r\n\r\nexport function getHeights(style: React.CSSProperties, defaultHeight: number | string): Heights {\r\n    style = style || {};\r\n\r\n    let height = style.height;\r\n    let minHeight = style.minHeight;\r\n    let maxHeight = style.maxHeight;\r\n\r\n    if (height === undefined && minHeight === undefined) {\r\n        height = defaultHeight;\r\n    }\r\n\r\n    height = cssSizeString(height);\r\n    minHeight = cssSizeString(minHeight);\r\n    maxHeight = cssSizeString(maxHeight);\r\n\r\n    return {\r\n        height,\r\n        minHeight,\r\n        maxHeight\r\n    };\r\n}\r\n\r\nexport function randomInt(min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER): number {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport function range(count: number): number[] {\r\n    // https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp\r\n    return [...Array(count || 0).keys()];\r\n}","import * as React from 'react';\r\n\r\nexport interface BodyCellRenderArgs {\r\n    rowIndex: number; \r\n    columnIndex: number;\r\n    isScrolling?: boolean;\r\n}\r\n\r\nexport type BodyCellRender = (args: BodyCellRenderArgs) => React.ReactNode;\r\n\r\nexport interface GridBodyProps extends React.DivProps {\r\n    rowCount: number;\r\n    /**\r\n     * Body row height.  \r\n     * To adjust the head height set the head `style` prop.\r\n     */\r\n    rowHeight: number | SizeCallback;\r\n    children?: BodyCellRender;\r\n}\r\n\r\nexport class GridBody extends React.PureComponent<GridBodyProps> { }","import * as React from 'react';\r\nimport { randomInt } from '../utils/utils';\r\n\r\nconst GridCellSymbol = '__ReactTablize__GridCell__' + randomInt(0);\r\n\r\nexport interface GridCellExtractResult {\r\n    props: GridCellProps;\r\n    content: React.ReactNode;\r\n}\r\n\r\nexport interface GridCellProps extends React.DivProps {\r\n}\r\n\r\nexport class GridCell extends React.PureComponent<GridCellProps> {\r\n\r\n    public static defaultProps: GridCellProps = {\r\n        [GridCellSymbol]: true\r\n    };\r\n\r\n    public static extract(cell: any): GridCellExtractResult {\r\n        if (cell && cell.props && cell.props[GridCellSymbol]) {\r\n            const { children: cellElemChildren, ...cellElemProps } = cell.props;\r\n            return {\r\n                props: cellElemProps,\r\n                content: cellElemChildren\r\n            };\r\n        } else {\r\n            return {\r\n                props: {},\r\n                content: cell\r\n            };\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return this.props.children;\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport interface GridFooterProps extends React.DivProps {    \r\n    children?: (columnIndex: number) => React.ReactNode;\r\n}\r\n\r\nexport class GridFooter extends React.PureComponent<GridFooterProps> { }","import * as React from 'react';\r\n\r\nexport interface HeadCellRenderArgs {\r\n    columnIndex: number;\r\n    isScrolling?: boolean;\r\n}\r\n\r\nexport type HeadCellRender = (args: HeadCellRenderArgs) => React.ReactNode;\r\n\r\nexport interface GridHeadProps extends React.DivProps {    \r\n    children?: HeadCellRender;\r\n}\r\n\r\nexport class GridHead extends React.PureComponent<GridHeadProps> { }","import styled, { CreateStyled } from '@emotion/styled';\r\n\r\nexport interface Theme {\r\n    dir: DocDir;\r\n}\r\n\r\nconst styledWithTheme = (styled as CreateStyled<Theme>);\r\n\r\nexport { styledWithTheme as styled };","import { styled } from '../styled';\r\n\r\n//\r\n// constants\r\n//\r\n\r\nexport const scrollbarWidth = 17;\r\nconst tableBorder = '1px solid #ddd';\r\n\r\n//\r\n// grid\r\n//\r\n\r\nexport const StyledGridView = styled.div`\r\n    label: grid-view;\r\n\r\n    width: 100%;\r\n`;\r\n\r\n//\r\n// head\r\n//\r\n\r\nexport const StyledGridHead = styled.div`\r\n    label: grid-head;\r\n\r\n    display: flex;\r\n\r\n    font-weight: bold;\r\n    vertical-align: middle;\r\n\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-right')}: ${scrollbarWidth}px;\r\n    border-bottom: ${tableBorder};\r\n`;\r\n\r\nexport const StyledGridHeadCell = styled.div`\r\n    label: grid-head-cell;\r\n\r\n    display: flex;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    align-items: flex-end;\r\n    vertical-align: bottom;\r\n`;\r\n\r\n//\r\n// body\r\n//\r\n\r\nexport const StyledGridBody = styled.div`\r\n    label: grid-body;\r\n`;\r\n\r\nexport const StyledGridBodyCell = styled.div`\r\n    label: grid-body-cell;\r\n\r\n    display: flex;\r\n\r\n    height: 100%;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    align-items: center;\r\n    vertical-align: middle;\r\n`;","import { ThemeProvider } from 'emotion-theming';\r\nimport { detectScrollType } from 'normalize-scroll-left';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { VariableSizeGrid, VariableSizeList } from 'react-window';\r\nimport { Theme } from '../styled';\r\nimport { ErrorBoundary } from '../utils/ErrorBoundary';\r\nimport { ReactUtils } from '../utils/reactUtils';\r\nimport * as utils from '../utils/utils';\r\nimport { BodyCellRender, GridBody } from './GridBody';\r\nimport { GridCell } from './GridCell';\r\nimport { GridFooter } from './GridFooter';\r\nimport { GridHead, HeadCellRender } from './GridHead';\r\nimport { scrollbarWidth, StyledGridBody, StyledGridBodyCell, StyledGridHead, StyledGridHeadCell, StyledGridView } from './style';\r\n\r\ntype GridChildren_FullSyntax = [React.SubComp<GridHead>, React.SubComp<GridBody>];\r\ntype GridChildren = GridChildren_FullSyntax | BodyCellRender;\r\n\r\ninterface RenderHeadCellArgs {\r\n    cellRender: HeadCellRender;\r\n    columnIndex: number;\r\n    isScrolling: boolean;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\ninterface RenderBodyCellArgs {\r\n    cellRender: BodyCellRender;\r\n    rowIndex: number;\r\n    columnIndex: number;\r\n    isScrolling: boolean;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport interface GridViewProps extends React.DivProps {\r\n\r\n    columnCount: number;\r\n    columnWidth: number | SizeCallback;\r\n    /**\r\n     * Number of columns to freeze (always the first columns).\r\n     */\r\n    freezeColumns?: number;\r\n\r\n    dir?: DocDir;\r\n\r\n    /**\r\n     * Number of extra rows to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 1\r\n     */\r\n    overscanRowsCount?: number;\r\n    /**\r\n     * Number of extra columns to render before/after the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 1\r\n     */\r\n    overscanColumnsCount?: number;\r\n    /**\r\n     * Adds an additional isScrolling parameter to the children render function.\r\n     * This parameter can be used to show a placeholder row or column while the\r\n     * list is being scrolled.\r\n     *\r\n     * Note that using this parameter will result in an additional render call\r\n     * after scrolling has stopped (when isScrolling changes from true to\r\n     * false).\r\n     */\r\n    useIsScrolling?: boolean;\r\n\r\n    children?: GridChildren;\r\n}\r\n\r\nexport class GridView extends React.PureComponent<GridViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n    public static readonly defaultHeadHeight = '40px';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = GridHead;\r\n\r\n    public static Body = GridBody;\r\n\r\n    // TODO: public static Footer = GridFooter;\r\n\r\n    public static Cell = GridCell;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps = {\r\n        overscanRowsCount: 1,\r\n        overscanColumnsCount: 1\r\n    };\r\n\r\n    private headList = React.createRef<VariableSizeList>();\r\n    private mainBodyGrid = React.createRef<VariableSizeGrid>();\r\n    private freezedColumnsGrid = React.createRef<VariableSizeGrid>();\r\n\r\n    public render() {\r\n        const { columnCount, columnWidth, children, ...divProps } = this.props;\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <StyledGridView\r\n                        {...divProps}\r\n                        style={Object.assign(\r\n                            { direction: this.props.dir },\r\n                            this.props.style,\r\n                            utils.getHeights(divProps.style, GridView.defaultHeight))\r\n                        }\r\n                    >\r\n                        {this.renderHead()}\r\n                        {this.renderBody()}\r\n                        {this.renderFooter()}\r\n                    </StyledGridView>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderHead() {\r\n        const head = ReactUtils.singleChildOfType(this, GridHead);\r\n        if (!head)\r\n            return null;\r\n\r\n        const { children: cellRender, ...divProps } = head.props;\r\n        const freezeColumns = this.props.freezeColumns || 0;\r\n\r\n        return (\r\n            <StyledGridHead\r\n                {...divProps}\r\n                style={Object.assign({}, head.props.style, utils.getHeights(divProps.style, GridView.defaultHeadHeight))}\r\n            >\r\n                <ErrorBoundary>\r\n                    <AutoSizer>\r\n                        {({ width, height }) => (\r\n                            <div style={{ width, height, display: 'flex' }}>\r\n\r\n                                {/* frozen first columns */}\r\n                                {utils.range(freezeColumns).map(columnIndex => this.renderHeadCell({\r\n                                    cellRender, \r\n                                    columnIndex,\r\n                                    isScrolling: false\r\n                                }))}\r\n\r\n                                {/* main columns */}\r\n                                <VariableSizeList\r\n                                    ref={this.headList}\r\n                                    direction={this.props.dir}\r\n                                    style={{ overflow: 'hidden' }}\r\n                                    layout=\"horizontal\"\r\n                                    height={height}\r\n                                    width={width - this.getFrozenColumnsWidth()}\r\n                                    itemCount={this.props.columnCount - freezeColumns}\r\n                                    itemSize={colIndex => this.getColumnWidth(colIndex + freezeColumns)}\r\n                                    overscanCount={this.props.overscanColumnsCount}\r\n                                    useIsScrolling={this.props.useIsScrolling}\r\n                                >\r\n                                    {({ index, style, isScrolling }) =>\r\n                                        this.renderHeadCell({\r\n                                            cellRender,\r\n                                            columnIndex: index + freezeColumns,\r\n                                            isScrolling,\r\n                                            style\r\n                                        })\r\n                                    }\r\n                                </VariableSizeList>\r\n\r\n                            </div>\r\n                        )}\r\n                    </AutoSizer>\r\n                </ErrorBoundary>\r\n            </StyledGridHead>\r\n        );\r\n    }\r\n\r\n    private renderHeadCell(args: RenderHeadCellArgs) {\r\n\r\n        const {\r\n            columnIndex,\r\n            cellRender,\r\n            isScrolling,\r\n            style\r\n        } = args;\r\n\r\n        // create the cell\r\n        const cell: any = cellRender({ columnIndex, isScrolling });\r\n\r\n        // get cell props & content\r\n        const { props: cellProps, content: cellContent } = GridCell.extract(cell);\r\n        const columnWidth = this.getColumnWidth(columnIndex);\r\n\r\n        // render\r\n        return (\r\n            <StyledGridHeadCell\r\n                key={columnIndex}\r\n                {...cellProps}\r\n                style={Object.assign({ width: columnWidth }, cellProps.style, style)}\r\n            >\r\n                <ErrorBoundary>\r\n                    {cellContent}\r\n                </ErrorBoundary>\r\n            </StyledGridHeadCell>\r\n        );\r\n    }\r\n\r\n    private renderBody() {\r\n\r\n        const body = ReactUtils.singleChildOfType(this, GridBody);\r\n        if (!body)\r\n            return null;\r\n        const { children: cellRender, rowCount, rowHeight, ...divProps } = body.props;\r\n\r\n        const heights = this.getBodyHeights();\r\n        const freezeColumns = this.props.freezeColumns || 0;\r\n        const frozenColumnsWidth = this.getFrozenColumnsWidth();\r\n\r\n        return (\r\n            <StyledGridBody\r\n                {...divProps}\r\n                style={Object.assign({}, divProps.style, heights)}\r\n            >\r\n                <ErrorBoundary>\r\n                    <AutoSizer>\r\n                        {({ height, width }) => (\r\n                            <div style={{ width, height, display: 'flex' }}>\r\n\r\n                                {/* frozen first columns */}\r\n                                <VariableSizeGrid\r\n                                    ref={this.freezedColumnsGrid}\r\n                                    direction={this.props.dir}\r\n                                    style={{ overflow: 'hidden' }}\r\n                                    height={height - scrollbarWidth}\r\n                                    width={frozenColumnsWidth}\r\n                                    columnCount={freezeColumns}\r\n                                    columnWidth={this.getColumnWidth}\r\n                                    rowCount={rowCount}\r\n                                    rowHeight={this.getRowHeight(rowHeight)}\r\n                                    overscanRowsCount={this.props.overscanRowsCount}\r\n                                    useIsScrolling={this.props.useIsScrolling}\r\n                                >\r\n                                    {({ rowIndex, columnIndex, style, isScrolling }) =>\r\n                                        this.renderBodyCell({\r\n                                            cellRender,\r\n                                            rowIndex,\r\n                                            columnIndex,\r\n                                            isScrolling,\r\n                                            style\r\n                                        })\r\n                                    }\r\n                                </VariableSizeGrid>\r\n\r\n                                <VariableSizeGrid\r\n                                    ref={this.mainBodyGrid}\r\n                                    direction={this.props.dir}\r\n                                    height={height}\r\n                                    width={width - frozenColumnsWidth}\r\n                                    columnCount={this.props.columnCount - freezeColumns}\r\n                                    columnWidth={colIndex => this.getColumnWidth(colIndex + freezeColumns)}\r\n                                    rowCount={rowCount}\r\n                                    rowHeight={this.getRowHeight(rowHeight)}\r\n                                    onScroll={this.syncScroll}\r\n                                    overscanRowsCount={this.props.overscanRowsCount}\r\n                                    overscanColumnsCount={this.props.overscanColumnsCount}\r\n                                    useIsScrolling={this.props.useIsScrolling}\r\n                                >\r\n                                    {({ rowIndex, columnIndex, style, isScrolling }) =>\r\n                                        this.renderBodyCell({\r\n                                            cellRender,\r\n                                            rowIndex,\r\n                                            columnIndex: columnIndex + freezeColumns,\r\n                                            isScrolling,\r\n                                            style\r\n                                        })\r\n                                    }\r\n                                </VariableSizeGrid>\r\n                            </div>\r\n                        )}\r\n                    </AutoSizer>\r\n                </ErrorBoundary>\r\n            </StyledGridBody>\r\n        );\r\n    }\r\n\r\n    private renderBodyCell(args: RenderBodyCellArgs) {\r\n\r\n        const {\r\n            rowIndex,\r\n            columnIndex,\r\n            cellRender,\r\n            isScrolling,\r\n            style\r\n        } = args;\r\n\r\n        // create the cell\r\n        const cell: any = cellRender({ rowIndex, columnIndex, isScrolling });\r\n\r\n        // get cell props & content\r\n        const { props: cellProps, content: cellContent } = GridCell.extract(cell);\r\n\r\n        // render\r\n        return (\r\n            <StyledGridBodyCell\r\n                key={`[ ${rowIndex}, ${columnIndex} ]`}\r\n                {...cellProps}\r\n                style={Object.assign({}, cellProps.style, style)}\r\n            >\r\n                <ErrorBoundary>\r\n                    {cellContent}\r\n                </ErrorBoundary>\r\n            </StyledGridBodyCell>\r\n        );\r\n    }\r\n\r\n    private renderFooter() {\r\n        const footer = ReactUtils.singleChildOfType(this, GridFooter);\r\n        if (!footer)\r\n            return null;\r\n\r\n        return (\r\n            <span>Footer</span>\r\n        );\r\n    }\r\n\r\n    //\r\n    // event handlers\r\n    //\r\n\r\n    private syncScroll = () => {\r\n        const body = ReactDOM.findDOMNode(this.mainBodyGrid.current) as HTMLElement;\r\n        if (!body)\r\n            return;\r\n\r\n        // synchronize head\r\n        const head = ReactDOM.findDOMNode(this.headList.current) as HTMLElement;\r\n        if (head) {\r\n\r\n            if (this.props.dir === 'rtl' && body.scrollLeft <= 0 && detectScrollType() === 'default') {\r\n\r\n                // HACK - fixes this issue:  \r\n                // When scrolling to the end of the grid in rtl mode the\r\n                // scrollLeft value of the body is 0 (and sometimes less) which\r\n                // causes the grid to disappear.\r\n                head.scrollLeft = body.scrollLeft = 1;\r\n\r\n                // This part of the hack is also required for some reason when\r\n                // scrolling using the scroll handle instead of the scroll\r\n                // arrows.\r\n                setTimeout(() => body.scrollLeft = 1);\r\n\r\n            } else {\r\n\r\n                // normal case\r\n                const proportion = (head.scrollWidth / body.scrollWidth);\r\n                head.scrollLeft = proportion * body.scrollLeft;\r\n            }\r\n        }\r\n\r\n        // synchronize frozen body columns\r\n        const freezedColumns = ReactDOM.findDOMNode(this.freezedColumnsGrid.current) as HTMLElement;\r\n        if (freezedColumns) {\r\n            freezedColumns.scrollTop = body.scrollTop;\r\n        }\r\n    }\r\n\r\n    //\r\n    // helpers\r\n    //\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir\r\n        };\r\n    }\r\n\r\n    private getBodyHeights(): Heights {\r\n\r\n        const totalHeights = utils.getHeights(this.props.style, GridView.defaultHeight);\r\n        const headHeight = this.getHeadHeight();\r\n        const bodyHeights = utils.getHeights(this.props.style, undefined);\r\n\r\n        const bodyHeight = `calc(${bodyHeights.height || totalHeights.height} - ${headHeight})`;\r\n\r\n        let bodyMinHeight: string | number;\r\n        if (bodyHeights.minHeight || totalHeights.minHeight)\r\n            bodyMinHeight = `calc(${bodyHeights.minHeight || totalHeights.minHeight} - ${headHeight})`;\r\n\r\n        let bodyMaxHeight: string | number;\r\n        if (bodyHeights.maxHeight || totalHeights.maxHeight)\r\n            bodyMaxHeight = `calc(${bodyHeights.maxHeight || totalHeights.maxHeight} - ${headHeight})`;\r\n\r\n        return {\r\n            height: bodyHeight,\r\n            minHeight: bodyMinHeight,\r\n            maxHeight: bodyMaxHeight\r\n        };\r\n    }\r\n\r\n    private getHeadHeight(): string | number {\r\n        const head = ReactUtils.singleChildOfType(this, GridHead);\r\n        let headHeight: string | number = 0;\r\n        if (head) {\r\n            headHeight = utils.getHeights(head.props.style, GridView.defaultHeadHeight).height;\r\n        }\r\n        return headHeight;\r\n    }\r\n\r\n    private getFrozenColumnsWidth(): number {\r\n        if (!this.props.freezeColumns)\r\n            return 0;\r\n        const width = utils.range(this.props.freezeColumns)\r\n            .map(this.getColumnWidth)\r\n            .reduce((a, b) => a + b, 0);\r\n        return width;\r\n    }\r\n\r\n    private getColumnWidth = (colIndex: number): number => {\r\n        if (typeof this.props.columnWidth === 'function')\r\n            return this.props.columnWidth(colIndex);\r\n        return this.props.columnWidth;\r\n    }\r\n\r\n    private getRowHeight = (rowHeightProp: number | SizeCallback) => (rowIndex: number): number => {\r\n        if (typeof rowHeightProp === 'function')\r\n            return rowHeightProp(rowIndex);\r\n        return rowHeightProp;\r\n    }\r\n}","import * as React from 'react';\r\nimport { CellRender } from './TableCell';\r\n\r\nexport class ColumnBodyProps {\r\n    public children?: CellRender;\r\n}\r\n\r\nexport class ColumnBody extends React.PureComponent<ColumnBodyProps> { }","import * as React from 'react';\r\nimport { TableCellProps } from './TableCell';\r\n\r\nexport interface ColumnHeadProps extends TableCellProps {\r\n}\r\n\r\nexport class ColumnHead extends React.PureComponent<ColumnHeadProps> { }","import * as React from 'react';\r\nimport { RowRender } from './TableRow';\r\n\r\nexport class TableBodyProps {\r\n    public children?: RowRender;\r\n}\r\n\r\nexport class TableBody extends React.PureComponent<TableBodyProps> { }","import * as React from 'react';\r\n\r\nexport type CellContent = React.ReactNode;\r\n\r\nexport interface TableCellProps extends React.DivProps {\r\n    children?: CellContent;\r\n    visible?: boolean;\r\n}\r\n\r\nexport class TableCell extends React.PureComponent<TableCellProps> { }\r\n\r\nexport interface CellRenderArgs {\r\n    rowIndex: number;\r\n    columnIndex: number;\r\n}\r\n\r\nexport type CellRender = (args: CellRenderArgs) => TableCell | CellContent;","import * as React from 'react';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\n\r\nexport class TableColumnProps {\r\n    public children?: [React.SubComp<ColumnHead>, React.SubComp<ColumnBody>];\r\n}\r\n\r\nexport class TableColumn extends React.PureComponent<TableColumnProps> { }","import * as React from 'react';\r\nimport { RowContent } from './TableRow';\r\n\r\nexport class TableHeadProps {\r\n\r\n    /**\r\n     * Default: 40px\r\n     */\r\n    public height?= '40px';\r\n    public children: RowContent;\r\n}\r\n\r\nexport class TableHead extends React.PureComponent<TableHeadProps> { }","import * as React from 'react';\r\nimport { TableCell, CellContent } from './TableCell';\r\n\r\nexport type RowContent = OneOrMore<React.SubComp<TableCell> | CellContent>;\r\n\r\nexport interface TableRowProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableRow extends React.PureComponent<TableRowProps> { }\r\n\r\nexport type RowRender = (index: number) => React.SubComp<TableRow> | RowContent;","import { styled } from '../styled';\r\n\r\n//\r\n// constants\r\n//\r\n\r\nconst scrollbarWidth = '17px';\r\nconst tableBorder = '1px solid #ddd';\r\n\r\n//\r\n// table\r\n//\r\n\r\nexport const StyledTableView = styled.div`\r\n    background-color: #fff;\r\n    width: 100%;\r\n    overflow-y: hidden;\r\n`;\r\n\r\n//\r\n// head\r\n//\r\n\r\nexport const StyledTableHead = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    overflow-y: hidden;\r\n\r\n    font-weight: bold;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const StyledTableHeadRow = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: stretch;\r\n\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-dir')}: ${scrollbarWidth};\r\n\r\n    border-bottom: ${tableBorder};\r\n`;\r\n\r\nexport const StyledTableHeadCell = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    padding: 8px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    align-items: flex-end;\r\n    vertical-align: bottom;\r\n`;\r\n\r\n//\r\n// body\r\n//\r\n\r\nexport const StyledTableBody = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const StyledTableBodyRow = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: stretch;\r\n\r\n    border-top: ${tableBorder};\r\n\r\n    &:first-of-type {\r\n        border-top: none;\r\n    }\r\n`;\r\n\r\nexport const StyledTableBodyCell = styled.div`\r\n    flex: 1;\r\n    padding: 8px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;","import { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { FixedSizeList } from 'react-window';\r\nimport { Theme } from '../styled';\r\nimport { ErrorBoundary } from '../utils/ErrorBoundary';\r\nimport { ReactUtils } from '../utils/reactUtils';\r\nimport * as utils from '../utils/utils';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\nimport { StyledTableBody, StyledTableBodyCell, StyledTableBodyRow, StyledTableHead, StyledTableHeadCell, StyledTableHeadRow, StyledTableView } from './style';\r\nimport { TableBody } from './TableBody';\r\nimport { CellContent, TableCell, TableCellProps } from './TableCell';\r\nimport { TableColumn } from './TableColumn';\r\nimport { TableHead, TableHeadProps } from './TableHead';\r\nimport { RowContent, TableRow, TableRowProps } from './TableRow';\r\nconst flattenDeep = require('lodash.flattendeep');\r\n\r\ninterface Heights {\r\n    height: any;\r\n    minHeight: any;\r\n    maxHeight: any;\r\n}\r\n\r\ntype TableChildren_RowsSyntax = [React.SubComp<TableHead>, React.SubComp<TableBody>];\r\n\r\ntype TableChildren_ColumnsSyntax = OneOrMore<React.SubComp<TableColumn>>;\r\n\r\nexport type RowKeyCallback = (index: number) => React.Key;\r\n\r\nexport class TableViewProps {\r\n\r\n    //\r\n    // main props\r\n    //\r\n\r\n    public rowCount: number;\r\n    public rowKey?: RowKeyCallback;\r\n    public children?: TableChildren_RowsSyntax | TableChildren_ColumnsSyntax;\r\n\r\n    //\r\n    // appearance\r\n    //\r\n\r\n    public dir?: DocDir = 'ltr';\r\n    public className?: string;\r\n    public style?: React.CSSProperties;\r\n    /**\r\n     * Row height in pixels.  \r\n     * Default: 50\r\n     */\r\n    public rowHeight?= 50;\r\n    public emptyMessage?= \"No Items to Display\";\r\n\r\n    //\r\n    // virtualization\r\n    //\r\n\r\n    /**\r\n     * Number of extra buffer items to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 20\r\n     */\r\n    public overscanCount?= 20;\r\n\r\n}\r\n\r\nexport class TableView extends React.PureComponent<TableViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = TableHead;\r\n\r\n    public static Body = TableBody;\r\n\r\n    public static Row = TableRow;\r\n\r\n    public static Cell = TableCell;\r\n\r\n    public static Column = TableColumn;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps = new TableViewProps();\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        // head & body\r\n        let head = ReactUtils.singleChildOfType(this, TableHead);\r\n        let body = ReactUtils.singleChildOfType(this, TableBody);\r\n        const columns = ReactUtils.childrenOfType(this, TableColumn);\r\n\r\n        // columns\r\n        if (columns && columns.length) {\r\n            if (head || body)\r\n                throw new Error('Can not specify head and/or body when specifying table columns.');\r\n\r\n            head = this.createHeadFromColumns(columns);\r\n            body = this.createBodyFromColumns(columns);\r\n        }\r\n\r\n        // render\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <StyledTableView\r\n                        className={this.props.className}\r\n                        style={Object.assign({}, this.props.style, this.getHeights())}\r\n                    >\r\n                        {this.renderTableHead(head)}\r\n                        {this.renderTableBody(head, body)}\r\n                    </StyledTableView>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderTableHead(head: TableHead) {\r\n\r\n        if (!head)\r\n            return null;\r\n\r\n        return (\r\n\r\n            <StyledTableHead style={{ height: head.props.height }}>\r\n                <StyledTableHeadRow>\r\n                    <ErrorBoundary>\r\n\r\n                        {/* main columns */}\r\n                        {React.Children.map(head.props.children, (cell, index) => {\r\n\r\n                            const headCell: TableCell = cell as any;\r\n                            const cellProps = this.getHeadCellProps(headCell);\r\n                            if (cellProps.visible === false)\r\n                                return null;\r\n\r\n                            const cellContent = this.getHeadCellContent(headCell);\r\n                            return (\r\n                                <StyledTableHeadCell\r\n                                    key={index}\r\n                                    {...cellProps}\r\n                                >\r\n                                    <ErrorBoundary>\r\n                                        {cellContent}\r\n                                    </ErrorBoundary>\r\n                                </StyledTableHeadCell>\r\n                            );\r\n                        })}\r\n\r\n                    </ErrorBoundary>\r\n                </StyledTableHeadRow>\r\n            </StyledTableHead>\r\n        );\r\n    }\r\n\r\n    private renderTableBody(head: TableHead, body: TableBody) {\r\n\r\n        const headProps = this.getHeadProps(head);\r\n        const heightValues = this.getHeights();\r\n        const bodyHeight = `calc(${heightValues.height} - ${headProps.height})`;\r\n        const bodyMinHeight = `calc(${heightValues.minHeight} - ${headProps.height})`;\r\n        const bodyMaxHeight = `calc(${heightValues.maxHeight} - ${headProps.height})`;\r\n\r\n        return (\r\n            <StyledTableBody\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    height: bodyHeight,\r\n                    minHeight: bodyMinHeight,\r\n                    maxHeight: bodyMaxHeight\r\n                }}\r\n            >\r\n                <ErrorBoundary>\r\n                    {this.renderTableRows(body)}\r\n                </ErrorBoundary>\r\n            </StyledTableBody>\r\n        );\r\n    }\r\n\r\n    private renderTableRows(body: TableBody) {\r\n\r\n        // placeholder\r\n        if (this.props.rowCount === 0 || !this.hasBody(body)) {\r\n            return this.renderItemsPlaceHolder();\r\n        }\r\n\r\n        // table rows\r\n        return (\r\n            <AutoSizer>\r\n                {({ width, height }) => (\r\n                    <FixedSizeList\r\n                        style={{ outline: 'none' }}\r\n                        direction={this.props.dir}\r\n                        layout=\"vertical\"\r\n                        height={height}\r\n                        width={width}\r\n                        itemCount={this.props.rowCount}\r\n                        itemSize={this.props.rowHeight}\r\n                    >\r\n                        {({ index, style }) => {\r\n\r\n                            const rowRender = body.props.children;\r\n                            if (!rowRender)\r\n                                return null;\r\n\r\n                            const row = rowRender(index);\r\n                            const { style: rowStyle, ...rowProps } = this.getRowProps(row);\r\n                            const rowKey = this.getRowKey(rowProps, index);\r\n                            const rowContent = this.getRowContent(row);\r\n\r\n                            return (\r\n                                <StyledTableBodyRow\r\n                                    style={Object.assign({}, style, rowStyle || {})}\r\n                                    key={rowKey}\r\n                                    {...rowProps}\r\n                                >\r\n                                    <ErrorBoundary>\r\n\r\n                                        {/* main columns */}\r\n                                        {utils.asArray(rowContent).map((cell, columnIndex) => {\r\n\r\n                                            const cellProps = this.getCellProps(cell);\r\n                                            if (cellProps.visible === false)\r\n                                                return null;\r\n\r\n                                            return (\r\n                                                <StyledTableBodyCell\r\n                                                    key={columnIndex}\r\n                                                    {...cellProps}\r\n                                                >\r\n                                                    <ErrorBoundary>\r\n                                                        {this.getCellContent(cell)}\r\n                                                    </ErrorBoundary>\r\n                                                </StyledTableBodyCell>\r\n                                            );\r\n                                        })}\r\n\r\n                                    </ErrorBoundary>\r\n                                </StyledTableBodyRow>\r\n                            );\r\n                        }}\r\n                    </FixedSizeList>\r\n                )}\r\n            </AutoSizer>\r\n        );\r\n    }\r\n\r\n    private renderItemsPlaceHolder() {\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {this.props.emptyMessage}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir\r\n        };\r\n    }\r\n\r\n    private getHeights(): Heights {\r\n        let height = (this.props.style || {}).height;\r\n        let minHeight = (this.props.style || {}).minHeight;\r\n        let maxHeight = (this.props.style || {}).maxHeight;\r\n\r\n        if (height === undefined && minHeight === undefined) {\r\n            height = TableView.defaultHeight;\r\n        }\r\n\r\n        height = utils.cssSizeString(height);\r\n        minHeight = utils.cssSizeString(minHeight);\r\n        maxHeight = utils.cssSizeString(maxHeight);\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    //\r\n    // components structure handling\r\n    //  \r\n\r\n    private createHeadFromColumns(columns: TableColumn[]): TableHead {\r\n\r\n        if (columns.every(col => !ReactUtils.singleChildOfType(col, ColumnHead)))\r\n            return null;\r\n\r\n        const head: any = (\r\n            <TableHead>\r\n                {columns.map(col => {\r\n                    const colHead = ReactUtils.singleChildOfType(col, ColumnHead);\r\n                    if (!colHead)\r\n                        return null;\r\n\r\n                    return <TableCell {...(colHead.props as any)} />;\r\n                })}\r\n            </TableHead>\r\n        );\r\n        return head;\r\n    }\r\n\r\n    private createBodyFromColumns(columns: TableColumn[]): TableBody {\r\n        const body: any = (\r\n            <TableBody>\r\n                {(rowIndex: number) => columns.map((col, columnIndex) => {\r\n                    const cellRender = ReactUtils.singleChildOfType(col, ColumnBody).props.children;\r\n                    if (!cellRender)\r\n                        return null;\r\n                    return cellRender({ rowIndex, columnIndex });\r\n                })}\r\n            </TableBody>\r\n        );\r\n        return body;\r\n    }\r\n\r\n    private getHeadProps(head: TableHead): TableHeadProps {\r\n        if (ReactUtils.elementInstanceOf(head, TableRow)) {\r\n            return head.props;\r\n        } else {\r\n            return new TableHeadProps();\r\n        }\r\n    }\r\n\r\n    private getHeadCellProps(cell: TableCell): TableCellProps {\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell))\r\n            return cell.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getHeadCellContent(cell: TableCell): CellContent {\r\n\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell)) {\r\n            return cell.props.children;\r\n        }\r\n\r\n        return cell;\r\n    }\r\n\r\n    private hasBody(body: TableBody): boolean {\r\n\r\n        if (!body)\r\n            return false;\r\n\r\n        if (utils.isNullOrUndefined(body.props.children))\r\n            return false;\r\n\r\n        if (typeof body.props.children === 'function')\r\n            return true;\r\n\r\n        if (Array.isArray(body.props.children))\r\n            return body.props.children.length > 0;\r\n\r\n        const childrenCount = React.Children.count(body.props.children);\r\n        return childrenCount > 0;\r\n    }\r\n\r\n    private getRowProps(row: any): TableRowProps {\r\n\r\n        if (ReactUtils.elementInstanceOf(row, TableRow))\r\n            return row.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getRowContent(row: any): RowContent {\r\n\r\n        let content: RowContent = row;\r\n\r\n        // fragment element\r\n        if (ReactUtils.isReactFragment(content)) {\r\n            throw new Error('Can not use React.Fragment as row content. Consider wrapping your content with a row element.');\r\n        }\r\n\r\n        // row element\r\n        if (ReactUtils.elementInstanceOf(content, TableRow)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        if (Array.isArray(content)) {\r\n            content = flattenDeep(content);\r\n        }\r\n        return content;\r\n    }\r\n\r\n    private getRowKey(rowProps: TableRowProps, index: number): React.Key {\r\n\r\n        if (!utils.isNullOrUndefined(rowProps.key))\r\n            return rowProps.key;\r\n\r\n        if (typeof this.props.rowKey === 'function')\r\n            return this.props.rowKey(index);\r\n\r\n        return index;\r\n    }\r\n\r\n    private getCellProps(cell: any): TableCellProps {\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell))\r\n            return cell.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getCellContent(cell: any): CellContent {\r\n\r\n        let content = cell;\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(content, TableCell)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        return content || null;\r\n    }\r\n}","export * from './ColumnBody';\r\nexport * from './ColumnHead';\r\nexport * from './TableBody';\r\nexport * from './TableCell';\r\nexport * from './TableColumn';\r\nexport * from './TableHead';\r\nexport * from './TableRow';\r\nexport * from './TableView';\r\n","export * from './grid';\r\nexport * from './table';\r\n","module.exports = require(\"@emotion/styled\");","module.exports = require(\"emotion-theming\");","module.exports = require(\"lodash.flattendeep\");","module.exports = require(\"normalize-scroll-left\");","module.exports = require(\"react\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-virtualized-auto-sizer\");","module.exports = require(\"react-window\");"],"sourceRoot":""}