{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableColumn.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableRow.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\ErrorBoundary.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\reactUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\styled.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\index.ts","external \"@emotion/styled\"","external \"emotion-theming\"","external \"lodash.flattendeep\"","external \"react\"","external \"react-virtualized-auto-sizer\"","external \"react-window\""],"names":["GridViewProps","GridView","React","ColumnBodyProps","ColumnBody","ColumnHeadProps","ColumnHead","TableBodyProps","TableBody","TableCell","TableColumnProps","TableColumn","TableHeadProps","TableHead","TableRow","ErrorBoundaryState","ErrorBoundary","props","state","hasError","error","errorInfo","setState","console","children","undefined","ReactUtils","elem","type","prototype","isPrototypeOf","createPropsToAdd","map","child","index","propsToAdd","parentElement","Array","isArray","childrenArray","filter","elementInstanceOf","matchingChildren","childrenOfType","length","Error","name","isNullOrUndefined","val","asArray","cssSizeString","size","Number","isFinite","styledWithTheme","scrollbarWidth","tableBorder","StyledTableView","styled","div","StyledTableHead","StyledTableHeadRow","theme","dir","StyledTableHeadCell","StyledTableBody","StyledTableBodyRow","StyledTableBodyCell","flattenDeep","require","TableViewProps","TableViewState","TableView","head","singleChildOfType","body","columns","createHeadFromColumns","createBodyFromColumns","getTheme","className","Object","assign","style","getHeights","renderTableHead","renderTableBody","height","cell","headCell","cellProps","getHeadCellProps","visible","cellContent","getHeadCellContent","headProps","getHeadProps","heightValues","bodyHeight","bodyMinHeight","minHeight","bodyMaxHeight","maxHeight","direction","renderTableRows","items","hasBody","renderItemsPlaceHolder","width","outline","rowHeight","rowRender","item","row","getRowProps","rowStyle","rowProps","rowKey","getRowKey","rowContent","getRowContent","utils","columnIndex","getCellProps","getCellContent","textAlign","emptyMessage","defaultHeight","itemId","id","col","itemIndex","cellRender","childrenCount","count","content","isReactFragment","key","getItemId"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAEO,IAAMA,aAAb;AAAA;AAAA;AAGO,IAAMC,iBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACoB;AACZ,aACI,mDADJ;AAGH;AALL;;AAAA;AAAA,EAA8BC,gCAA9B,E;;;;;;;;;;;;;;;;;;;;ACLA;AAGO,IAAMC,eAAb;AAAA;;AAAA;AAAA;AAIO,IAAMC,UAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAmCF,gCAAnC,E;;;;;;;;;;;;;;;;;;ACPA;AAGO,IAAMG,eAAb;AAAA;;AAAA,4CAKoB,MALpB;;AAAA;AAAA;AASO,IAAMC,UAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAmCJ,gCAAnC,E;;;;;;;;;;;;;;;;;;ACZA;AAGO,IAAMK,cAAb;AAAA;;AAAA;AAAA;AAIO,IAAMC,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAkCN,gCAAlC,E;;;;;;;;;;;;;;;;ACPA;AASO,IAAMO,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAkCP,gCAAlC,E;;;;;;;;;;;;;;;;;;ACTA;AAIO,IAAMQ,gBAAb;AAAA;;AAAA;AAAA;AAIO,IAAMC,WAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAoCT,gCAApC,E;;;;;;;;;;;;;;;;;;ACRA;AAGO,IAAMU,cAAb;AAAA;;AAAA,2CAKoB,MALpB;;AAAA;AAAA;AASO,IAAMC,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAkCX,gCAAlC,E;;;;;;;;;;;;;;;;ACZA;AASO,IAAMY,QAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAiCZ,gCAAjC,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;;IAEMa,kB;;;;;;AAIC,IAAMC,2BAAb;AAAA;AAAA;AAAA;;AAEI,yBAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACpB,iHAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,cAAQ,EAAE;AAAZ,KAAb;AAFoB;AAGvB;;AALL;AAAA;AAAA,sCAO6BC,KAP7B,EAO2CC,SAP3C,EAO6E;AACrE,WAAKC,QAAL,CAAc;AAAEH,gBAAQ,EAAE;AAAZ,OAAd;AACAI,aAAO,CAACH,KAAR,CAAcA,KAAd;AACH;AAVL;AAAA;AAAA,6BAYoB;AACZ,UAAI,KAAKF,KAAL,CAAWC,QAAf,EAAyB;AACrB,eACI,mDADJ;AAGH;;AACD,aAAO,KAAKF,KAAL,CAAWO,QAAX,KAAwBC,SAAxB,GAAoC,KAAKR,KAAL,CAAWO,QAA/C,GAA0D,IAAjE;AACH;AAnBL;;AAAA;AAAA,EAAmCtB,4BAAnC,E;;;;;;;;ACNA;AAEO,IAAMwB,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEI;AACA;AACA;AAJJ,6BAM8BC,IAN9B,EAM4C;AACpC,aAAQA,IAAI,IAAKA,IAAD,CAAcV,KAAvB,IAAiC,EAAxC;AACH,KARL,CAUI;AACA;AACA;;AAZJ;AAAA;AAAA,sCAcuCU,IAdvC,EAckDC,IAdlD,EAcmF;AAC3E,UAAI,CAACD,IAAL,EACI,OAAO,KAAP;AACJ,UAAI,CAACA,IAAI,CAACC,IAAV,EACI,OAAO,KAAP,CAJuE,CAM3E;AACA;AACA;;AAEA,aAAOD,IAAI,CAACC,IAAL,KAAcA,IAAd,IACHD,IAAI,CAACC,IAAL,CAAUC,SAAV,YAA+BD,IAD5B,IAEHA,IAAI,CAACE,aAAL,CAAmBH,IAAI,CAACC,IAAxB,CAFJ;AAGH;AA3BL;AAAA;AAAA,oCA6BkCD,IA7BlC,EA6BsD;AAC9C,aAAOzB,iCAAA,CAAqByB,IAArB,KAA8BA,IAAI,CAACC,IAAL,KAAc1B,2BAAnD;AACH,KA/BL,CAiCI;AACA;AACA;;AAnCJ;AAAA;AAAA,uCAqCqCsB,QArCrC,EAqCgEO,gBArChE,EAqC2I;AAEnI;AACA,aAAO7B,2BAAA,CAAe8B,GAAf,CAAmBR,QAAnB,EAA6B,UAACS,KAAD,EAAiCC,KAAjC,EAAmD;AACnF,YAAMC,UAAU,GAAGJ,gBAAgB,CAACE,KAAD,EAAQC,KAAR,CAAnC;AACA,eAAOhC,+BAAA,CAAmB+B,KAAnB,EAA0BE,UAA1B,CAAP;AACH,OAHM,CAAP;AAIH;AA5CL;AAAA;AAAA,kCA8CgCC,aA9ChC,EA8CwE;AAChE,UAAI,CAACA,aAAL,EACI,OAAO,IAAP;AACJ,UAAI,CAACA,aAAa,CAACnB,KAAnB,EACI,OAAO,IAAP;AAEJ,UAAMO,QAAQ,GAAGY,aAAa,CAACnB,KAAd,CAAoBO,QAArC;AACA,UAAIa,KAAK,CAACC,OAAN,CAAcd,QAAd,CAAJ,EACI,OAAOA,QAAP;AAEJ,aAAOtB,2BAAA,CAAe8B,GAAf,CAAmBR,QAAnB,EAA6B,UAAAS,KAAK;AAAA,eAAIA,KAAJ;AAAA,OAAlC,CAAP;AACH;AAzDL;AAAA;AAAA,mCA2DoCG,aA3DpC,EA2DwDR,IA3DxD,EA2DmF;AAC3E,UAAMJ,QAAQ,GAAGE,UAAU,CAACa,aAAX,CAAyBH,aAAzB,CAAjB;AACA,UAAI,CAACZ,QAAL,EACI,OAAO,IAAP;AACJ,aAAOA,QAAQ,CAACgB,MAAT,CAAgB,UAAAP,KAAK;AAAA,eAAIP,UAAU,CAACe,iBAAX,CAA6BR,KAA7B,EAAoCL,IAApC,CAAJ;AAAA,OAArB,CAAP;AACH;AAED;;;;;;;;;;AAlEJ;AAAA;AAAA,sCA2EuCQ,aA3EvC,EA2E2DR,IA3E3D,EA2EoF;AAC5E,UAAMc,gBAAgB,GAAGhB,UAAU,CAACiB,cAAX,CAA0BP,aAA1B,EAAyCR,IAAzC,CAAzB;AACA,UAAI,CAACc,gBAAD,IAAqB,CAACA,gBAAgB,CAACE,MAA3C,EACI,OAAO,IAAP;AAEJ,UAAIF,gBAAgB,CAACE,MAAjB,GAA0B,CAA9B,EACI,MAAM,IAAIC,KAAJ,oBAAsBjB,IAAI,CAACkB,IAA3B,gCAAN;AAEJ,aAAOJ,gBAAgB,CAAC,CAAD,CAAvB;AACH,KApFL,CAsFI;;AAtFJ;AAAA;AAAA,wCAuFsCN,aAvFtC,EAuFoE;AAC5D,UAAI,CAACA,aAAL,EACI,OAAO,IAAP;AACJ,UAAI,CAACA,aAAa,CAACnB,KAAnB,EACI,OAAO,IAAP;AAEJ,UAAMO,QAAQ,GAAGY,aAAa,CAACnB,KAAd,CAAoBO,QAArC;AACA,UAAI,OAAOY,aAAa,CAACnB,KAAd,CAAoBO,QAA3B,KAAwC,UAA5C,EACI,OAAO,IAAP;AAEJ,aAAOA,QAAP;AACH;AAlGL;;AAAA;AAAA,I;;ACDO,SAASuB,iBAAT,CAA2BC,GAA3B,EAA8C;AACjD,SAAOA,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKvB,SAA/B;AACH;AAEM,SAASwB,OAAT,CAAoBD,GAApB,EAAuC;AAC1C,MAAIX,KAAK,CAACC,OAAN,CAAcU,GAAd,CAAJ,EACI,OAAOA,GAAP;AAEJ,SAAO,CAACA,GAAD,CAAP;AACH;AAEM,SAASE,aAAT,CAAuBC,IAAvB,EAA0C;AAC7C,MAAIC,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAJ,EACI,OAAOA,IAAI,GAAG,IAAd;AACJ,SAAOA,IAAP;AACH,C;;;;;;;ACVD,IAAMG,eAAe,GAAG,gBAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CCJA;AACA;AACA;;AAEA,IAAMC,cAAc,GAAG,MAAvB;AACA,IAAMC,WAAW,GAAG,gBAApB,C,CAEA;AACA;AACA;;AAEO,IAAMC,eAAe,GAAGC,eAAM,CAACC,GAAV,mBAArB,C,CAMP;AACA;AACA;;AAEO,IAAMC,eAAe,GAAGF,eAAM,CAACC,GAAV,oBAArB;AAUA,IAAME,kBAAkB,GAAGH,eAAM,CAACC,GAAV,qBAKzB,UAAA1C,KAAK;AAAA,SAAKA,KAAK,CAAC6C,KAAN,CAAYC,GAAZ,KAAoB,KAApB,GAA4B,cAA5B,GAA6C,aAAlD;AAAA,CALoB,EAKiDR,cALjD,EAOVC,WAPU,CAAxB;AAUA,IAAMQ,mBAAmB,GAAGN,eAAM,CAACC,GAAV,oBAAzB,C,CAUP;AACA;AACA;;AAEO,IAAMM,eAAe,GAAGP,eAAM,CAACC,GAAV,oBAArB;AAOA,IAAMO,kBAAkB,GAAGR,eAAM,CAACC,GAAV,qBAKbH,WALa,CAAxB;AAYA,IAAMW,mBAAmB,GAAGT,eAAM,CAACC,GAAV,oBAAzB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMS,WAAW,GAAGC,mBAAO,CAAC,8CAAD,CAA3B;;AAcO,IAAMC,cAAb;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,wCAc0B,KAd1B;;AAAA;;AAAA;;AAAA,8CAqBuB,EArBvB;;AAAA,iDAsB0B,qBAtB1B;;AAAA,kDAmC2B,EAnC3B;AAAA;;IAuCMC,c;;;kDAC8B,E;;;AAG7B,IAAMC,mBAAb;AAAA;AAAA;AAAA;;AAII;AACA;AACA;AAYA;AACA;AACA;AAIA,qBAAYvD,KAAZ,EAAsC;AAAA;;AAAA;;AAClC,qGAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,IAAIqD,cAAJ,EAAb;AAFkC;AAGrC,GA3BL,CA6BI;AACA;AACA;;;AA/BJ;AAAA;AAAA,6BAiCoB;AAEZ;AACA,UAAIE,IAAI,GAAG/C,qBAAU,CAACgD,iBAAX,CAA6B,IAA7B,EAAmC7D,SAAnC,CAAX;AACA,UAAI8D,IAAI,GAAGjD,qBAAU,CAACgD,iBAAX,CAA6B,IAA7B,EAAmClE,SAAnC,CAAX;AACA,UAAMoE,OAAO,GAAGlD,qBAAU,CAACiB,cAAX,CAA0B,IAA1B,EAAgChC,WAAhC,CAAhB,CALY,CAOZ;;AACA,UAAIiE,OAAO,IAAIA,OAAO,CAAChC,MAAvB,EAA+B;AAC3B,YAAI6B,IAAI,IAAIE,IAAZ,EACI,MAAM,IAAI9B,KAAJ,CAAU,iEAAV,CAAN;AAEJ4B,YAAI,GAAG,KAAKI,qBAAL,CAA2BD,OAA3B,CAAP;AACAD,YAAI,GAAG,KAAKG,qBAAL,CAA2BF,OAA3B,CAAP;AACH,OAdW,CAgBZ;;;AACA,aACI,iCAAC,2BAAD,QACI,iCAAC,0CAAD;AAAe,aAAK,EAAE,KAAKG,QAAL;AAAtB,SACI,iCAAC,eAAD;AACI,iBAAS,EAAE,KAAK9D,KAAL,CAAW+D,SAD1B;AAEI,aAAK,EAAEC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKjE,KAAL,CAAWkE,KAA7B,EAAoC,KAAKC,UAAL,EAApC;AAFX,SAIK,KAAKC,eAAL,CAAqBZ,IAArB,CAJL,EAKK,KAAKa,eAAL,CAAqBb,IAArB,EAA2BE,IAA3B,CALL,CADJ,CADJ,CADJ;AAaH;AA/DL;AAAA;AAAA,oCAiE4BF,IAjE5B,EAiEgD;AAAA;;AAExC,UAAI,CAACA,IAAL,EACI,OAAO,IAAP;AAEJ,aAEI,iCAAC,eAAD;AAAiB,aAAK,EAAE;AAAEc,gBAAM,EAAEd,IAAI,CAACxD,KAAL,CAAWsE;AAArB;AAAxB,SACI,iCAAC,kBAAD,QACI,iCAAC,2BAAD,QAGKrF,2BAAA,CAAe8B,GAAf,CAAmByC,IAAI,CAACxD,KAAL,CAAWO,QAA9B,EAAwC,UAACgE,IAAD,EAAOtD,KAAP,EAAiB;AAEtD,YAAMuD,QAAsB,GAAGD,IAA/B;;AACA,YAAME,SAAS,GAAG,MAAI,CAACC,gBAAL,CAAsBF,QAAtB,CAAlB;;AACA,YAAIC,SAAS,CAACE,OAAV,KAAsB,KAA1B,EACI,OAAO,IAAP;;AAEJ,YAAMC,WAAW,GAAG,MAAI,CAACC,kBAAL,CAAwBL,QAAxB,CAApB;;AACA,eACI,iCAAC,mBAAD;AACI,aAAG,EAAEvD;AADT,WAEQwD,SAFR,GAII,iCAAC,2BAAD,QACKG,WADL,CAJJ,CADJ;AAUH,OAlBA,CAHL,CADJ,CADJ,CAFJ;AA+BH;AArGL;AAAA;AAAA,oCAuG4BpB,IAvG5B,EAuGgDE,IAvGhD,EAuGoE;AAE5D,UAAMoB,SAAS,GAAG,KAAKC,YAAL,CAAkBvB,IAAlB,CAAlB;AACA,UAAMwB,YAAY,GAAG,KAAKb,UAAL,EAArB;AACA,UAAMc,UAAU,kBAAWD,YAAY,CAACV,MAAxB,gBAAoCQ,SAAS,CAACR,MAA9C,MAAhB;AACA,UAAMY,aAAa,kBAAWF,YAAY,CAACG,SAAxB,gBAAuCL,SAAS,CAACR,MAAjD,MAAnB;AACA,UAAMc,aAAa,kBAAWJ,YAAY,CAACK,SAAxB,gBAAuCP,SAAS,CAACR,MAAjD,MAAnB;AAEA,aACI,iCAAC,eAAD;AACI,aAAK,EAAE;AACHgB,mBAAS,EAAE,KAAKtF,KAAL,CAAW8C,GADnB;AAEHwB,gBAAM,EAAEW,UAFL;AAGHE,mBAAS,EAAED,aAHR;AAIHG,mBAAS,EAAED;AAJR;AADX,SAQI,iCAAC,2BAAD,QACK,KAAKG,eAAL,CAAqB7B,IAArB,CADL,CARJ,CADJ;AAcH;AA7HL;AAAA;AAAA,oCA+H4BA,IA/H5B,EA+HgD;AAAA;;AAExC;AACA,UAAI,KAAK1D,KAAL,CAAWwF,KAAX,CAAiB7D,MAAjB,KAA4B,CAA5B,IAAiC,CAAC,KAAK8D,OAAL,CAAa/B,IAAb,CAAtC,EAA0D;AACtD,eAAO,KAAKgC,sBAAL,EAAP;AACH,OALuC,CAOxC;;;AACA,aACI,iCAAC,+CAAD,QACK;AAAA,YAAGC,KAAH,QAAGA,KAAH;AAAA,YAAUrB,MAAV,QAAUA,MAAV;AAAA,eACG,iCAAC,uCAAD;AACI,eAAK,EAAE;AAAEsB,mBAAO,EAAE;AAAX,WADX;AAEI,mBAAS,EAAE,MAAI,CAAC5F,KAAL,CAAW8C,GAF1B;AAGI,gBAAM,EAAC,UAHX;AAII,gBAAM,EAAEwB,MAJZ;AAKI,eAAK,EAAEqB,KALX;AAMI,mBAAS,EAAE,MAAI,CAAC3F,KAAL,CAAWwF,KAAX,CAAiB7D,MANhC;AAOI,kBAAQ,EAAE,MAAI,CAAC3B,KAAL,CAAW6F;AAPzB,WASK,iBAAsB;AAAA,cAAnB5E,KAAmB,SAAnBA,KAAmB;AAAA,cAAZiD,KAAY,SAAZA,KAAY;AAEnB,cAAM4B,SAAS,GAAGpC,IAAI,CAAC1D,KAAL,CAAWO,QAA7B;AACA,cAAI,CAACuF,SAAL,EACI,OAAO,IAAP;AAEJ,cAAMC,IAAI,GAAG,MAAI,CAAC/F,KAAL,CAAWwF,KAAX,CAAiBvE,KAAjB,CAAb;AAEA,cAAM+E,GAAG,GAAGF,SAAS,CAACC,IAAD,EAAO9E,KAAP,CAArB;;AARmB,mCASsB,MAAI,CAACgF,WAAL,CAAiBD,GAAjB,CATtB;AAAA,cASJE,QATI,sBASXhC,KATW;AAAA,cASSiC,QATT;;AAUnB,cAAMC,MAAM,GAAG,MAAI,CAACC,SAAL,CAAeF,QAAf,EAAyBJ,IAAzB,EAA+B9E,KAA/B,CAAf;;AACA,cAAMqF,UAAU,GAAG,MAAI,CAACC,aAAL,CAAmBP,GAAnB,CAAnB;;AAEA,iBACI,iCAAC,kBAAD;AACI,iBAAK,EAAEhC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,KAAlB,EAAyBgC,QAAQ,IAAI,EAArC,CADX;AAEI,eAAG,EAAEE;AAFT,aAGQD,QAHR,GAKI,iCAAC,2BAAD,QAGKK,OAAA,CAAcF,UAAd,EAA0BvF,GAA1B,CAA8B,UAACwD,IAAD,EAAOkC,WAAP,EAAuB;AAElD,gBAAMhC,SAAS,GAAG,MAAI,CAACiC,YAAL,CAAkBnC,IAAlB,CAAlB;;AACA,gBAAIE,SAAS,CAACE,OAAV,KAAsB,KAA1B,EACI,OAAO,IAAP;AAEJ,mBACI,iCAAC,mBAAD;AACI,iBAAG,EAAE8B;AADT,eAEQhC,SAFR,GAII,iCAAC,2BAAD,QACK,MAAI,CAACkC,cAAL,CAAoBpC,IAApB,CADL,CAJJ,CADJ;AAUH,WAhBA,CAHL,CALJ,CADJ;AA8BH,SApDL,CADH;AAAA,OADL,CADJ;AA4DH;AAnML;AAAA;AAAA,6CAqMqC;AAC7B,aACI,8CACI;AAAK,aAAK,EAAE;AAAEqC,mBAAS,EAAE;AAAb;AAAZ,SACK,KAAK5G,KAAL,CAAW6G,YADhB,CADJ,CADJ;AAOH;AA7ML;AAAA;AAAA,+BA+M8B;AACtB,aAAO;AACH/D,WAAG,EAAE,KAAK9C,KAAL,CAAW8C;AADb,OAAP;AAGH;AAnNL;AAAA;AAAA,iCAqNkC;AAC1B,UAAIwB,MAAM,GAAG,CAAC,KAAKtE,KAAL,CAAWkE,KAAX,IAAoB,EAArB,EAAyBI,MAAtC;AACA,UAAIa,SAAS,GAAG,CAAC,KAAKnF,KAAL,CAAWkE,KAAX,IAAoB,EAArB,EAAyBiB,SAAzC;AACA,UAAIE,SAAS,GAAG,CAAC,KAAKrF,KAAL,CAAWkE,KAAX,IAAoB,EAArB,EAAyBmB,SAAzC;;AAEA,UAAIf,MAAM,KAAK9D,SAAX,IAAwB2E,SAAS,KAAK3E,SAA1C,EAAqD;AACjD8D,cAAM,GAAGf,SAAS,CAACuD,aAAnB;AACH;;AAEDxC,YAAM,GAAGkC,aAAA,CAAoBlC,MAApB,CAAT;AACAa,eAAS,GAAGqB,aAAA,CAAoBrB,SAApB,CAAZ;AACAE,eAAS,GAAGmB,aAAA,CAAoBnB,SAApB,CAAZ;AAEA,aAAO;AACHf,cAAM,EAANA,MADG;AAEHa,iBAAS,EAATA,SAFG;AAGHE,iBAAS,EAATA;AAHG,OAAP;AAKH,KAvOL,CAyOI;AACA;AACA;;AA3OJ;AAAA;AAAA,8BA6OsBU,IA7OtB,EA6O+B9E,KA7O/B,EA6OkD;AAC1C,UAAI,OAAO,KAAKjB,KAAL,CAAW+G,MAAlB,KAA6B,UAAjC,EAA6C;AACzC,eAAO,KAAK/G,KAAL,CAAW+G,MAAX,CAAkBhB,IAAlB,EAAwB9E,KAAxB,CAAP;AACH,OAFD,MAEO;AACH,eAAQ8E,IAAD,CAAciB,EAArB;AACH;AACJ,KAnPL,CAqPI;AACA;AACA;;AAvPJ;AAAA;AAAA,0CAyPkCrD,OAzPlC,EAyP2E;AACnE,UAAMH,IAAS,GACX,iCAAC,SAAD,QACKG,OAAO,CAAC5C,GAAR,CAAY,UAAAkG,GAAG;AAAA,eAAIxG,qBAAU,CAACgD,iBAAX,CAA6BwD,GAA7B,EAAkC5H,UAAlC,EAA8CW,KAA9C,CAAoDO,QAAxD;AAAA,OAAf,CADL,CADJ;AAKA,aAAOiD,IAAP;AACH;AAhQL;AAAA;AAAA,0CAkQkCG,OAlQlC,EAkQ2E;AACnE,UAAMD,IAAS,GACX,iCAAC,SAAD,QACK,UAACqC,IAAD,EAAUmB,SAAV;AAAA,eAAgCvD,OAAO,CAAC5C,GAAR,CAAY,UAACkG,GAAD,EAAMR,WAAN,EAAsB;AAC/D,cAAMU,UAAU,GAAG1G,qBAAU,CAACgD,iBAAX,CAA6BwD,GAA7B,EAAkC9H,UAAlC,EAA8Ca,KAA9C,CAAoDO,QAAvE;AACA,cAAI,CAAC4G,UAAL,EACI,OAAO,IAAP;AACJ,iBAAOA,UAAU,CAACpB,IAAD,EAAOmB,SAAP,EAAkBT,WAAlB,CAAjB;AACH,SALgC,CAAhC;AAAA,OADL,CADJ;AAUA,aAAO/C,IAAP;AACH;AA9QL;AAAA;AAAA,iCAgRyBF,IAhRzB,EAgRgE;AACxD,UAAI/C,qBAAU,CAACe,iBAAX,CAA6BgC,IAA7B,EAAmC3D,QAAnC,CAAJ,EAAkD;AAC9C,eAAO2D,IAAI,CAACxD,KAAZ;AACH,OAFD,MAEO;AACH,eAAO,IAAIL,cAAJ,EAAP;AACH;AACJ;AAtRL;AAAA;AAAA,qCAwR6B4E,IAxR7B,EAwRoE;AAE5D;AACA,UAAI9D,qBAAU,CAACe,iBAAX,CAA6B+C,IAA7B,EAAmC/E,SAAnC,CAAJ,EACI,OAAO+E,IAAI,CAACvE,KAAL,IAAc,EAArB,CAJwD,CAM5D;;AACA,aAAO,EAAP;AACH;AAhSL;AAAA;AAAA,uCAkS+BuE,IAlS/B,EAkSgE;AAExD,UAAI9D,qBAAU,CAACe,iBAAX,CAA6B+C,IAA7B,EAAmC/E,SAAnC,CAAJ,EAAmD;AAC/C,eAAO+E,IAAI,CAACvE,KAAL,CAAWO,QAAlB;AACH;;AAED,aAAOgE,IAAP;AACH;AAzSL;AAAA;AAAA,4BA2SoBb,IA3SpB,EA2SiD;AAEzC,UAAI,CAACA,IAAL,EACI,OAAO,KAAP;AAEJ,UAAI8C,iBAAA,CAAwB9C,IAAI,CAAC1D,KAAL,CAAWO,QAAnC,CAAJ,EACI,OAAO,KAAP;AAEJ,UAAI,OAAOmD,IAAI,CAAC1D,KAAL,CAAWO,QAAlB,KAA+B,UAAnC,EACI,OAAO,IAAP;AAEJ,UAAIa,KAAK,CAACC,OAAN,CAAcqC,IAAI,CAAC1D,KAAL,CAAWO,QAAzB,CAAJ,EACI,OAAOmD,IAAI,CAAC1D,KAAL,CAAWO,QAAX,CAAoBoB,MAApB,GAA6B,CAApC;AAEJ,UAAMyF,aAAa,GAAGnI,2BAAA,CAAeoI,KAAf,CAAqB3D,IAAI,CAAC1D,KAAL,CAAWO,QAAhC,CAAtB;AACA,aAAO6G,aAAa,GAAG,CAAvB;AACH;AA3TL;AAAA;AAAA,gCA6TwBpB,GA7TxB,EA6ToD;AAE5C,UAAIvF,qBAAU,CAACe,iBAAX,CAA6BwE,GAA7B,EAAkCnG,QAAlC,CAAJ,EACI,OAAOmG,GAAG,CAAChG,KAAJ,IAAa,EAApB,CAHwC,CAK5C;;AACA,aAAO,EAAP;AACH;AApUL;AAAA;AAAA,kCAsU0BgG,GAtU1B,EAsUmD;AAE3C,UAAIsB,OAAsB,GAAGtB,GAA7B,CAF2C,CAI3C;;AACA,UAAIvF,qBAAU,CAAC8G,eAAX,CAA2BD,OAA3B,CAAJ,EAAyC;AACrC,cAAM,IAAI1F,KAAJ,CAAU,+FAAV,CAAN;AACH,OAP0C,CAS3C;;;AACA,UAAInB,qBAAU,CAACe,iBAAX,CAA6B8F,OAA7B,EAAsCzH,QAAtC,CAAJ,EAAqD;AACjDyH,eAAO,GAAGA,OAAO,CAACtH,KAAR,CAAcO,QAAxB;AACH,OAZ0C,CAc3C;;;AACA,UAAIa,KAAK,CAACC,OAAN,CAAciG,OAAd,CAAJ,EAA4B;AACxBA,eAAO,GAAGnE,WAAW,CAACmE,OAAD,CAArB;AACH;;AACD,aAAOA,OAAP;AACH;AAzVL;AAAA;AAAA,8BA2VsBnB,QA3VtB,EA2VkDJ,IA3VlD,EA2V2D9E,KA3V3D,EA2VqF;AAE7E,UAAI,CAACuF,iBAAA,CAAwBL,QAAQ,CAACqB,GAAjC,CAAL,EACI,OAAOrB,QAAQ,CAACqB,GAAhB;AAEJ,UAAMT,MAAM,GAAG,KAAKU,SAAL,CAAe1B,IAAf,EAAqB9E,KAArB,CAAf;AACA,UAAI,CAACuF,iBAAA,CAAwBO,MAAxB,CAAL,EACI,OAAOA,MAAP;AAEJ,aAAO9F,KAAP;AACH;AArWL;AAAA;AAAA,iCAuWyBsD,IAvWzB,EAuWuD;AAE/C;AACA,UAAI9D,qBAAU,CAACe,iBAAX,CAA6B+C,IAA7B,EAAmC/E,SAAnC,CAAJ,EACI,OAAO+E,IAAI,CAACvE,KAAL,IAAc,EAArB,CAJ2C,CAM/C;;AACA,aAAO,EAAP;AACH;AA/WL;AAAA;AAAA,mCAiX2BuE,IAjX3B,EAiXmD;AAE3C,UAAI+C,OAAO,GAAG/C,IAAd,CAF2C,CAI3C;;AACA,UAAI9D,qBAAU,CAACe,iBAAX,CAA6B8F,OAA7B,EAAsC9H,SAAtC,CAAJ,EAAsD;AAClD8H,eAAO,GAAGA,OAAO,CAACtH,KAAR,CAAcO,QAAxB;AACH,OAP0C,CAS3C;;;AACA,aAAO+G,OAAO,IAAI,IAAlB;AACH;AA5XL;;AAAA;AAAA,EAAkCrI,gCAAlC;;yBAAasE,mB,mBAE8B,M;;yBAF9BA,mB,UAQY3D,S;;yBARZ2D,mB,UAUYhE,S;;yBAVZgE,mB,SAYW1D,Q;;yBAZX0D,mB,UAcY/D,S;;yBAdZ+D,mB,YAgBc7D,W;;yBAhBd6D,mB,kBAsBoB,IAAIF,cAAJ,E;;AC/FjC;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,4C;;;;;;;;;;;;ACAA,4C;;;;;;;;;;;;ACAA,+C;;;;;;;;;;;;ACAA,kC;;;;;;;;;;;;ACAA,yD;;;;;;;;;;;;ACAA,yC","file":"react-tablize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-tablize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-tablize\"] = factory();\n\telse\n\t\troot[\"react-tablize\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as React from 'react';\r\n\r\nexport class GridViewProps {\r\n}\r\n\r\nexport class GridView extends React.PureComponent<GridViewProps> {\r\n    public render() {\r\n        return (\r\n            <h1>Hi!</h1>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { CellRender } from './TableCell';\r\n\r\nexport class ColumnBodyProps<T> {\r\n    public children?: CellRender<T>;\r\n}\r\n\r\nexport class ColumnBody<T> extends React.PureComponent<ColumnBodyProps<T>> { }","import * as React from 'react';\r\nimport { TableCell, CellContent } from './TableCell';\r\n\r\nexport class ColumnHeadProps<T> {\r\n\r\n    /**\r\n     * Default: 40px\r\n     */\r\n    public height?= '40px';\r\n    public children: TableCell<T> | CellContent;\r\n}\r\n\r\nexport class ColumnHead<T> extends React.PureComponent<ColumnHeadProps<T>> { }","import * as React from 'react';\r\nimport { RowRender } from './TableRow';\r\n\r\nexport class TableBodyProps<T> {\r\n    public children?: RowRender<T>;\r\n}\r\n\r\nexport class TableBody<T> extends React.PureComponent<TableBodyProps<T>> { }","import * as React from 'react';\r\n\r\nexport type CellContent = React.ReactNode;\r\n\r\nexport interface TableCellProps<T> extends React.DivProps {\r\n    children?: CellContent;\r\n    visible?: boolean;\r\n}\r\n\r\nexport class TableCell<T> extends React.PureComponent<TableCellProps<T>> { }\r\n\r\nexport type CellRender<T> = (item: T, itemIndex: number, columnIndex: number) => TableCell<T> | CellContent;","import * as React from 'react';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\n\r\nexport class TableColumnProps<T> {\r\n    public children?: [React.SubComp<ColumnHead<T>>, React.SubComp<ColumnBody<T>>];\r\n}\r\n\r\nexport class TableColumn<T> extends React.PureComponent<TableColumnProps<T>> { }","import * as React from 'react';\r\nimport { RowContent } from './TableRow';\r\n\r\nexport class TableHeadProps<T> {\r\n\r\n    /**\r\n     * Default: 40px\r\n     */\r\n    public height?= '40px';\r\n    public children: RowContent<T>;\r\n}\r\n\r\nexport class TableHead<T> extends React.PureComponent<TableHeadProps<T>> { }","import * as React from 'react';\r\nimport { TableCell, CellContent } from './TableCell';\r\n\r\nexport type RowContent<T> = OneOrMore<React.SubComp<TableCell<T>> | CellContent>;\r\n\r\nexport interface TableRowProps<T> extends React.DivProps {\r\n    children?: RowContent<T>;\r\n}\r\n\r\nexport class TableRow<T> extends React.PureComponent<TableRowProps<T>> { }\r\n\r\nexport type RowRender<T> = (item: T, itemIndex: number) => React.SubComp<TableRow<T>> | RowContent<T>;","import * as React from 'react';\r\n\r\nclass ErrorBoundaryState {\r\n    public hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<{}, ErrorBoundaryState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n        this.setState({ hasError: true });\r\n        console.error(error);\r\n    }\r\n\r\n    public render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <span>X</span>\r\n            );\r\n        }\r\n        return this.props.children !== undefined ? this.props.children : null;\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport class ReactUtils {\r\n\r\n    //\r\n    // props\r\n    //\r\n\r\n    public static getProps<T>(elem: any): T {\r\n        return (elem && (elem as any).props) || {};\r\n    }\r\n\r\n    //\r\n    // react element\r\n    //\r\n\r\n    public static elementInstanceOf<T>(elem: any, type: Constructor<T>): elem is T {\r\n        if (!elem)\r\n            return false;\r\n        if (!elem.type)\r\n            return false;\r\n\r\n        // https://stackoverflow.com/questions/39387405/using-instanceof-to-test-for-base-class-of-a-react-component\r\n        // https://stackoverflow.com/questions/14486110/how-to-check-if-a-javascript-class-inherits-another-without-creating-an-obj\r\n        // https://stackoverflow.com/questions/2464426/whats-the-difference-between-isprototypeof-and-instanceof-in-javascript\r\n\r\n        return elem.type === type ||\r\n            elem.type.prototype instanceof type ||\r\n            type.isPrototypeOf(elem.type);\r\n    }\r\n\r\n    public static isReactFragment(elem: any): boolean {\r\n        return React.isValidElement(elem) && elem.type === React.Fragment;\r\n    }\r\n\r\n    //\r\n    // react children\r\n    //\r\n\r\n    public static addPropsToChildren(children: React.ReactNode, createPropsToAdd: (child: React.ReactElement<any>, index?: number) => any) {\r\n\r\n        // https://stackoverflow.com/questions/32370994/how-to-pass-props-to-this-props-children\r\n        return React.Children.map(children, (child: React.ReactElement<any>, index: number) => {\r\n            const propsToAdd = createPropsToAdd(child, index);\r\n            return React.cloneElement(child, propsToAdd);\r\n        });\r\n    }\r\n\r\n    public static childrenArray(parentElement: any): React.ReactChild[] {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (Array.isArray(children))\r\n            return children;\r\n\r\n        return React.Children.map(children, child => child);\r\n    }\r\n\r\n    public static childrenOfType<T>(parentElement: any, type: Constructor<T>): T[] {\r\n        const children = ReactUtils.childrenArray(parentElement);\r\n        if (!children)\r\n            return null;\r\n        return children.filter(child => ReactUtils.elementInstanceOf(child, type)) as any;\r\n    }\r\n\r\n    /**\r\n     * Return the only child that matches the given type.  \r\n     * If more than one child matches an error is thrown.  \r\n     * \r\n     * Notice that this function gives no indication of the total number of\r\n     * children, only the number of matching children.\r\n     * @param parentElement \r\n     * @param type \r\n     */\r\n    public static singleChildOfType<T>(parentElement: any, type: Constructor<T>): T {\r\n        const matchingChildren = ReactUtils.childrenOfType(parentElement, type);\r\n        if (!matchingChildren || !matchingChildren.length)\r\n            return null;\r\n\r\n        if (matchingChildren.length > 1)\r\n            throw new Error(`Only one ${type.name} child element is allowed.`);\r\n\r\n        return matchingChildren[0] as any;\r\n    }\r\n\r\n    // tslint:disable-next-line:ban-types\r\n    public static singleFunctionChild(parentElement: any): Function {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (typeof parentElement.props.children !== 'function')\r\n            return null;\r\n\r\n        return children;\r\n    }\r\n}","\r\nexport function isNullOrUndefined(val: any): boolean {\r\n    return val === null || val === undefined;\r\n}\r\n\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n    if (Array.isArray(val))\r\n        return val;\r\n\r\n    return [val];\r\n}\r\n\r\nexport function cssSizeString(size: any): string {\r\n    if (Number.isFinite(size))\r\n        return size + 'px';\r\n    return size;\r\n}","import styled, { CreateStyled } from '@emotion/styled';\r\n\r\nexport interface Theme {\r\n    dir: DocDir;\r\n}\r\n\r\nconst styledWithTheme = (styled as CreateStyled<Theme>);\r\n\r\nexport { styledWithTheme as styled };","import { styled } from '../styled';\r\n\r\n//\r\n// constants\r\n//\r\n\r\nconst scrollbarWidth = '17px';\r\nconst tableBorder = '1px solid #ddd';\r\n\r\n//\r\n// table\r\n//\r\n\r\nexport const StyledTableView = styled.div`\r\n    background-color: #fff;\r\n    width: 100%;\r\n    overflow-y: hidden;\r\n`;\r\n\r\n//\r\n// head\r\n//\r\n\r\nexport const StyledTableHead = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    overflow-y: hidden;\r\n\r\n    font-weight: bold;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const StyledTableHeadRow = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: stretch;\r\n\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-dir')}: ${scrollbarWidth};\r\n\r\n    border-bottom: ${tableBorder};\r\n`;\r\n\r\nexport const StyledTableHeadCell = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    padding: 8px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    align-items: flex-end;\r\n    vertical-align: bottom;\r\n`;\r\n\r\n//\r\n// body\r\n//\r\n\r\nexport const StyledTableBody = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const StyledTableBodyRow = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: stretch;\r\n\r\n    border-top: ${tableBorder};\r\n\r\n    &:first-of-type {\r\n        border-top: none;\r\n    }\r\n`;\r\n\r\nexport const StyledTableBodyCell = styled.div`\r\n    flex: 1;\r\n    padding: 8px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;","import { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { FixedSizeList } from 'react-window';\r\nimport { Theme } from '../styled';\r\nimport { ErrorBoundary } from '../utils/ErrorBoundary';\r\nimport { ReactUtils } from '../utils/reactUtils';\r\nimport * as utils from '../utils/utils';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\nimport { StyledTableBody, StyledTableBodyCell, StyledTableBodyRow, StyledTableHead, StyledTableHeadCell, StyledTableHeadRow, StyledTableView } from './style';\r\nimport { TableBody } from './TableBody';\r\nimport { CellContent, TableCell, TableCellProps } from './TableCell';\r\nimport { TableColumn } from './TableColumn';\r\nimport { TableHead, TableHeadProps } from './TableHead';\r\nimport { RowContent, TableRow, TableRowProps } from './TableRow';\r\nconst flattenDeep = require('lodash.flattendeep');\r\n\r\ninterface Heights {\r\n    height: any;\r\n    minHeight: any;\r\n    maxHeight: any;\r\n}\r\n\r\ntype RowsSyntaxChildren<T> = [React.SubComp<TableHead<T>>, React.SubComp<TableBody<T>>];\r\n\r\ntype ColumnsSyntaxChildren<T> = OneOrMore<React.SubComp<TableColumn<T>>>;\r\n\r\nexport type ItemIdCallback<T> = (item: T, index: number) => Id;\r\n\r\nexport class TableViewProps<T> {\r\n\r\n    //\r\n    // main props\r\n    //\r\n\r\n    public items: T[];\r\n    public itemId?: ItemIdCallback<T>;\r\n    public children?: RowsSyntaxChildren<T> | ColumnsSyntaxChildren<T>;\r\n\r\n    //\r\n    // appearance\r\n    //\r\n\r\n    public dir?: DocDir = 'ltr';\r\n    public className?: string;\r\n    public style?: React.CSSProperties;\r\n    /**\r\n     * Row height in pixels.  \r\n     * Default: 50\r\n     */\r\n    public rowHeight?= 50;\r\n    public emptyMessage?= \"No Items to Display\";\r\n\r\n    //\r\n    // virtualization\r\n    //\r\n\r\n    /**\r\n     * Number of extra buffer items to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 20\r\n     */\r\n    public overscanCount?= 20;\r\n\r\n}\r\n\r\nclass TableViewState<T> {\r\n    public selectedItems: IMap<T> = {};\r\n}\r\n\r\nexport class TableView<T> extends React.PureComponent<TableViewProps<T>, TableViewState<T>> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = TableHead;\r\n\r\n    public static Body = TableBody;\r\n\r\n    public static Row = TableRow;\r\n\r\n    public static Cell = TableCell;\r\n\r\n    public static Column = TableColumn;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps = new TableViewProps();\r\n\r\n    constructor(props: TableViewProps<T>) {\r\n        super(props);\r\n        this.state = new TableViewState<T>();\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        // head & body\r\n        let head = ReactUtils.singleChildOfType(this, TableHead);\r\n        let body = ReactUtils.singleChildOfType(this, TableBody);\r\n        const columns = ReactUtils.childrenOfType(this, TableColumn);\r\n\r\n        // columns\r\n        if (columns && columns.length) {\r\n            if (head || body)\r\n                throw new Error('Can not specify head and/or body when specifying table columns.');\r\n\r\n            head = this.createHeadFromColumns(columns);\r\n            body = this.createBodyFromColumns(columns);\r\n        }\r\n\r\n        // render\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <StyledTableView\r\n                        className={this.props.className}\r\n                        style={Object.assign({}, this.props.style, this.getHeights())}\r\n                    >\r\n                        {this.renderTableHead(head)}\r\n                        {this.renderTableBody(head, body)}\r\n                    </StyledTableView>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderTableHead(head: TableHead<T>) {\r\n\r\n        if (!head)\r\n            return null;\r\n\r\n        return (\r\n\r\n            <StyledTableHead style={{ height: head.props.height }}>\r\n                <StyledTableHeadRow>\r\n                    <ErrorBoundary>\r\n\r\n                        {/* main columns */}\r\n                        {React.Children.map(head.props.children, (cell, index) => {\r\n\r\n                            const headCell: TableCell<T> = cell as any;\r\n                            const cellProps = this.getHeadCellProps(headCell);\r\n                            if (cellProps.visible === false)\r\n                                return null;\r\n\r\n                            const cellContent = this.getHeadCellContent(headCell);\r\n                            return (\r\n                                <StyledTableHeadCell\r\n                                    key={index}\r\n                                    {...cellProps}\r\n                                >\r\n                                    <ErrorBoundary>\r\n                                        {cellContent}\r\n                                    </ErrorBoundary>\r\n                                </StyledTableHeadCell>\r\n                            );\r\n                        })}\r\n\r\n                    </ErrorBoundary>\r\n                </StyledTableHeadRow>\r\n            </StyledTableHead>\r\n        );\r\n    }\r\n\r\n    private renderTableBody(head: TableHead<T>, body: TableBody<T>) {\r\n\r\n        const headProps = this.getHeadProps(head);\r\n        const heightValues = this.getHeights();\r\n        const bodyHeight = `calc(${heightValues.height} - ${headProps.height})`;\r\n        const bodyMinHeight = `calc(${heightValues.minHeight} - ${headProps.height})`;\r\n        const bodyMaxHeight = `calc(${heightValues.maxHeight} - ${headProps.height})`;\r\n\r\n        return (\r\n            <StyledTableBody\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    height: bodyHeight,\r\n                    minHeight: bodyMinHeight,\r\n                    maxHeight: bodyMaxHeight\r\n                }}\r\n            >\r\n                <ErrorBoundary>\r\n                    {this.renderTableRows(body)}\r\n                </ErrorBoundary>\r\n            </StyledTableBody>\r\n        );\r\n    }\r\n\r\n    private renderTableRows(body: TableBody<T>) {\r\n\r\n        // placeholder\r\n        if (this.props.items.length === 0 || !this.hasBody(body)) {\r\n            return this.renderItemsPlaceHolder();\r\n        }\r\n\r\n        // table rows\r\n        return (\r\n            <AutoSizer>\r\n                {({ width, height }) => (\r\n                    <FixedSizeList\r\n                        style={{ outline: 'none' }}\r\n                        direction={this.props.dir}\r\n                        layout=\"vertical\"\r\n                        height={height}\r\n                        width={width}\r\n                        itemCount={this.props.items.length}\r\n                        itemSize={this.props.rowHeight}\r\n                    >\r\n                        {({ index, style }) => {\r\n\r\n                            const rowRender = body.props.children;\r\n                            if (!rowRender)\r\n                                return null;\r\n\r\n                            const item = this.props.items[index];\r\n\r\n                            const row = rowRender(item, index);\r\n                            const { style: rowStyle, ...rowProps } = this.getRowProps(row);\r\n                            const rowKey = this.getRowKey(rowProps, item, index);\r\n                            const rowContent = this.getRowContent(row);\r\n\r\n                            return (\r\n                                <StyledTableBodyRow\r\n                                    style={Object.assign({}, style, rowStyle || {})}\r\n                                    key={rowKey}\r\n                                    {...rowProps}\r\n                                >\r\n                                    <ErrorBoundary>\r\n\r\n                                        {/* main columns */}\r\n                                        {utils.asArray(rowContent).map((cell, columnIndex) => {\r\n\r\n                                            const cellProps = this.getCellProps(cell);\r\n                                            if (cellProps.visible === false)\r\n                                                return null;\r\n\r\n                                            return (\r\n                                                <StyledTableBodyCell\r\n                                                    key={columnIndex}\r\n                                                    {...cellProps}\r\n                                                >\r\n                                                    <ErrorBoundary>\r\n                                                        {this.getCellContent(cell)}\r\n                                                    </ErrorBoundary>\r\n                                                </StyledTableBodyCell>\r\n                                            );\r\n                                        })}\r\n\r\n                                    </ErrorBoundary>\r\n                                </StyledTableBodyRow>\r\n                            );\r\n                        }}\r\n                    </FixedSizeList>\r\n                )}\r\n            </AutoSizer>\r\n        );\r\n    }\r\n\r\n    private renderItemsPlaceHolder() {\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {this.props.emptyMessage}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir\r\n        };\r\n    }\r\n\r\n    private getHeights(): Heights {\r\n        let height = (this.props.style || {}).height;\r\n        let minHeight = (this.props.style || {}).minHeight;\r\n        let maxHeight = (this.props.style || {}).maxHeight;\r\n\r\n        if (height === undefined && minHeight === undefined) {\r\n            height = TableView.defaultHeight;\r\n        }\r\n\r\n        height = utils.cssSizeString(height);\r\n        minHeight = utils.cssSizeString(minHeight);\r\n        maxHeight = utils.cssSizeString(maxHeight);\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    //\r\n    // item methods\r\n    //\r\n\r\n    private getItemId(item: T, index: number): Id {\r\n        if (typeof this.props.itemId === 'function') {\r\n            return this.props.itemId(item, index);\r\n        } else {\r\n            return (item as any).id;\r\n        }\r\n    }\r\n\r\n    //\r\n    // components structure handling\r\n    //  \r\n\r\n    private createHeadFromColumns(columns: TableColumn<T>[]): TableHead<T> {\r\n        const head: any = (\r\n            <TableHead>\r\n                {columns.map(col => ReactUtils.singleChildOfType(col, ColumnHead).props.children)}\r\n            </TableHead>\r\n        );\r\n        return head;\r\n    }\r\n\r\n    private createBodyFromColumns(columns: TableColumn<T>[]): TableBody<T> {\r\n        const body: any = (\r\n            <TableBody>\r\n                {(item: T, itemIndex: number) => columns.map((col, columnIndex) => {\r\n                    const cellRender = ReactUtils.singleChildOfType(col, ColumnBody).props.children;\r\n                    if (!cellRender)\r\n                        return null;\r\n                    return cellRender(item, itemIndex, columnIndex);\r\n                })}\r\n            </TableBody>\r\n        );\r\n        return body;\r\n    }\r\n\r\n    private getHeadProps(head: TableHead<T>): TableHeadProps<T> {\r\n        if (ReactUtils.elementInstanceOf(head, TableRow)) {\r\n            return head.props;\r\n        } else {\r\n            return new TableHeadProps();\r\n        }\r\n    }\r\n\r\n    private getHeadCellProps(cell: TableCell<T>): TableCellProps<T> {\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell))\r\n            return cell.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getHeadCellContent(cell: TableCell<T>): CellContent {\r\n\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell)) {\r\n            return cell.props.children;\r\n        }\r\n\r\n        return cell;\r\n    }\r\n\r\n    private hasBody(body: TableBody<T>): boolean {\r\n\r\n        if (!body)\r\n            return false;\r\n\r\n        if (utils.isNullOrUndefined(body.props.children))\r\n            return false;\r\n\r\n        if (typeof body.props.children === 'function')\r\n            return true;\r\n\r\n        if (Array.isArray(body.props.children))\r\n            return body.props.children.length > 0;\r\n\r\n        const childrenCount = React.Children.count(body.props.children);\r\n        return childrenCount > 0;\r\n    }\r\n\r\n    private getRowProps(row: any): TableRowProps<T> {\r\n\r\n        if (ReactUtils.elementInstanceOf(row, TableRow))\r\n            return row.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getRowContent(row: any): RowContent<T> {\r\n\r\n        let content: RowContent<T> = row;\r\n\r\n        // fragment element\r\n        if (ReactUtils.isReactFragment(content)) {\r\n            throw new Error('Can not use React.Fragment as row content. Consider wrapping your content with a row element.');\r\n        }\r\n\r\n        // row element\r\n        if (ReactUtils.elementInstanceOf(content, TableRow)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        if (Array.isArray(content)) {\r\n            content = flattenDeep(content);\r\n        }\r\n        return content;\r\n    }\r\n\r\n    private getRowKey(rowProps: TableRowProps<T>, item: T, index: number): React.Key {\r\n\r\n        if (!utils.isNullOrUndefined(rowProps.key))\r\n            return rowProps.key;\r\n\r\n        const itemId = this.getItemId(item, index);\r\n        if (!utils.isNullOrUndefined(itemId))\r\n            return itemId;\r\n\r\n        return index;\r\n    }\r\n\r\n    private getCellProps(cell: any): TableCellProps<T> {\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell))\r\n            return cell.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getCellContent(cell: any): CellContent {\r\n\r\n        let content = cell;\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(content, TableCell)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        return content || null;\r\n    }\r\n}","export * from './ColumnBody';\r\nexport * from './ColumnHead';\r\nexport * from './TableBody';\r\nexport * from './TableCell';\r\nexport * from './TableColumn';\r\nexport * from './TableHead';\r\nexport * from './TableRow';\r\nexport * from './TableView';\r\n","export * from './grid';\r\nexport * from './table';\r\n","module.exports = require(\"@emotion/styled\");","module.exports = require(\"emotion-theming\");","module.exports = require(\"lodash.flattendeep\");","module.exports = require(\"react\");","module.exports = require(\"react-virtualized-auto-sizer\");","module.exports = require(\"react-window\");"],"sourceRoot":""}