{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","external \"react\"","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\domUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\keyboard.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\reactUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\scrollUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\sizeUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\internal\\CustomScrollbars.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\internal\\ErrorBoundary.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\internal\\index.ts","external \"@emotion/styled-base\"","external \"react-virtualized-auto-sizer\"","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\list\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\list\\NonVirtualList.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\list\\VirtualList.tsx","external \"react-custom-scrollbars\"","external \"emotion-theming\"","external \"react-dom\"","external \"react-window\"","external \"lodash.flattendeep\"","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\recycleManager.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\VirtualCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\windowCalculator.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\VirtualTile.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\VirtualGrid.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableColumn.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableRow.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\index.ts"],"names":["DomUtils","_scrollbarWidth","div","document","createElement","style","width","height","overflow","position","top","body","appendChild","offsetWidth","clientWidth","removeChild","_rtlOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","scrollLeft","_isPositionStickySupported","prefix","testElementStyle","head","i","length","Keys","ReactUtils","children","createPropsToAdd","React","map","child","index","propsToAdd","parentElement","type","childrenArray","filter","elementInstanceOf","matchingChildren","childrenOfType","Error","name","props","Array","isArray","elem","prototype","Object","isPrototypeOf","call","ScrollUtils","e","docDir","currentTarget","scrollTop","scrollHeight","scrollWidth","clientHeight","normalizedScrollLeft","rtlOffsetType","normalizedScrollTop","Math","min","max","rawScrollLeft","SizeUtils","size","Number","isFinite","component","defaultHeight","minHeight","maxHeight","undefined","cssSizeString","table","defaultHeights","totalHeights","geElementHeights","total","headHeight","getHeadHeight","bodyHeights","isNullOrUndefined","val","asArray","range","count","keys","areShallowEqual","a","b","keysA","keysB","key","CustomScrollbarsInner","refSetter","forwardedRef","ref","view","current","onScroll","CustomScrollbars","displayName","ErrorBoundaryState","ErrorBoundary","state","hasError","error","errorInfo","setState","console","NonVirtualList","scrollOffset","currentInner","listRef","currentOffset","isHorizontal","disableScrollEvents","scrollTo","left","listStyle","dir","boxSizing","outline","display","getListElementType","handleOnScroll","itemCount","fill","_","itemSize","customScrollbar","layout","scrollKeys","PageUp","PageDown","End","Home","VirtualList","window","addEventListener","scrollByKey","removeEventListener","tableRef","tableInnerRef","tableOuterRef","scrollElement","ReactDOM","bodyHeight","pageSize","minOffset","maxOffset","offsetByKey","resetAfterIndex","forceUpdate","offset","assign","getOuterElementType","overscan","getKeyScrollProps","renderRow","row","keyScroll","onMouseEnter","registerKeyHandlers","onMouseLeave","removeKeyHandlers","onKeyDown","RecycleManager","nextOriginalKeys","nextKeys","prevKeys","usedKeysOriginalToStable","nextIndex","prevIndex","nextOriginal","prevOriginal","freeUnusedKey","originalKey","stableKey","getNextKeyFromPool","result","freeKeysPool","hasOwnProperty","stableKeySource","VirtualCell","rightOrLeft","transformModifier","transform","className","CalcData","WindowCalculator","column","elementType","fromPosition","toPosition","elementsOverscan","elementSize","minElementsCountToReturn","totalElementsCount","fromIndex","findNearestItem","toIndex","data","lastFromPosition","info","push","getElementInfo","estimatedElementSize","elementsCount","lastMeasuredIndex","totalSizeOfUnmeasuredElements","numUnmeasuredElementsCount","elementSizeOrEstimate","totalSizeOfMeasuredElements","cache","lastMeasuredElemInfo","maxIndex","lastMeasuredPosition","findNearestItemBinarySearch","findNearestItemExponentialSearch","high","low","middle","floor","currentPosition","interval","elementIndex","elementInfo","getSize","VirtualTileProps","VirtualTileState","VirtualTile","normalized","normalizeScrollEvent","scrollDirection","requestAnimationFrame","containerElement","windowCalc","getTotalSize","rowHeight","estimatedRowHeight","rowCount","columnWidth","estimatedColumnWidth","columnCount","minColumnsToRender","minRowsToRender","clearCache","prevProps","controlledScroll","handleScroll","getScrollableHeight","getScrollableWidth","renderCells","columns","elementsInRange","overscanColumnsCount","rows","overscanRowCount","originalKeys","col","getCellOriginalKey","recycler","freeUnusedKeys","cellsByKey","getStableKey","renderCell","cells","colIndex","rowIndex","TileKey","VirtualGridProps","VirtualGridState","VirtualGrid","tiles","activeTiles","vertical","tileKey","rowIndexOffset","columnIndexOffset","renderProps","tilePosition","getTilePosition","absRowIndex","absColIndex","relRowIndex","relColIndex","createTilesMap","scrollableHeight","getScrollableAreaHeight","scrollableWidth","getScrollableAreaWidth","createClassName","getContainerHeight","getContainerWidth","renderTilesRow","headerTiles","bodyTiles","footerTiles","tileKeys","firstTile","isSticky","isPositionStickySupported","topOffset","leftOffset","reduce","cur","tileRowTop","renderTile","resetTiles","hasHeader","fixedHeaderHeight","hasFooter","fixedFooterHeight","hasFixedLeftColumn","fixedLeftWidth","hasFixedRightColumn","fixedRightWidth","createTilesMapEntry","createTileMapEntryFactory","HeaderLeft","HeaderCenter","HeaderRight","BodyLeft","BodyCenter","BodyRight","FooterLeft","FooterCenter","FooterRight","horizontalScrollbarWidth","getHorizontalScrollbarWidth","verticalScrollbarWidth","getVerticalScrollbarWidth","containerHeight","containerWidth","headerHeight","footerHeight","leftWidth","rightWidth","centerWidth","horizontal","isVerticalFixed","isHorizontalFixed","isCorner","toLowerCase","split","getBodyScrollableHeight","bodyWidth","getBodyScrollableAreaWidth","hasVerticalScrollbar","scrollbarWidth","hasHorizontalScrollbar","GridView","ColumnBodyProps","ColumnBody","ColumnHead","TableBodyProps","TableBody","childrenCount","StyledTableView","StyledTableHead","theme","StyledTableBody","StyledTableRow","StyledTableCell","TableCellSymbol","TableCell","cell","isTableCell","TableHead","TableColumnProps","TableColumn","every","singleChildOfType","colHead","columnIndex","cellRender","flattenDeep","require","TableRowSymbol","TableRow","isTableRow","content","RowAutoSize","TableViewProps","TableView","tableElement","refresh","createHeadFromColumns","createBodyFromColumns","getTheme","renderTableHead","renderTableBody","divProps","defaultHeadHeight","getBodyHeights","renderTableRows","hasChildren","renderItemsPlaceHolder","rowRender","ListComponent","getListComponent","getRowHeight","overscanCount","customScrollbars","renderBodyRow","rowContent","getRowContent","rowKey","getRowKey","cellProps","getCellProps","visible","textAlign","emptyMessage","isVirtual","rowProps"],"mappings":"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","file":"react-tablize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-tablize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-tablize\"] = factory();\n\telse\n\t\troot[\"react-tablize\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = require(\"react\");","export type RtlOffsetType = 'negative' | 'positive-descending' | 'positive-ascending';\r\n\r\nexport class DomUtils {\r\n\r\n    public static get scrollbarWidth(): number {\r\n        if (this._scrollbarWidth !== null)\r\n            return this._scrollbarWidth;\r\n\r\n        // https://github.com/sonicdoe/measure-scrollbar/blob/master/index.js\r\n\r\n        const div = document.createElement('div');\r\n\r\n        div.style.width = '100px';\r\n        div.style.height = '100px';\r\n        div.style.overflow = 'scroll';\r\n        div.style.position = 'absolute';\r\n        div.style.top = '-9999px';\r\n\r\n        document.body.appendChild(div);\r\n\r\n        this._scrollbarWidth = div.offsetWidth - div.clientWidth;\r\n\r\n        document.body.removeChild(div);\r\n\r\n        return this._scrollbarWidth;\r\n    }\r\n\r\n    /**\r\n     * TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n     * Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\r\n     * Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\r\n     * The safest way to check this is to intentionally set a negative offset,\r\n     * and then verify that the subsequent \"scroll\" event matches the negative offset.\r\n     * If it does not match, then we can assume a non-standard RTL scroll implementation.\r\n     *\r\n     * From: https://github.com/bvaughn/react-window/blob/master/src/domHelpers.js\r\n     */\r\n    public static get rtlOffsetType(): RtlOffsetType {\r\n        if (DomUtils._rtlOffsetType)\r\n            return DomUtils._rtlOffsetType;\r\n\r\n        const outerDiv = document.createElement('div');\r\n        const outerStyle = outerDiv.style;\r\n        outerStyle.width = '50px';\r\n        outerStyle.height = '50px';\r\n        outerStyle.overflow = 'scroll';\r\n        outerStyle.direction = 'rtl';\r\n\r\n        const innerDiv = document.createElement('div');\r\n        const innerStyle = innerDiv.style;\r\n        innerStyle.width = '100px';\r\n        innerStyle.height = '100px';\r\n\r\n        outerDiv.appendChild(innerDiv);\r\n\r\n        document.body.appendChild(outerDiv);\r\n\r\n        if (outerDiv.scrollLeft > 0) {\r\n            DomUtils._rtlOffsetType = 'positive-descending';\r\n        } else {\r\n            outerDiv.scrollLeft = 1;\r\n            if (outerDiv.scrollLeft === 0) {\r\n                DomUtils._rtlOffsetType = 'negative';\r\n            } else {\r\n                DomUtils._rtlOffsetType = 'positive-ascending';\r\n            }\r\n        }\r\n\r\n        document.body.removeChild(outerDiv);\r\n\r\n        return DomUtils._rtlOffsetType;\r\n    }\r\n\r\n    public static get isPositionStickySupported(): boolean {\r\n\r\n        // https://github.com/dollarshaveclub/stickybits/issues/35#issuecomment-549929578\r\n\r\n        if (DomUtils._isPositionStickySupported !== null)\r\n            return DomUtils._isPositionStickySupported;\r\n\r\n        const prefix = ['', '-o-', '-webkit-', '-moz-', '-ms-'];\r\n        const testElementStyle = document.head.style;\r\n\r\n        for (let i = 0; i < prefix.length; i += 1) {\r\n            testElementStyle.position = `${prefix[i]}sticky`;\r\n        }\r\n        DomUtils._isPositionStickySupported = (testElementStyle.position === 'sticky');\r\n\r\n        return DomUtils._isPositionStickySupported;\r\n    }\r\n\r\n    private static _scrollbarWidth: number = null;\r\n\r\n    private static _rtlOffsetType: RtlOffsetType;\r\n\r\n    private static _isPositionStickySupported: boolean = null;\r\n}","export enum Keys {\r\n    PageUp = 'PageUp',\r\n    PageDown = 'PageDown',\r\n    End ='End',\r\n    Home ='Home',\r\n}\r\n\r\nexport interface KeyEvent {\r\n    key: string;\r\n}","import * as React from 'react';\r\nimport { Constructor } from '../types';\r\n\r\nexport class ReactUtils {\r\n\r\n    public static addPropsToChildren(children: React.ReactNode, createPropsToAdd: (child: React.ReactElement<any>, index?: number) => any) {\r\n\r\n        // https://stackoverflow.com/questions/32370994/how-to-pass-props-to-this-props-children\r\n        return React.Children.map(children, (child: React.ReactElement<any>, index: number) => {\r\n            const propsToAdd = createPropsToAdd(child, index);\r\n            return React.cloneElement(child, propsToAdd);\r\n        });\r\n    }    \r\n\r\n    public static childrenOfType<T>(parentElement: any, type: Constructor<T>): T[] {\r\n        const children = ReactUtils.childrenArray(parentElement);\r\n        if (!children)\r\n            return null;\r\n        return children.filter(child => ReactUtils.elementInstanceOf(child, type)) as any;\r\n    }\r\n\r\n    /**\r\n     * Return the only child that matches the given type.  \r\n     * If more than one child matches an error is thrown.  \r\n     * \r\n     * Notice that this function gives no indication of the total number of\r\n     * children, only the number of matching children.\r\n     * @param parentElement \r\n     * @param type \r\n     */\r\n    public static singleChildOfType<T>(parentElement: any, type: Constructor<T>): T {\r\n        const matchingChildren = ReactUtils.childrenOfType(parentElement, type);\r\n        if (!matchingChildren || !matchingChildren.length)\r\n            return null;\r\n\r\n        if (matchingChildren.length > 1)\r\n            throw new Error(`Only one ${type.name} child element is allowed.`);\r\n\r\n        return matchingChildren[0] as any;\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private static childrenArray(parentElement: any): React.ReactChild[] {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (Array.isArray(children))\r\n            return children;\r\n\r\n        return React.Children.map(children, child => child);\r\n    }\r\n\r\n    private static elementInstanceOf<T>(elem: any, type: Constructor<T>): elem is T {\r\n        if (!elem)\r\n            return false;\r\n        if (!elem.type)\r\n            return false;\r\n\r\n        // https://stackoverflow.com/questions/39387405/using-instanceof-to-test-for-base-class-of-a-react-component\r\n        // https://stackoverflow.com/questions/14486110/how-to-check-if-a-javascript-class-inherits-another-without-creating-an-obj\r\n        // https://stackoverflow.com/questions/2464426/whats-the-difference-between-isprototypeof-and-instanceof-in-javascript\r\n\r\n        return elem.type === type ||\r\n            elem.type.prototype instanceof type ||\r\n            Object.prototype.isPrototypeOf.call(type, elem.type);\r\n    }    \r\n}","import { DocDir } from '../types';\r\nimport { DomUtils } from './domUtils';\r\n\r\nexport interface NormalizedScrollEvent {\r\n    scrollTop: number;\r\n    /**\r\n     * The original scrollLeft value as it was sent by the browser.\r\n     */\r\n    rawScrollLeft: number;\r\n    /**\r\n     * The normalized, \"positive-ascending\" scrollLeft value. \r\n     * For mode details see the comment on `DomUtils.rtlOffsetType`. \r\n     */\r\n    normalizedScrollLeft: number;\r\n}\r\n\r\nexport class ScrollUtils {\r\n\r\n    public static normalizeScrollEvent(e: React.UIEvent<HTMLElement>, docDir: DocDir): NormalizedScrollEvent {\r\n\r\n        const { scrollTop, scrollLeft } = e.currentTarget;\r\n        const { scrollHeight, scrollWidth, clientHeight, clientWidth } = e.currentTarget;\r\n\r\n        // RTL support\r\n        let normalizedScrollLeft = scrollLeft;\r\n        if (docDir === 'rtl') {\r\n            switch (DomUtils.rtlOffsetType) {\r\n                case 'negative':\r\n                    normalizedScrollLeft = -scrollLeft;\r\n                    break;\r\n                case 'positive-ascending':\r\n                    // noop\r\n                    break;\r\n                case 'positive-descending':\r\n                default:\r\n                    normalizedScrollLeft = scrollWidth - clientWidth - scrollLeft;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // fix scroll offset to prevent \"over scroll\"\r\n        let normalizedScrollTop = Math.min(scrollTop, scrollHeight - clientHeight);\r\n        normalizedScrollTop = Math.max(0, scrollTop);\r\n        normalizedScrollLeft = Math.min(normalizedScrollLeft, scrollWidth - clientWidth);\r\n        normalizedScrollLeft = Math.max(0, normalizedScrollLeft);\r\n\r\n        return {\r\n            scrollTop: normalizedScrollTop,\r\n            rawScrollLeft: scrollLeft,\r\n            normalizedScrollLeft\r\n        };\r\n    }\r\n}","\r\nexport interface ElementHeights {\r\n    height: string | number;\r\n    minHeight: string | number;\r\n    maxHeight: string | number;\r\n}\r\n\r\nexport interface TableHeights {\r\n    total: string | number;\r\n    head: string | number;\r\n}\r\n\r\nexport type ComponentWithStyle = React.Component<{ style?: React.CSSProperties }>;\r\n\r\nexport class SizeUtils {\r\n\r\n    public static cssSizeString(size: any): string {\r\n        if (Number.isFinite(size))\r\n            return size + 'px';\r\n        return size;\r\n    }\r\n\r\n    public static geElementHeights(component: ComponentWithStyle, defaultHeight: number | string): ElementHeights {\r\n        const style = (component && component.props.style) || {};\r\n\r\n        let height = style.height;\r\n        let minHeight = style.minHeight;\r\n        let maxHeight = style.maxHeight;\r\n\r\n        if (height === undefined && minHeight === undefined) {\r\n            height = defaultHeight;\r\n        }\r\n\r\n        height = this.cssSizeString(height);\r\n        minHeight = this.cssSizeString(minHeight);\r\n        maxHeight = this.cssSizeString(maxHeight);\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    public static getBodyHeights(table: ComponentWithStyle, head: ComponentWithStyle, defaultHeights: TableHeights): ElementHeights {\r\n\r\n        const totalHeights = this.geElementHeights(table, defaultHeights.total);\r\n        const headHeight = this.getHeadHeight(head, defaultHeights.head);\r\n        const bodyHeights = this.geElementHeights(table, undefined);\r\n\r\n        let height = bodyHeights.height || totalHeights.height;\r\n        let minHeight = bodyHeights.minHeight || totalHeights.minHeight;\r\n        let maxHeight = bodyHeights.maxHeight || totalHeights.maxHeight;\r\n\r\n        if (headHeight) {\r\n            height = `calc(${height} - ${headHeight})`;\r\n            if (minHeight)\r\n                minHeight = `calc(${minHeight} - ${headHeight})`;\r\n            if (maxHeight)\r\n                maxHeight = `calc(${maxHeight} - ${headHeight})`;\r\n        }\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    private static getHeadHeight(head: ComponentWithStyle, defaultHeight: string | number): string | number {\r\n        if (head) {\r\n            return this.geElementHeights(head, defaultHeight).height;\r\n        }\r\n        return 0;\r\n    }    \r\n}","\r\nexport function isNullOrUndefined(val: any): boolean {\r\n    return val === null || val === undefined;\r\n}\r\n\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n    if (Array.isArray(val))\r\n        return val;\r\n\r\n    return [val];\r\n}\r\n\r\nexport function range(count: number): number[] {\r\n    // https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp\r\n    return [...Array(count || 0).keys()];\r\n}\r\n\r\nexport function areShallowEqual(a: object, b: object) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n\r\n    if (a === null || a === undefined || b === null || b === undefined) {\r\n        return false;\r\n    }\r\n\r\n    const keysA = Object.keys(a);\r\n    const keysB = Object.keys(b);\r\n\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n\r\n    for (const key of keysA) {\r\n        if ((a as any)[key] !== (b as any)[key])\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}","export * from './domUtils';\r\nexport * from './keyboard';\r\nexport * from './reactUtils';\r\nexport * from './scrollUtils';\r\nexport * from './sizeUtils';\r\nexport * from './utils';\r\n","import * as React from 'react';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\n\r\nexport interface CustomScrollbarsProps {\r\n    style?: React.CSSProperties;\r\n    onScroll?: any;\r\n    forwardedRef: React.RefFunction<any> | React.RefObject<any>;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nclass CustomScrollbarsInner extends React.PureComponent<CustomScrollbarsProps> {\r\n    public render() {\r\n\r\n        // https://github.com/bvaughn/react-window/issues/110#issuecomment-469061213\r\n\r\n        const refSetter = (elem: any) => {\r\n            if (!this.props.forwardedRef)\r\n                return;\r\n\r\n            const ref = (elem || {}).view;\r\n            if (typeof this.props.forwardedRef === 'function') {\r\n                this.props.forwardedRef(ref);\r\n            } else {\r\n                (this.props.forwardedRef as any).current = ref;\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Scrollbars\r\n                ref={refSetter}\r\n                style={{\r\n                    ...this.props.style,\r\n                    overflow: 'hidden',\r\n                    direction: 'ltr'\r\n                }}\r\n                onScroll={this.props.onScroll}\r\n            >\r\n                {this.props.children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport const CustomScrollbars = React.forwardRef((props, ref) => (\r\n    <CustomScrollbarsInner {...props} forwardedRef={ref as any} />\r\n));\r\nCustomScrollbars.displayName = 'CustomScrollbars';","import * as React from 'react';\r\n\r\nclass ErrorBoundaryState {\r\n    public hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<{}, ErrorBoundaryState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n        this.setState({ hasError: true });\r\n        console.error(error);  // eslint-disable-line no-console\r\n    }\r\n\r\n    public render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <span>X</span>\r\n            );\r\n        }\r\n        return this.props.children !== undefined ? this.props.children : null;\r\n    }\r\n}","export * from './CustomScrollbars';\r\nexport * from './ErrorBoundary';\r\n","module.exports = require(\"@emotion/styled-base\");","module.exports = require(\"react-virtualized-auto-sizer\");","export * from './List';\r\nexport * from './NonVirtualList';\r\nexport * from './VirtualList';\r\n","import * as React from 'react';\r\nimport { CustomScrollbars } from '../internal';\r\nimport { ListProps } from './List';\r\n\r\nexport class NonVirtualList extends React.PureComponent<ListProps> {\r\n\r\n    private get isHorizontal(): boolean {\r\n        return this.props.layout === 'horizontal';\r\n    }\r\n\r\n    private disableScrollEvents = false;\r\n\r\n    private readonly listRef = React.createRef<HTMLDivElement>();\r\n\r\n    public scrollTo = (scrollOffset: number) => {\r\n        const currentInner = this.listRef.current;\r\n        if (currentInner) {\r\n\r\n            if (scrollOffset === undefined)\r\n                return;\r\n\r\n            const currentOffset = (this.isHorizontal ? currentInner.scrollLeft : currentInner.scrollTop);\r\n            if (scrollOffset === currentOffset)\r\n                return;\r\n\r\n            this.disableScrollEvents = true;\r\n            currentInner.scrollTo({\r\n                top: (this.isHorizontal ? undefined : scrollOffset),\r\n                left: (this.isHorizontal ? scrollOffset : undefined)\r\n            });\r\n        }\r\n    };\r\n\r\n    public render() {\r\n\r\n        const listStyle: React.CSSProperties = {\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n            direction: this.props.dir,\r\n            boxSizing: 'content-box',\r\n            outline: 'none',\r\n            overflow: 'auto',\r\n            [this.isHorizontal ? 'overflowY' : 'overflowX']: 'hidden'\r\n        };\r\n\r\n        if (this.isHorizontal) {\r\n            listStyle.display = 'flex';\r\n        }\r\n\r\n        return React.createElement(this.getListElementType() as any,\r\n            {\r\n                ref: this.listRef,\r\n                style: listStyle,\r\n                onScroll: this.handleOnScroll\r\n            },\r\n\r\n            // rows\r\n            Array(this.props.itemCount).fill(0).map((_, index) => (\r\n                <div\r\n                    key={index}\r\n                    style={{\r\n                        [this.isHorizontal ? 'minWidth' : 'minHeight']: this.props.itemSize(index),\r\n                        [this.isHorizontal ? 'height' : 'width']: (this.isHorizontal ? this.props.height : this.props.width)\r\n                    }}\r\n                >\r\n\r\n                    {/* content */}\r\n                    {this.props.children(index)}\r\n\r\n                </div>\r\n            ))\r\n        );\r\n    }\r\n\r\n    private handleOnScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n        if (this.disableScrollEvents) {\r\n            this.disableScrollEvents = false;\r\n            return;\r\n        }\r\n\r\n        if (!this.props.onScroll)\r\n            return;\r\n\r\n        const { scrollTop, scrollLeft } = e.currentTarget;\r\n        this.props.onScroll(this.isHorizontal ? scrollLeft : scrollTop);\r\n    };\r\n\r\n    private getListElementType() {\r\n        return this.props.customScrollbar ? CustomScrollbars : 'div';\r\n    }\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { VariableSizeList } from 'react-window';\r\nimport { CustomScrollbars } from '../internal';\r\nimport { IMap } from '../types';\r\nimport { KeyEvent, Keys } from '../utils';\r\nimport { List, ListProps } from './List';\r\n\r\nconst scrollKeys: IMap<boolean> = {\r\n    [Keys.PageUp]: true,\r\n    [Keys.PageDown]: true,\r\n    [Keys.End]: true,\r\n    [Keys.Home]: true,\r\n};\r\n\r\nexport interface VirtualListProps extends ListProps {\r\n    keyScroll?: boolean;\r\n}\r\n\r\nexport class VirtualList extends React.PureComponent<VirtualListProps> implements List {\r\n\r\n    private tableRef = React.createRef<VariableSizeList>();\r\n    private tableInnerRef = React.createRef<HTMLElement>();\r\n    private tableOuterRef = React.createRef<HTMLElement>();\r\n\r\n    public refresh() {\r\n        if (this.tableRef.current) {\r\n            this.tableRef.current.resetAfterIndex(0, false);\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    public scrollTo(offset: number): void {\r\n        if (this.tableRef.current) {\r\n            this.tableRef.current.scrollTo(offset);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <VariableSizeList\r\n                ref={this.tableRef}\r\n                innerRef={this.tableInnerRef}\r\n                outerRef={this.tableOuterRef}\r\n                style={Object.assign({ outline: 'none' }, this.props.style)}\r\n                outerElementType={this.getOuterElementType()}\r\n                direction={this.props.dir}\r\n                layout={this.props.layout}\r\n                height={this.props.height}\r\n                width={this.props.width}\r\n                itemCount={this.props.itemCount}\r\n                itemSize={this.props.itemSize}\r\n                overscanCount={this.props.overscan}\r\n                {...this.getKeyScrollProps()}\r\n            >\r\n                {({ index, style }) => this.renderRow(index, style)}\r\n            </VariableSizeList>\r\n        );\r\n    }\r\n\r\n    private renderRow(index: number, style: React.CSSProperties) {\r\n        const row = this.props.children(index);\r\n\r\n        return React.cloneElement(row, {\r\n            style: {\r\n                ...row.props.style,\r\n                ...style\r\n            }\r\n        });\r\n    }\r\n\r\n    //\r\n    // scroll with keys\r\n    //\r\n\r\n    private getKeyScrollProps() {\r\n        if (this.props.keyScroll === false)\r\n            return {};\r\n        return {\r\n            onMouseEnter: this.registerKeyHandlers,\r\n            onMouseLeave: this.removeKeyHandlers,\r\n            onKeyDown: this.scrollByKey\r\n        };\r\n    }\r\n\r\n    private registerKeyHandlers = () => {\r\n        window.addEventListener('keydown', this.scrollByKey);\r\n    };\r\n\r\n    private removeKeyHandlers = () => {\r\n        window.removeEventListener('keydown', this.scrollByKey);\r\n    };\r\n\r\n    private scrollByKey = ({ key }: KeyEvent) => {\r\n\r\n        // https://dev.to/dance2die/scrolling-with-page-up-down-keys-in-react-window-31ei\r\n\r\n        if (!scrollKeys[key])\r\n            return;\r\n\r\n        if (!this.tableRef.current || !this.tableInnerRef.current || !this.tableOuterRef.current)\r\n            return;\r\n\r\n        const scrollElement = (this.props.customScrollbar ? this.tableOuterRef.current : this.tableRef.current);\r\n        const table = (ReactDOM.findDOMNode(scrollElement) as HTMLElement);\r\n        const currentOffset = table.scrollTop;\r\n        const bodyHeight = table.clientHeight;\r\n        const pageSize = bodyHeight * 0.85;\r\n        const minOffset = 0.1;\r\n        const maxOffset = this.tableInnerRef.current.clientHeight;\r\n\r\n        const offsetByKey: IMap<number> = {\r\n            [Keys.PageUp]: Math.max(minOffset, currentOffset - pageSize),\r\n            [Keys.PageDown]: Math.min(currentOffset + pageSize, maxOffset),\r\n            [Keys.End]: maxOffset,\r\n            [Keys.Home]: minOffset,\r\n        };\r\n\r\n        this.tableRef.current.scrollTo(offsetByKey[key]);\r\n    };\r\n\r\n    private getOuterElementType() {\r\n        return this.props.customScrollbar ? CustomScrollbars : undefined;\r\n    }\r\n}","module.exports = require(\"react-custom-scrollbars\");","module.exports = require(\"emotion-theming\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-window\");","module.exports = require(\"lodash.flattendeep\");","import { IMap } from '../types';\r\n\r\n/**\r\n * Note: In few places the recycling logic leverages the fact that in JavaScript\r\n * when object keys are integers they are iterated in ascending numeric order\r\n * (except for IE of course...). See:\r\n * https://stackoverflow.com/questions/5525795/does-javascript-guarantee-object-property-order.\r\n */\r\nexport class RecycleManager {\r\n\r\n    private stableKeySource = 0;\r\n    private freeKeysPool: IMap<boolean> = {};\r\n    private usedKeysOriginalToStable: IMap<React.Key> = {};\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public freeUnusedKeys(nextOriginalKeys: IMap<boolean>) {\r\n\r\n        const nextKeys = Object.keys(nextOriginalKeys);\r\n        const prevKeys = Object.keys(this.usedKeysOriginalToStable);\r\n\r\n        let nextIndex = nextKeys.length - 1;\r\n        let prevIndex = prevKeys.length - 1;\r\n\r\n        while (nextIndex >= 0 && prevIndex >= 0) {\r\n\r\n            const nextOriginal = nextKeys[nextIndex];\r\n            const prevOriginal = prevKeys[prevIndex];\r\n\r\n            if (nextOriginal === prevOriginal) {\r\n\r\n                // still using the key - don't free\r\n                nextIndex--;\r\n                prevIndex--;\r\n\r\n            } else if (nextOriginal > prevOriginal) {\r\n\r\n                // still using the key - don't free\r\n                nextIndex--;\r\n\r\n            } else {\r\n\r\n                // not using the key - return to pool\r\n                this.freeUnusedKey(prevOriginal);\r\n                prevIndex--;\r\n            }\r\n        }\r\n\r\n        // return remaining keys to pool\r\n        while (prevIndex >= 0) {\r\n            const prevOriginal = prevKeys[prevIndex];\r\n            this.freeUnusedKey(prevOriginal);\r\n            prevIndex--;\r\n        }\r\n    }    \r\n\r\n    public getStableKey(originalKey: React.Key): React.Key {\r\n\r\n        if (this.usedKeysOriginalToStable[originalKey] !== undefined) {\r\n            return this.usedKeysOriginalToStable[originalKey];\r\n\r\n        } else {\r\n            const stableKey = this.getNextKeyFromPool();\r\n            this.usedKeysOriginalToStable[originalKey] = stableKey;\r\n            return stableKey;\r\n        }\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private getNextKeyFromPool(): React.Key {\r\n\r\n        // find next key in pool        \r\n        let result: React.Key;\r\n        for (const key in this.freeKeysPool) {\r\n            if (this.freeKeysPool.hasOwnProperty(key)) {\r\n                result = key;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (result === undefined) {\r\n\r\n            // generate new key\r\n            result = this.stableKeySource;\r\n            this.stableKeySource++;\r\n\r\n        } else {\r\n\r\n            // remove from pool\r\n            delete this.freeKeysPool[result];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private freeUnusedKey(originalKey: React.Key): void {\r\n        const stableKey = this.usedKeysOriginalToStable[originalKey];\r\n        delete this.usedKeysOriginalToStable[originalKey];\r\n        this.freeKeysPool[stableKey] = true;\r\n    }\r\n}","import * as React from 'react';\r\nimport { DocDir } from '../types';\r\n\r\nexport interface VirtualCellProps {\r\n    /**\r\n     * We are only using classes for easier debug inspection...\r\n     */\r\n    className: string;\r\n    direction: DocDir;\r\n    height: number;\r\n    width: number;\r\n    left: number;\r\n    top: number;\r\n    children: React.ReactNode;\r\n}\r\n\r\n/***\r\n * Each `VirtualTile` creates a constant number of these `VirtualCell`s and just\r\n * moves them around. This is much more efficient than creating a new cell on\r\n * each scroll.\r\n *\r\n * based on:\r\n * https://github.com/Flipkart/recyclerlistview/blob/master/src/platform/web/viewrenderer/ViewRenderer.tsx\r\n */\r\nexport class VirtualCell extends React.PureComponent<VirtualCellProps> {\r\n    public render() {\r\n\r\n        const rightOrLeft = this.props.direction === 'rtl' ? 'right' : 'left';\r\n\r\n        // https://rtl-css.net/tutorial/quick-tip-rtling-css3-transform-functions-translate-and-translatex\r\n        const transformModifier = (this.props.direction === 'rtl') ? -1 : 1;\r\n        const transform = `translate(${this.props.left * transformModifier}px,${this.props.top}px)`;\r\n\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                style={{\r\n                    height: this.props.height,\r\n                    width: this.props.width,\r\n                    position: \"absolute\",\r\n                    [rightOrLeft]: 0,\r\n                    top: 0,\r\n                    willChange: \"transform\",\r\n                    transform\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import { IMap, SizeCallback } from '../types';\r\n\r\nexport type ElementType = 'column' | 'row';\r\n\r\nexport interface ElementInfo {\r\n    index: number;\r\n    position: number;\r\n    size: number;\r\n}\r\n\r\nclass CalcData {\r\n    public cache: IMap<ElementInfo> = {};\r\n    public lastMeasuredIndex = -1;\r\n    public lastFromPosition = -1;\r\n}\r\n\r\ntype CalcDataMap = {\r\n    [key in ElementType]: CalcData;\r\n};\r\n\r\n/**\r\n * Calculates the index, size and position of all visible items within a given\r\n * range.\r\n *\r\n * based on:\r\n * - https://github.com/bvaughn/react-window/blob/master/src/VariableSizeGrid.js\r\n * - https://github.com/fulcrumapp/react-virtual-grid/blob/master/src/grid-calculator.js\r\n * - https://github.com/ranneyd/sticky-table/blob/master/src/useVirtual.js\r\n */\r\nexport class WindowCalculator {\r\n\r\n    private readonly data: CalcDataMap = {\r\n        column: new CalcData(),\r\n        row: new CalcData()\r\n    };\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public elementsInRange(\r\n        elementType: ElementType,\r\n        fromPosition: number,\r\n        toPosition: number,\r\n        elementsOverscan: number,\r\n        elementSize: number | SizeCallback,\r\n        minElementsCountToReturn: number,\r\n        totalElementsCount: number\r\n    ) {\r\n\r\n        let fromIndex = this.findNearestItem(\r\n            elementType,\r\n            fromPosition,\r\n            totalElementsCount,\r\n            elementSize\r\n        );\r\n\r\n        let toIndex = this.findNearestItem(\r\n            elementType,\r\n            toPosition,\r\n            totalElementsCount,\r\n            elementSize\r\n        );\r\n\r\n        // Determine scroll direction and set overscan accordingly\r\n        if (fromPosition < this.data[elementType].lastFromPosition) {\r\n            fromIndex -= elementsOverscan;\r\n        } else {\r\n            toIndex += elementsOverscan;\r\n        }\r\n        this.data[elementType].lastFromPosition = fromPosition;\r\n\r\n        // Prevent range error\r\n        fromIndex = Math.max(0, fromIndex);\r\n        toIndex = Math.min(toIndex, totalElementsCount - 1);\r\n\r\n        // Enforce \"minElementsCountToReturn\"\r\n        while (toIndex - fromIndex + 1 < minElementsCountToReturn) {\r\n            if (toIndex + 1 < totalElementsCount) {\r\n                toIndex++;\r\n            } else {\r\n                fromIndex--;\r\n            }\r\n        }\r\n\r\n        // Get elements info\r\n        const info: ElementInfo[] = [];\r\n        for (let i = fromIndex; i <= toIndex; i++) {\r\n            info.push(this.getElementInfo(\r\n                elementType,\r\n                i,\r\n                elementSize\r\n            ));\r\n        }\r\n        return info;\r\n    }\r\n\r\n    public getTotalSize(\r\n        elementType: ElementType,\r\n        elementSize: number | SizeCallback,\r\n        estimatedElementSize: null | number,\r\n        elementsCount: number\r\n    ) {\r\n\r\n        // Handle unmeasured elements\r\n        let lastMeasuredIndex: number;\r\n        let totalSizeOfUnmeasuredElements = 0;\r\n        if (typeof elementSize === \"function\" && !estimatedElementSize) {\r\n\r\n            // Dynamic element size and no estimation - force evaluation of all unmeasured elements.\r\n            this.getElementInfo(elementType, elementsCount - 1, elementSize);\r\n\r\n            // Update last measured index after evaluation\r\n            lastMeasuredIndex = Math.min(this.data[elementType].lastMeasuredIndex, elementsCount - 1);\r\n\r\n        } else {\r\n\r\n            // Constant element size - use simple multiplication for unmeasured elements.\r\n            lastMeasuredIndex = Math.min(this.data[elementType].lastMeasuredIndex, elementsCount - 1);\r\n            const numUnmeasuredElementsCount = elementsCount - lastMeasuredIndex - 1;\r\n            const elementSizeOrEstimate = typeof elementSize === \"number\" ? elementSize : estimatedElementSize;\r\n            totalSizeOfUnmeasuredElements = numUnmeasuredElementsCount * elementSizeOrEstimate;\r\n        }\r\n\r\n        // Get total size of already measured elements\r\n        let totalSizeOfMeasuredElements = 0;\r\n        if (lastMeasuredIndex >= 0) {\r\n            const { cache } = this.data[elementType];\r\n            const lastMeasuredElemInfo = cache[lastMeasuredIndex];\r\n            totalSizeOfMeasuredElements = lastMeasuredElemInfo.position + lastMeasuredElemInfo.size;\r\n        }\r\n\r\n        // Sum and return\r\n        return totalSizeOfMeasuredElements + totalSizeOfUnmeasuredElements;\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private findNearestItem(\r\n        elementType: ElementType,\r\n        position: number,\r\n        maxIndex: number,\r\n        elementSize: number | SizeCallback\r\n    ) {\r\n\r\n        const { lastMeasuredIndex, cache } = this.data[elementType];\r\n        const lastMeasuredPosition = cache[lastMeasuredIndex]?.position ?? -1;\r\n\r\n        if (lastMeasuredPosition >= position) {\r\n\r\n            // If we've already measured items within this range just use a binary search as it's faster.\r\n            return this.findNearestItemBinarySearch(\r\n                elementType,\r\n                lastMeasuredIndex,\r\n                0,\r\n                position,\r\n                elementSize\r\n            );\r\n\r\n        } else {\r\n\r\n            // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\r\n            // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\r\n            // The overall complexity for this approach is O(log n).\r\n            return this.findNearestItemExponentialSearch(\r\n                elementType,\r\n                Math.max(lastMeasuredIndex, 0),\r\n                maxIndex,\r\n                position,\r\n                elementSize\r\n            );\r\n        }\r\n    };\r\n\r\n    private findNearestItemBinarySearch(\r\n        elementType: ElementType,\r\n        high: number,\r\n        low: number,\r\n        position: number,\r\n        elementSize: number | SizeCallback\r\n    ) {\r\n        while (low <= high) {\r\n            const middle = low + Math.floor((high - low) / 2);\r\n            const currentPosition = this.getElementInfo(elementType, middle, elementSize).position;\r\n\r\n            if (currentPosition === position) {\r\n                return middle;\r\n            } else if (currentPosition < position) {\r\n                low = middle + 1;\r\n            } else if (currentPosition > position) {\r\n                high = middle - 1;\r\n            }\r\n        }\r\n\r\n        if (low > 0) {\r\n            return low - 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    private findNearestItemExponentialSearch(\r\n        elementType: ElementType,\r\n        index: number,\r\n        maxIndex: number,\r\n        position: number,\r\n        elementSize: number | SizeCallback\r\n    ) {\r\n        let interval = 1;\r\n\r\n        while (\r\n            index < maxIndex &&\r\n            this.getElementInfo(elementType, index, elementSize).position < position\r\n        ) {\r\n            index += interval;\r\n            interval *= 2;\r\n        }\r\n\r\n        return this.findNearestItemBinarySearch(\r\n            elementType,\r\n            Math.min(index, maxIndex - 1),\r\n            Math.floor(index / 2),\r\n            position,\r\n            elementSize\r\n        );\r\n    };\r\n\r\n    private getElementInfo(\r\n        elementType: ElementType,\r\n        elementIndex: number,\r\n        elementSize: number | SizeCallback\r\n    ) {\r\n\r\n        const { lastMeasuredIndex, cache } = this.data[elementType];\r\n\r\n        // fill missing cache entries\r\n        if (elementIndex > lastMeasuredIndex) {\r\n\r\n            let position = 0;\r\n\r\n            // skipped already cached entries\r\n            if (lastMeasuredIndex !== -1) {\r\n                const elementInfo = cache[lastMeasuredIndex];\r\n                position = elementInfo.position + elementInfo.size;\r\n            }\r\n\r\n            // add new cache entries\r\n            for (let index = (lastMeasuredIndex + 1); index <= elementIndex; index++) {\r\n                const size = this.getSize(index, elementSize, cache[index]?.size);\r\n\r\n                cache[index] = {\r\n                    index,\r\n                    position,\r\n                    size,\r\n                };\r\n\r\n                position += size;\r\n            }\r\n\r\n            this.data[elementType].lastMeasuredIndex = elementIndex;\r\n        }\r\n\r\n        return cache[elementIndex];\r\n    }\r\n\r\n    private getSize(index: number, elementSize: number | SizeCallback, cache: number): number {\r\n\r\n        if (cache !== null && cache !== undefined)\r\n            return cache;\r\n\r\n        if (typeof elementSize === \"number\")\r\n            return elementSize;\r\n\r\n        if (typeof elementSize === \"function\")\r\n            return elementSize(index);\r\n\r\n        throw new Error(\r\n            `Invalid argument '${nameof(elementSize)}' expected a number or a function ` +\r\n            `but received '${typeof elementSize}': ${elementSize}.`\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DocDir, IMap, ScrollDirection, SizeCallback } from '../types';\r\nimport { areShallowEqual, NormalizedScrollEvent, ScrollUtils } from '../utils';\r\nimport { RecycleManager } from './recycleManager';\r\nimport { VirtualCell } from './VirtualCell';\r\nimport { ElementInfo, WindowCalculator } from './windowCalculator';\r\n\r\nexport interface RenderTileCellProps {\r\n    colIndex: number;\r\n    rowIndex: number;\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\nexport class VirtualTileProps {\r\n    public direction?: DocDir = 'ltr';\r\n    /**\r\n     * Allow scrolling only via calling the `scrollTo` method.\r\n     */\r\n    public controlledScroll?: boolean;\r\n    public height: number;\r\n    public width: number;\r\n    public columnCount: number;\r\n    public rowCount: number;\r\n    public columnWidth: number | SizeCallback;\r\n    public rowHeight: number | SizeCallback;\r\n    /**\r\n     * If `columnWidth` is a function and this prop is not specified will use\r\n     * eager evaluation (invoke the method for all cells on component mount) to\r\n     * calculate the total scroll width.\r\n     */\r\n    public estimatedColumnWidth?: number;\r\n    /**\r\n     * If `rowHeight` is a function and this prop is not specified will use\r\n     * eager evaluation (invoke the method for all cells on component mount) to\r\n     * calculate the total scroll height.\r\n     */\r\n    public estimatedRowHeight?: number;\r\n    public overscanColumnsCount?= 0;\r\n    public overscanRowCount?= 0;\r\n\r\n    /**\r\n     * We are only using classes for easier debug inspection...\r\n     */\r\n    public className?: string;\r\n    public style?: React.CSSProperties;\r\n\r\n    public children: (props: RenderTileCellProps) => React.ReactNode;\r\n}\r\n\r\nclass VirtualTileState {\r\n    public scrollTop = 0;\r\n    public scrollLeft = 0;\r\n}\r\n\r\nexport class VirtualTile extends React.PureComponent<VirtualTileProps, VirtualTileState> {\r\n\r\n    public static defaultProps: unknown = new VirtualTileProps();\r\n\r\n    /**\r\n     * Make sure to return a constant number of elements, this is important for\r\n     * recycling purposes.\r\n     */\r\n    private minColumnsToRender = 0;\r\n    /**\r\n     * Make sure to return a constant number of elements, this is important for\r\n     * recycling purposes.\r\n     */\r\n    private minRowsToRender = 0;\r\n\r\n    private windowCalc = new WindowCalculator();\r\n    private recycler = new RecycleManager();\r\n\r\n    private containerElement = React.createRef<HTMLDivElement>();\r\n\r\n    constructor(props: VirtualTileProps) {\r\n        super(props);\r\n\r\n        this.state = new VirtualTileState();\r\n    }\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public scrollTo(e: NormalizedScrollEvent, scrollDirection: ScrollDirection = 'both'): void {\r\n\r\n        switch (scrollDirection) {\r\n\r\n            case 'both':\r\n                window.requestAnimationFrame(() => {\r\n                    this.containerElement.current.scrollTop = e.scrollTop;\r\n                    this.containerElement.current.scrollLeft = e.rawScrollLeft;\r\n                });\r\n                this.setState({\r\n                    scrollTop: e.scrollTop,\r\n                    scrollLeft: e.normalizedScrollLeft\r\n                });\r\n                break;\r\n\r\n            case 'vertical':\r\n                window.requestAnimationFrame(() => {\r\n                    this.containerElement.current.scrollTop = e.scrollTop;\r\n                });\r\n                this.setState({ scrollTop: e.scrollTop });\r\n                break;\r\n\r\n            case 'horizontal':\r\n                window.requestAnimationFrame(() => {\r\n                    this.containerElement.current.scrollLeft = e.rawScrollLeft;\r\n                });\r\n                this.setState({ scrollLeft: e.normalizedScrollLeft });\r\n                break;\r\n\r\n            case 'none':\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Invalid ${nameof(scrollDirection)} value: '${scrollDirection}'.`);\r\n        }\r\n    }\r\n\r\n    public getScrollableHeight(): number {\r\n        return this.windowCalc.getTotalSize(\r\n            'row',\r\n            this.props.rowHeight,\r\n            this.props.estimatedRowHeight,\r\n            this.props.rowCount\r\n        );\r\n    }\r\n\r\n    public getScrollableWidth(): number {\r\n        return this.windowCalc.getTotalSize(\r\n            'column',\r\n            this.props.columnWidth,\r\n            this.props.estimatedColumnWidth,\r\n            this.props.columnCount\r\n        );\r\n    }\r\n\r\n    public clearCache(): void {\r\n        this.windowCalc = new WindowCalculator();\r\n        this.minColumnsToRender = 0;\r\n        this.minRowsToRender = 0;\r\n    }\r\n\r\n    //\r\n    // life cycle\r\n    //\r\n\r\n    public componentDidMount() {\r\n        this.clearCache();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: VirtualTileProps) {\r\n        if (!areShallowEqual(this.props, prevProps)) {\r\n            this.clearCache();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        const overflow = this.props.controlledScroll ? 'hidden' : 'auto';\r\n        const onScroll = this.props.controlledScroll ? undefined : this.handleScroll;\r\n\r\n        return (\r\n            <div\r\n                ref={this.containerElement}\r\n                className={this.props.className + '_Container'}\r\n                style={{\r\n                    direction: this.props.direction,\r\n                    height: this.props.height,\r\n                    width: this.props.width,\r\n                    position: 'relative',\r\n                    overflow,\r\n                    ...this.props.style\r\n                }}\r\n                onScroll={onScroll}\r\n            >\r\n                <div\r\n                    className={this.props.className + '_ScrollableArea'}\r\n                    style={{\r\n                        height: this.getScrollableHeight(),\r\n                        width: this.getScrollableWidth()\r\n                    }}\r\n                >\r\n                    {this.renderCells()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderCells() {\r\n\r\n        // get cell indexes to render\r\n\r\n        const columns = this.windowCalc.elementsInRange(\r\n            'column',\r\n            this.state.scrollLeft,\r\n            this.state.scrollLeft + this.props.width,\r\n            this.props.overscanColumnsCount,\r\n            this.props.columnWidth,\r\n            this.minColumnsToRender,\r\n            this.props.columnCount\r\n        );\r\n        const rows = this.windowCalc.elementsInRange(\r\n            'row',\r\n            this.state.scrollTop,\r\n            this.state.scrollTop + this.props.height,\r\n            this.props.overscanRowCount,\r\n            this.props.rowHeight,\r\n            this.minRowsToRender,\r\n            this.props.rowCount\r\n        );\r\n\r\n        this.minColumnsToRender = columns.length;\r\n        this.minRowsToRender = rows.length;\r\n\r\n        // free unused stable keys before rendering\r\n\r\n        const originalKeys: IMap<boolean> = {};\r\n        for (const row of rows) {\r\n            for (const col of columns) {\r\n                const originalKey = this.getCellOriginalKey(col.index, row.index);\r\n                originalKeys[originalKey] = true;\r\n            }\r\n        }\r\n        this.recycler.freeUnusedKeys(originalKeys);\r\n\r\n        // render cells\r\n\r\n        const cellsByKey: IMap<React.ReactNode> = {};\r\n        for (const row of rows) {\r\n            for (const col of columns) {\r\n\r\n                const originalKey = this.getCellOriginalKey(col.index, row.index);\r\n                const stableKey = this.recycler.getStableKey(originalKey);\r\n\r\n                cellsByKey[stableKey] = this.renderCell(col, row, stableKey);\r\n            }\r\n        }\r\n\r\n        // sort the cells by key order (important for recycling)\r\n        // https://stackoverflow.com/questions/5525795/does-javascript-guarantee-object-property-order\r\n        const cells: React.ReactNode[] = [];\r\n        for (const key of Object.keys(cellsByKey)) {\r\n            cells.push(cellsByKey[key]);\r\n        }\r\n\r\n        return cells;\r\n    }\r\n\r\n    private renderCell(col: ElementInfo, row: ElementInfo, stableKey: React.Key): React.ReactNode {\r\n        return (\r\n            <VirtualCell\r\n                className={this.props.className + '_Cell'}\r\n                key={stableKey}\r\n                direction={this.props.direction}\r\n                height={row.size}\r\n                width={col.size}\r\n                top={row.position}\r\n                left={col.position}\r\n            >\r\n                {this.props.children({\r\n                    colIndex: col.index,\r\n                    rowIndex: row.index,\r\n                    height: row.size,\r\n                    width: col.size\r\n                })}\r\n            </VirtualCell>\r\n        );\r\n    }\r\n\r\n    //\r\n    // event handlers\r\n    //\r\n\r\n    private handleScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n        const normalized = ScrollUtils.normalizeScrollEvent(e, this.props.direction);\r\n        this.setState({\r\n            scrollTop: normalized.scrollTop,\r\n            scrollLeft: normalized.normalizedScrollLeft\r\n        });\r\n    };\r\n\r\n    //\r\n    // render helpers\r\n    //\r\n\r\n    private getCellOriginalKey(colIndex: number, rowIndex: number): React.Key {\r\n        return `${colIndex}, ${rowIndex}`;\r\n    }\r\n}","import * as React from 'react';\r\nimport { DocDir, ScrollDirection, ScrollEvent, SizeCallback } from '../types';\r\nimport { areShallowEqual, DomUtils, ScrollUtils } from '../utils';\r\nimport { VirtualTile, VirtualTileProps } from './VirtualTile';\r\nimport { WindowCalculator } from './windowCalculator';\r\n\r\nexport enum TileKey {\r\n    HeaderLeft = 'Header_Left',\r\n    HeaderCenter = 'Header_Center',\r\n    HeaderRight = 'Header_Right',\r\n    BodyLeft = 'Body_Left',\r\n    BodyCenter = 'Body_Center',\r\n    BodyRight = 'Body_Right',\r\n    FooterLeft = 'Footer_Left',\r\n    FooterCenter = 'Footer_Center',\r\n    FooterRight = 'Footer_Right'\r\n}\r\n\r\nexport interface TilePosition {\r\n    vertical: 'header' | 'body' | 'footer';\r\n    horizontal: 'left' | 'center' | 'right';\r\n}\r\n\r\nexport interface RenderCellProps {\r\n    /**\r\n     * Absolute column index, taking into account fixed columns.\r\n     */\r\n    absColIndex: number;\r\n    /**\r\n     * Absolute row index, taking into account fixed header and/or footer.\r\n     */\r\n    absRowIndex: number;\r\n    /**\r\n     * Column index relative to the current tile.\r\n     */\r\n    relColIndex: number;\r\n    /**\r\n     * Row index relative to the current tile.\r\n     */\r\n    relRowIndex: number;\r\n    tileKey: TileKey;\r\n    tilePosition: TilePosition;\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\nexport class VirtualGridProps {\r\n\r\n    public onScroll?: (e: ScrollEvent) => void;\r\n\r\n    public height: number;\r\n    public width: number;\r\n    /**\r\n     * Number of columns in the grid, excluding fixed columns.\r\n     */\r\n    public columnCount: number;\r\n    /**\r\n     * Number of rows in the grid, excluding the header and footer.\r\n     */\r\n    public rowCount: number;\r\n    public columnWidth: number | SizeCallback;\r\n    public rowHeight: number | SizeCallback;\r\n    /**\r\n     * If `columnWidth` is a function and this prop is not specified will use\r\n     * eager evaluation (invoke the method for all cells on component mount) to\r\n     * calculate the total scroll width.\r\n     */\r\n    public estimatedColumnWidth?: number;\r\n    /**\r\n     * If `rowHeight` is a function and this prop is not specified will use\r\n     * eager evaluation (invoke the method for all cells on component mount) to\r\n     * calculate the total scroll height.\r\n     */\r\n    public estimatedRowHeight?: number;\r\n    public overscanColumnsCount?= 0;\r\n    public overscanRowCount?= 0;\r\n\r\n    public fixedHeaderHeight?= 0;\r\n    public fixedFooterHeight?= 0;\r\n    public fixedLeftWidth?= 0;\r\n    public fixedRightWidth?= 0;\r\n\r\n    public style?: React.CSSProperties;\r\n    public tileStyle?: (tileKey: TileKey) => React.CSSProperties;\r\n\r\n    public children: (props: RenderCellProps) => React.ReactNode;\r\n}\r\n\r\ninterface TileEntry {\r\n    ref: React.RefObject<VirtualTile>;\r\n    position: TilePosition;\r\n    tileRowTop: number;\r\n    rowIndexOffset: number;\r\n    columnIndexOffset: number;\r\n    scrollDirection: ScrollDirection;\r\n    props: Omit<VirtualTileProps, \"children\">;\r\n}\r\n\r\ntype TilesMap = {\r\n    [key in TileKey]: TileEntry\r\n};\r\n\r\nclass VirtualGridState {\r\n    public scrollTop = 0;\r\n    public scrollLeft = 0;\r\n}\r\n\r\nexport class VirtualGrid extends React.PureComponent<VirtualGridProps, VirtualGridState> {\r\n\r\n    public static defaultProps: unknown = new VirtualGridProps();\r\n\r\n    private get direction(): DocDir {\r\n        return this.props.style?.direction === 'rtl' ? 'rtl' : 'ltr';\r\n    }\r\n\r\n    private get activeTiles(): TileKey[] {\r\n        return Object.keys(this.tiles) as TileKey[];\r\n    }\r\n\r\n    private get headerTiles(): TileKey[] {\r\n        return this.activeTiles.filter(key => this.tiles[key].position.vertical === 'header');\r\n    }\r\n\r\n    private get bodyTiles(): TileKey[] {\r\n        return this.activeTiles.filter(key => this.tiles[key].position.vertical === 'body');\r\n    }\r\n\r\n    private get footerTiles(): TileKey[] {\r\n        return this.activeTiles.filter(key => this.tiles[key].position.vertical === 'footer');\r\n    }\r\n\r\n    private tiles: Partial<TilesMap> = {};\r\n\r\n    constructor(props: VirtualGridProps) {\r\n        super(props);\r\n        this.state = new VirtualGridState();\r\n        this.tiles = this.createTilesMap();\r\n    }\r\n\r\n    //\r\n    // life cycle\r\n    //\r\n\r\n    public componentDidUpdate(prevProps: VirtualGridProps) {\r\n        if (!areShallowEqual(this.props, prevProps)) {\r\n            this.tiles = this.createTilesMap();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        const scrollableHeight = this.getScrollableAreaHeight();\r\n        const scrollableWidth = this.getScrollableAreaWidth();\r\n\r\n        return (\r\n            <div\r\n                className={this.createClassName('Main_Container')}\r\n                style={{\r\n                    direction: this.direction,\r\n                    position: 'relative',\r\n                    height: this.getContainerHeight(scrollableHeight, scrollableWidth),\r\n                    width: this.getContainerWidth(scrollableHeight, scrollableWidth),\r\n                    overflow: 'auto',\r\n                    ...this.props.style\r\n                }}\r\n                onScroll={this.handleScroll}\r\n            >\r\n                <div\r\n                    className={this.createClassName('Main_ScrollableArea')}\r\n                    style={{\r\n                        height: scrollableHeight,\r\n                        width: scrollableWidth\r\n                    }}\r\n                >\r\n                    {this.renderTilesRow(this.headerTiles)}\r\n                    {this.renderTilesRow(this.bodyTiles)}\r\n                    {this.renderTilesRow(this.footerTiles)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderTilesRow(tileKeys: TileKey[]) {\r\n        if (!tileKeys?.length)\r\n            return null;\r\n\r\n        const firstTile = this.tiles[tileKeys[0]];\r\n\r\n        const rightOrLeft = this.direction === 'rtl' ? 'right' : 'left';\r\n\r\n        const isSticky = DomUtils.isPositionStickySupported;\r\n        const position = isSticky ? 'sticky' : 'absolute';\r\n        const topOffset = (isSticky ? 0 : this.state.scrollTop);\r\n        const leftOffset = (isSticky ? 0 : this.state.scrollLeft);\r\n\r\n        const width = tileKeys\r\n            .map(key => this.tiles[key].props.width)\r\n            .reduce((total, cur) => total + cur, 0);\r\n\r\n        return (\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    position,\r\n                    top: firstTile.tileRowTop + topOffset,\r\n                    [rightOrLeft]: 0 + leftOffset,\r\n                    height: firstTile.props.height,\r\n                    width\r\n                }}\r\n            >\r\n                {tileKeys.map(this.renderTile)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderTile = (tileKey: TileKey): React.ReactNode => {\r\n        const { ref, props, rowIndexOffset, columnIndexOffset } = this.tiles[tileKey];\r\n        return (\r\n            <VirtualTile\r\n                key={tileKey}\r\n                ref={ref}\r\n                {...props}\r\n            >\r\n                {renderProps => this.props.children({\r\n                    tileKey,\r\n                    tilePosition: this.getTilePosition(tileKey),\r\n                    absRowIndex: renderProps.rowIndex + rowIndexOffset,\r\n                    absColIndex: renderProps.colIndex + columnIndexOffset,\r\n                    relRowIndex: renderProps.rowIndex,\r\n                    relColIndex: renderProps.colIndex,\r\n                    height: renderProps.height,\r\n                    width: renderProps.width\r\n                })}\r\n            </VirtualTile>\r\n        );\r\n    };\r\n\r\n    //\r\n    // event handlers\r\n    //\r\n\r\n    private handleScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n        const normalized = ScrollUtils.normalizeScrollEvent(e, this.direction);\r\n\r\n        // restore tiles position\r\n        this.setState({\r\n            scrollTop: normalized.scrollTop,\r\n            scrollLeft: normalized.normalizedScrollLeft\r\n        });\r\n\r\n        // scroll tiles content\r\n        for (const tileKey of this.activeTiles) {\r\n            const { ref, scrollDirection } = this.tiles[tileKey];\r\n            ref.current.scrollTo(normalized, scrollDirection);\r\n        }\r\n    };\r\n\r\n    //\r\n    // render helpers\r\n    //\r\n\r\n    private createTilesMap(): Partial<TilesMap> {\r\n        this.resetTiles();\r\n\r\n        const map: Partial<TilesMap> = {};\r\n\r\n        const hasHeader = !!this.props.fixedHeaderHeight;\r\n        const hasFooter = !!this.props.fixedFooterHeight;\r\n        const hasFixedLeftColumn = !!this.props.fixedLeftWidth;\r\n        const hasFixedRightColumn = !!this.props.fixedRightWidth;\r\n\r\n        const createTilesMapEntry = this.createTileMapEntryFactory();\r\n\r\n        // header\r\n\r\n        if (hasHeader) {\r\n\r\n            if (hasFixedLeftColumn) {\r\n                map[TileKey.HeaderLeft] = createTilesMapEntry(TileKey.HeaderLeft);\r\n            }\r\n\r\n            map[TileKey.HeaderCenter] = createTilesMapEntry(TileKey.HeaderCenter);\r\n\r\n            if (hasFixedRightColumn) {\r\n                map[TileKey.HeaderRight] = createTilesMapEntry(TileKey.HeaderRight);\r\n            }\r\n        }\r\n\r\n        // body\r\n\r\n        if (hasFixedLeftColumn) {\r\n            map[TileKey.BodyLeft] = createTilesMapEntry(TileKey.BodyLeft);\r\n        }\r\n\r\n        map[TileKey.BodyCenter] = createTilesMapEntry(TileKey.BodyCenter);\r\n\r\n        if (hasFixedRightColumn) {\r\n            map[TileKey.BodyRight] = createTilesMapEntry(TileKey.BodyRight);\r\n        }\r\n\r\n        // footer\r\n\r\n        if (hasFooter) {\r\n\r\n            if (hasFixedLeftColumn) {\r\n                map[TileKey.FooterLeft] = createTilesMapEntry(TileKey.FooterLeft);\r\n            }\r\n\r\n            map[TileKey.FooterCenter] = createTilesMapEntry(TileKey.FooterCenter);\r\n\r\n            if (hasFixedRightColumn) {\r\n                map[TileKey.FooterRight] = createTilesMapEntry(TileKey.FooterRight);\r\n            }\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    private createTileMapEntryFactory() {\r\n\r\n        // calculate base dimensions\r\n\r\n        const scrollableHeight = this.getScrollableAreaHeight();\r\n        const scrollableWidth = this.getScrollableAreaWidth();\r\n\r\n        const horizontalScrollbarWidth = this.getHorizontalScrollbarWidth(scrollableWidth);\r\n        const verticalScrollbarWidth = this.getVerticalScrollbarWidth(scrollableHeight);\r\n\r\n        const containerHeight = this.getContainerHeight(scrollableHeight, scrollableWidth);\r\n        const containerWidth = this.getContainerWidth(scrollableHeight, scrollableWidth);\r\n\r\n        const headerHeight = this.props.fixedHeaderHeight;\r\n        const footerHeight = this.props.fixedFooterHeight;\r\n        const bodyHeight = containerHeight - horizontalScrollbarWidth - headerHeight - footerHeight;\r\n\r\n        const leftWidth = this.props.fixedLeftWidth;\r\n        const rightWidth = this.props.fixedRightWidth;\r\n        const centerWidth = containerWidth - verticalScrollbarWidth - leftWidth - rightWidth;\r\n\r\n        // create factory method\r\n\r\n        return (tileKey: TileKey): TileEntry => {\r\n\r\n            const { vertical, horizontal } = this.getTilePosition(tileKey);\r\n\r\n            const isVerticalFixed = vertical === 'header' || vertical === 'footer';\r\n            const isHorizontalFixed = horizontal === 'left' || horizontal === 'right';\r\n            const isCorner = isVerticalFixed && isHorizontalFixed;\r\n\r\n            return {\r\n                ref: React.createRef<VirtualTile>(),\r\n\r\n                position: {\r\n                    vertical,\r\n                    horizontal\r\n                },\r\n\r\n                tileRowTop: vertical === 'header' ? 0 :\r\n                    vertical === 'body' ? headerHeight :\r\n                        headerHeight + bodyHeight,\r\n\r\n                rowIndexOffset: vertical === 'header' ? 0 :\r\n                    vertical === 'body' ? (headerHeight && 1) :\r\n                        this.props.rowCount + (headerHeight && 1),\r\n\r\n                columnIndexOffset: horizontal === 'left' ? 0 :\r\n                    horizontal === 'center' ? (leftWidth && 1) :\r\n                        this.props.columnCount + (leftWidth && 1),\r\n\r\n                scrollDirection: isCorner ? 'none' :\r\n                    isVerticalFixed ? 'horizontal' :\r\n                        isHorizontalFixed ? 'vertical' :\r\n                            'both',\r\n\r\n                props: {\r\n                    className: this.createClassName(tileKey),\r\n\r\n                    controlledScroll: true,\r\n\r\n                    direction: this.direction,\r\n\r\n                    height: vertical === 'header' ? headerHeight :\r\n                        vertical === 'body' ? bodyHeight :\r\n                            footerHeight,\r\n\r\n                    width: horizontal === 'left' ? leftWidth :\r\n                        horizontal === 'center' ? centerWidth :\r\n                            rightWidth,\r\n\r\n                    columnCount: horizontal === 'left' ? 1 :\r\n                        horizontal === 'center' ? this.props.columnCount :\r\n                            1,\r\n\r\n                    rowCount: vertical === 'header' ? 1 :\r\n                        vertical === 'body' ? this.props.rowCount :\r\n                            1,\r\n\r\n                    columnWidth: horizontal === 'left' ? leftWidth :\r\n                        horizontal === 'center' ? this.props.columnWidth :\r\n                            rightWidth,\r\n\r\n                    rowHeight: vertical === 'header' ? headerHeight :\r\n                        vertical === 'body' ? this.props.rowHeight :\r\n                            footerHeight,\r\n\r\n                    estimatedColumnWidth: horizontal === 'left' ? leftWidth :\r\n                        horizontal === 'center' ? this.props.estimatedColumnWidth :\r\n                            rightWidth,\r\n\r\n                    estimatedRowHeight: vertical === 'header' ? headerHeight :\r\n                        vertical === 'body' ? this.props.estimatedRowHeight :\r\n                            footerHeight,\r\n\r\n                    overscanColumnsCount: horizontal === 'left' ? 0 :\r\n                        horizontal === 'center' ? this.props.overscanColumnsCount :\r\n                            0,\r\n\r\n                    overscanRowCount: vertical === 'header' ? 0 :\r\n                        vertical === 'body' ? this.props.overscanRowCount :\r\n                            0\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    private getTilePosition(tileKey: TileKey): TilePosition {\r\n        const [vertical, horizontal] = tileKey.toLowerCase().split('_');\r\n        return {\r\n            vertical,\r\n            horizontal\r\n\r\n        } as TilePosition;\r\n    }\r\n\r\n    private getScrollableAreaHeight() {\r\n\r\n        const headerHeight = this.props.fixedHeaderHeight;\r\n        const footerHeight = this.props.fixedFooterHeight;\r\n        const bodyHeight = this.getBodyScrollableHeight();\r\n\r\n        return bodyHeight + headerHeight + footerHeight;\r\n    }\r\n\r\n    private getBodyScrollableHeight() {\r\n        const body = this.tiles[TileKey.BodyCenter]?.ref?.current;\r\n        if (body)\r\n            return body.getScrollableHeight();\r\n\r\n        // Body not rendered yet - have to calculate independently.  \r\n        // Not so DRY, breaks encapsulation and not very efficient either but I\r\n        // couldn't find a better way to do that which is not terribly ugly...\r\n        return new WindowCalculator().getTotalSize(\r\n            'row',\r\n            this.props.rowHeight,\r\n            this.props.estimatedRowHeight,\r\n            this.props.rowCount\r\n        );\r\n    }\r\n\r\n    private getScrollableAreaWidth() {\r\n\r\n        const leftWidth = this.props.fixedLeftWidth;\r\n        const rightWidth = this.props.fixedRightWidth;\r\n        const bodyWidth = this.getBodyScrollableAreaWidth();\r\n\r\n        return bodyWidth + leftWidth + rightWidth;\r\n    }\r\n\r\n    private getBodyScrollableAreaWidth() {\r\n        const body = this.tiles[TileKey.BodyCenter]?.ref?.current;\r\n        if (body)\r\n            return body.getScrollableWidth();\r\n\r\n        // Body not rendered yet - have to calculate independently.  \r\n        // Not so DRY, breaks encapsulation and not very efficient either but I\r\n        // couldn't find a better way to do that which is not terribly ugly...\r\n        return new WindowCalculator().getTotalSize(\r\n            'column',\r\n            this.props.columnWidth,\r\n            this.props.estimatedColumnWidth,\r\n            this.props.columnCount\r\n        );\r\n    }\r\n\r\n    private getVerticalScrollbarWidth(scrollableHeight: number): number {\r\n        const hasVerticalScrollbar = scrollableHeight > this.props.height;\r\n        return (hasVerticalScrollbar && DomUtils.scrollbarWidth) || 0;\r\n    }\r\n\r\n    private getHorizontalScrollbarWidth(scrollableWidth: number): number {\r\n        const hasHorizontalScrollbar = scrollableWidth > this.props.width;\r\n        return (hasHorizontalScrollbar && DomUtils.scrollbarWidth) || 0;\r\n    }\r\n\r\n    private getContainerHeight(scrollableHeight: number, scrollableWidth: number): number {\r\n        const horizontalScrollbarWidth = this.getHorizontalScrollbarWidth(scrollableWidth);\r\n        return Math.min(this.props.height, scrollableHeight + horizontalScrollbarWidth);\r\n    }\r\n\r\n    private getContainerWidth(scrollableHeight: number, scrollableWidth: number): number {\r\n        const verticalScrollbarWidth = this.getVerticalScrollbarWidth(scrollableHeight);\r\n        return Math.min(this.props.width, scrollableWidth + verticalScrollbarWidth);\r\n    }\r\n\r\n    /**\r\n     * We are only using classes for easier debug inspection...\r\n     */\r\n    private createClassName(className: string): string {\r\n        return `ReactTablize__VirtualGrid__${className}`;\r\n    }\r\n\r\n    //\r\n    // misc\r\n    //\r\n\r\n    private resetTiles() {\r\n        for (const tileKey of this.activeTiles) {\r\n            this.tiles[tileKey].ref.current.clearCache();\r\n        }\r\n        this.tiles = {};\r\n    }\r\n}","import * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { DocDir } from '../types';\r\nimport { SizeUtils } from '../utils';\r\nimport { VirtualGridProps, VirtualGrid } from './VirtualGrid';\r\n\r\nexport interface GridViewProps extends Omit<VirtualGridProps, 'height' | 'width'> {\r\n    height?: string | number;\r\n    width?: string | number;\r\n}\r\n\r\nexport class GridView extends React.PureComponent<GridViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n\r\n    private get direction(): DocDir {\r\n        return this.props.style?.direction === 'rtl' ? 'rtl' : 'ltr';\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <ErrorBoundary>\r\n                <div\r\n                    style={{\r\n                        direction: this.direction,\r\n                        width: '100%',\r\n                        ...this.props.style,\r\n                        ...SizeUtils.geElementHeights(this, GridView.defaultHeight)\r\n                    }}\r\n                >\r\n                    <AutoSizer>\r\n                        {({ width, height }) => (\r\n                            <VirtualGrid \r\n                                {...this.props}\r\n                                height={height}\r\n                                width={width}\r\n                            />\r\n                        )}\r\n                    </AutoSizer>\r\n                </div>\r\n            </ErrorBoundary >\r\n        );\r\n    }\r\n}","export * from './GridView';\r\nexport * from './VirtualGrid';\r\nexport * from './VirtualTile';\r\n","import * as React from 'react';\r\nimport { CellRender } from './TableCell';\r\n\r\nexport class ColumnBodyProps {\r\n    public children?: CellRender;\r\n}\r\n\r\nexport class ColumnBody extends React.PureComponent<ColumnBodyProps> { }","import * as React from 'react';\r\nimport { TableCellProps } from './TableCell';\r\n\r\nexport interface ColumnHeadProps extends TableCellProps {\r\n}\r\n\r\nexport class ColumnHead extends React.PureComponent<ColumnHeadProps> { }","import * as React from 'react';\r\nimport { isNullOrUndefined } from '../utils';\r\nimport { RowRender } from './TableRow';\r\n\r\nexport class TableBodyProps {\r\n    public children?: RowRender;\r\n}\r\n\r\nexport class TableBody extends React.PureComponent<TableBodyProps> {\r\n\r\n    public static hasChildren(body: TableBody): boolean {\r\n        if (!body)\r\n            return false;\r\n\r\n        if (isNullOrUndefined(body.props.children))\r\n            return false;\r\n\r\n        if (typeof body.props.children === 'function')\r\n            return true;\r\n\r\n        if (Array.isArray(body.props.children))\r\n            return body.props.children.length > 0;\r\n\r\n        const childrenCount = React.Children.count(body.props.children);\r\n        return childrenCount > 0;\r\n    }\r\n}","import styled from '@emotion/styled';\r\nimport { DomUtils } from '../utils';\r\n\r\nexport const StyledTableView = styled.div`\r\n    width: 100%;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nexport const StyledTableHead = styled.div`\r\n    display: flex;\r\n    overflow-y: hidden;\r\n    \r\n    /* add padding to compensate for scrollbar width */\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-right')}: ${DomUtils.scrollbarWidth}px;\r\n`;\r\n\r\nexport const StyledTableBody = styled.div`\r\n    /* no style... */\r\n`;\r\n\r\nexport const StyledTableRow = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const StyledTableCell = styled.div`\r\n    flex: 1;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n","import * as React from 'react';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { StyledTableCell } from './style';\r\n\r\nconst TableCellSymbol = '__ReactTablize__TableCell__';\r\n\r\nexport type CellContent = React.ReactNode;\r\n\r\nexport interface TableCellProps extends React.DivProps {\r\n    children?: CellContent;\r\n    visible?: boolean;\r\n}\r\n\r\nexport class TableCell extends React.PureComponent<TableCellProps> {\r\n\r\n    public static defaultProps: TableCellProps = {\r\n        [TableCellSymbol as any]: true\r\n    };\r\n\r\n    public static isTableCell(cell: unknown): cell is React.ReactElement<TableCellProps> {\r\n        return React.isValidElement(cell) && (cell.props as any)[TableCellSymbol];\r\n    }\r\n\r\n    public static getCellProps(cell: unknown): TableCellProps {\r\n        return (TableCell.isTableCell(cell) && cell.props) || {};\r\n    }\r\n\r\n    public static getCellContent(cell: unknown): CellContent {\r\n        return TableCell.isTableCell(cell) ?\r\n            cell.props.children :\r\n            cell;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <StyledTableCell {...this.props}>\r\n                <ErrorBoundary>\r\n                    {this.props.children}\r\n                </ErrorBoundary>\r\n            </StyledTableCell>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface CellRenderArgs {\r\n    rowIndex: number;\r\n    columnIndex: number;\r\n}\r\n\r\nexport type CellRender = (args: CellRenderArgs) => TableCell | CellContent;","import * as React from 'react';\r\nimport { RowContent } from './TableRow';\r\n\r\nexport interface TableHeadProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableHead extends React.PureComponent<TableHeadProps> { }","import * as React from 'react';\r\nimport { ReactUtils } from '../utils';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\nimport { TableBody } from './TableBody';\r\nimport { TableCell } from './TableCell';\r\nimport { TableHead } from './TableHead';\r\n\r\nexport class TableColumnProps {\r\n    public children?: [React.SubComp<ColumnHead>, React.SubComp<ColumnBody>];\r\n}\r\n\r\nexport class TableColumn extends React.PureComponent<TableColumnProps> { \r\n\r\n    public static createHeadFromColumns(columns: TableColumn[]): TableHead {\r\n\r\n        if (columns.every(col => !ReactUtils.singleChildOfType(col, ColumnHead)))\r\n            return null;\r\n\r\n        const head: any = (\r\n            <TableHead>\r\n                {columns.map(col => {\r\n                    const colHead = ReactUtils.singleChildOfType(col, ColumnHead);\r\n                    if (!colHead)\r\n                        return null;\r\n\r\n                    // eslint-disable-next-line react/jsx-key\r\n                    return <TableCell {...(colHead.props as any)} />;\r\n                })}\r\n            </TableHead>\r\n        );\r\n        return head;\r\n    }\r\n\r\n    public static createBodyFromColumns(columns: TableColumn[]): TableBody {\r\n        const body: any = (\r\n            <TableBody>\r\n                {(rowIndex: number) => columns.map((col, columnIndex) => {\r\n                    const cellRender = ReactUtils.singleChildOfType(col, ColumnBody).props.children;\r\n                    if (!cellRender)\r\n                        return null;\r\n                    return cellRender({ rowIndex, columnIndex });\r\n                })}\r\n            </TableBody>\r\n        );\r\n        return body;\r\n    }    \r\n}","import * as React from 'react';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { OneOrMore } from '../types';\r\nimport { StyledTableRow } from './style';\r\nimport { CellContent, TableCell } from './TableCell';\r\nconst flattenDeep = require('lodash.flattendeep');\r\n\r\nconst TableRowSymbol = '__ReactTablize__TableRow__';\r\n\r\n/**\r\n * One or more cells.\r\n */\r\nexport type RowContent = OneOrMore<React.SubComp<TableCell> | CellContent>;\r\n\r\nexport interface TableRowProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableRow extends React.PureComponent<TableRowProps> {\r\n\r\n    public static defaultProps: TableRowProps = {\r\n        [TableRowSymbol as any]: true\r\n    };\r\n\r\n    public static isTableRow(row: unknown): row is React.ReactElement<TableRowProps> {\r\n        return React.isValidElement(row) && (row.props as any)[TableRowSymbol];\r\n    }\r\n\r\n    public static getRowProps(row: unknown): TableRowProps {\r\n        return (TableRow.isTableRow(row) && row.props) || {};\r\n    }\r\n\r\n    public static getRowContent(row: unknown): RowContent {\r\n\r\n        let content: RowContent = row;\r\n\r\n        // row element\r\n        if (TableRow.isTableRow(content)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        if (Array.isArray(content)) {\r\n            content = flattenDeep(content);\r\n        }\r\n        return content;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <StyledTableRow {...this.props}>\r\n                <ErrorBoundary>\r\n                    {this.props.children}\r\n                </ErrorBoundary>\r\n            </StyledTableRow>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport type RowRender = (index: number) => React.SubComp<TableRow> | RowContent;","import { Theme } from '@emotion/styled';\r\nimport { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { List, NonVirtualList, VirtualList } from '../list';\r\nimport { DocDir, OneOrMore, SizeCallback } from '../types';\r\nimport { asArray, isNullOrUndefined, ReactUtils, SizeUtils } from '../utils';\r\nimport { StyledTableBody, StyledTableHead, StyledTableView } from './style';\r\nimport { TableBody } from './TableBody';\r\nimport { TableCell } from './TableCell';\r\nimport { TableColumn } from './TableColumn';\r\nimport { TableHead } from './TableHead';\r\nimport { RowRender, TableRow, TableRowProps } from './TableRow';\r\n\r\ntype TableChildren_RowsSyntax = [React.SubComp<TableHead>, React.SubComp<TableBody>];\r\n\r\ntype TableChildren_ColumnsSyntax = OneOrMore<React.SubComp<TableColumn>>;\r\n\r\n/**\r\n * Applicable only on non-virtual tables.\r\n */\r\nexport const RowAutoSize = (): number => undefined;\r\n\r\nexport type RowKeyCallback = (index: number) => React.Key;\r\n\r\nexport class TableViewProps {\r\n\r\n    //\r\n    // main props\r\n    //\r\n\r\n    public isVirtual?: boolean;\r\n    public rowCount: number;\r\n    public rowKey?: RowKeyCallback;\r\n    public children?: TableChildren_RowsSyntax | TableChildren_ColumnsSyntax;\r\n\r\n    //\r\n    // appearance\r\n    //\r\n\r\n    public dir?: DocDir = 'ltr';\r\n    public className?: string;\r\n    public style?: React.CSSProperties;\r\n    /**\r\n     * Row height in pixels.  \r\n     * \r\n     * Default: 50\r\n     */\r\n    public rowHeight?: number | SizeCallback = 50;\r\n    public emptyMessage?= \"No Items to Display\";\r\n    public customScrollbars?: boolean;\r\n\r\n    //\r\n    // behavior\r\n    //\r\n\r\n    public keyScroll?: boolean;\r\n\r\n    //\r\n    // virtualization\r\n    //\r\n\r\n    /**\r\n     * Number of extra buffer items to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 20\r\n     */\r\n    public overscanCount?= 20;\r\n}\r\n\r\nexport class TableView extends React.PureComponent<TableViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n    public static readonly defaultHeadHeight = '40px';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = TableHead;\r\n\r\n    public static Body = TableBody;\r\n\r\n    public static Row = TableRow;\r\n\r\n    public static Cell = TableCell;\r\n\r\n    public static Column = TableColumn;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps = new TableViewProps();\r\n\r\n    private tableElement = React.createRef<List>();\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public refresh() {\r\n        if (this.tableElement.current) {\r\n            this.tableElement.current.refresh();\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        // head & body\r\n        let head = ReactUtils.singleChildOfType(this, TableHead);\r\n        let body = ReactUtils.singleChildOfType(this, TableBody);\r\n        const columns = ReactUtils.childrenOfType(this, TableColumn);\r\n\r\n        // columns\r\n        if (columns && columns.length) {\r\n            if (head || body)\r\n                throw new Error('Can not specify head and/or body when specifying table columns.');\r\n\r\n            head = TableColumn.createHeadFromColumns(columns);\r\n            body = TableColumn.createBodyFromColumns(columns);\r\n        }\r\n\r\n        // render\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <StyledTableView\r\n                        className={this.props.className}\r\n                        style={{\r\n                            ...this.props.style,\r\n                            ...SizeUtils.geElementHeights(this, TableView.defaultHeight)\r\n                        }}\r\n                    >\r\n                        {this.renderTableHead(head)}\r\n                        {this.renderTableBody(head, body)}\r\n                    </StyledTableView>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderTableHead(head: TableHead) {\r\n\r\n        if (!head)\r\n            return null;\r\n\r\n        const { children, ...divProps } = head.props;\r\n\r\n        return (\r\n            <StyledTableHead\r\n                {...divProps}\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    ...head.props.style,\r\n                    ...SizeUtils.geElementHeights(head, TableView.defaultHeadHeight)\r\n                }}\r\n            >\r\n                {React.Children.map(children, this.renderCell)}\r\n            </StyledTableHead>\r\n        );\r\n    }\r\n\r\n    private renderTableBody(head: TableHead, body: TableBody) {\r\n\r\n        const bodyHeights = SizeUtils.getBodyHeights(this, head, {\r\n            total: TableView.defaultHeight,\r\n            head: TableView.defaultHeadHeight\r\n        });\r\n\r\n        return (\r\n            <StyledTableBody\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    ...bodyHeights\r\n                }}\r\n            >\r\n                <ErrorBoundary>\r\n                    {this.renderTableRows(body)}\r\n                </ErrorBoundary>\r\n            </StyledTableBody>\r\n        );\r\n    }\r\n\r\n    private renderTableRows(body: TableBody) {\r\n\r\n        // placeholder\r\n        if (this.props.rowCount === 0 || !TableBody.hasChildren(body)) {\r\n            return this.renderItemsPlaceHolder();\r\n        }\r\n\r\n        // table rows\r\n        const rowRender = body.props.children;\r\n        const ListComponent = this.getListComponent();\r\n        return (\r\n            <AutoSizer>\r\n                {({ width, height }) => (\r\n                    <ListComponent\r\n                        ref={this.tableElement as React.Ref<any>}\r\n                        style={{ outline: 'none' }}\r\n                        dir={this.props.dir}\r\n                        layout=\"vertical\"\r\n                        height={height}\r\n                        width={width}\r\n                        itemCount={this.props.rowCount}\r\n                        itemSize={this.getRowHeight}\r\n                        overscan={this.props.overscanCount}\r\n                        customScrollbar={this.props.customScrollbars}\r\n                    >\r\n                        {index => this.renderBodyRow(index, rowRender)}\r\n                    </ListComponent>\r\n                )}\r\n            </AutoSizer>\r\n        );\r\n    }\r\n\r\n    private renderBodyRow(index: number, rowRender: RowRender) {\r\n        if (!rowRender)\r\n            return null;\r\n\r\n        const row = rowRender(index);\r\n        let rowContent = TableRow.getRowContent(row);\r\n        rowContent = asArray(rowContent).map(this.renderCell);\r\n\r\n        // already a row - just adjust the content\r\n        if (TableRow.isTableRow(row)) {\r\n            const rowKey = this.getRowKey(row.props, index);\r\n            return React.cloneElement(row, { key: rowKey }, rowContent);\r\n        }\r\n\r\n        // not a row - wrap content with row element\r\n        else {\r\n            const rowKey = this.getRowKey({}, index);\r\n            return (\r\n                <TableRow key={rowKey}>\r\n                    {rowContent}\r\n                </TableRow>\r\n            );\r\n        }\r\n    }\r\n\r\n    private renderCell(cell: unknown, columnIndex: number) {\r\n        const cellProps = TableCell.getCellProps(cell);\r\n        if (cellProps.visible === false)\r\n            return null;\r\n\r\n        // already a cell - just add key and return\r\n        if (TableCell.isTableCell(cell)) {\r\n            return React.cloneElement(cell, { key: columnIndex });\r\n        }\r\n\r\n        // not a cell - wrap content with cell element\r\n        return (\r\n            <TableCell key={columnIndex}>\r\n                {cell}\r\n            </TableCell>\r\n        );\r\n    }\r\n\r\n    private renderItemsPlaceHolder() {\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {this.props.emptyMessage}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //\r\n    // helpers\r\n    //\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir\r\n        };\r\n    }\r\n\r\n    private getListComponent() {\r\n        return this.props.isVirtual !== false ?\r\n            VirtualList :\r\n            NonVirtualList;\r\n    }\r\n\r\n    private getRowKey(rowProps: TableRowProps, index: number): React.Key {\r\n\r\n        if (!isNullOrUndefined(rowProps.key))\r\n            return rowProps.key;\r\n\r\n        if (typeof this.props.rowKey === 'function')\r\n            return this.props.rowKey(index);\r\n\r\n        return index;\r\n    }\r\n\r\n    private getRowHeight = (rowIndex: number): number => {\r\n        if (typeof this.props.rowHeight === 'function')\r\n            return this.props.rowHeight(rowIndex);\r\n        return this.props.rowHeight;\r\n    };\r\n}","export * from './ColumnBody';\r\nexport * from './ColumnHead';\r\nexport * from './TableBody';\r\nexport * from './TableCell';\r\nexport * from './TableColumn';\r\nexport * from './TableHead';\r\nexport * from './TableRow';\r\nexport * from './TableView';\r\n","export * from './grid';\r\nexport * from './table';\r\n"],"sourceRoot":""}