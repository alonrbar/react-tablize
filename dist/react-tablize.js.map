{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","external \"react\"","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\domUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\keyboard.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\reactUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\scrollUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\sizeUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\internal\\CustomScrollbars.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\internal\\ErrorBoundary.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\internal\\index.ts","external \"@emotion/styled-base\"","external \"react-virtualized-auto-sizer\"","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\list\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\list\\NonVirtualList.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\list\\VirtualList.tsx","external \"react-custom-scrollbars\"","external \"emotion-theming\"","external \"react-dom\"","external \"react-window\"","external \"lodash.flattendeep\"","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\recycleManager.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\VirtualCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\windowCalculator.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\VirtualGrid.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\VirtualTile.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableColumn.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableRow.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\index.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Keys","DomUtils","_classCallCheck","_scrollbarWidth","div","document","createElement","style","width","height","overflow","position","top","body","appendChild","offsetWidth","clientWidth","removeChild","_rtlOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","scrollLeft","_isPositionStickySupported","prefix","testElementStyle","head","length","concat","ReactUtils","reactUtils_classCallCheck","children","createPropsToAdd","React","map","child","index","propsToAdd","parentElement","type","childrenArray","filter","elementInstanceOf","matchingChildren","childrenOfType","Error","props","Array","isArray","elem","isPrototypeOf","ScrollUtils","scrollUtils_classCallCheck","e","docDir","normalizedScrollLeft","_e$currentTarget","currentTarget","scrollTop","_e$currentTarget2","scrollHeight","scrollWidth","clientHeight","rtlOffsetType","normalizedScrollTop","Math","min","max","rawScrollLeft","SizeUtils","sizeUtils_classCallCheck","size","Number","isFinite","component","defaultHeight","minHeight","maxHeight","undefined","cssSizeString","table","defaultHeights","totalHeights","geElementHeights","total","headHeight","getHeadHeight","bodyHeights","isNullOrUndefined","val","asArray","areShallowEqual","a","b","keysA","keys","keysB","_i","_keysA","__webpack_exports__","reactUtils_ReactUtils","scrollUtils_ScrollUtils","CustomScrollbarsInner","_this","external_react_","external_react_custom_scrollbars_default","ref","forwardedRef","view","current","_objectSpread","onScroll","CustomScrollbars","CustomScrollbars_CustomScrollbarsInner","_extends","displayName","ErrorBoundary","_React$Component","ErrorBoundary_classCallCheck","ErrorBoundary_possibleConstructorReturn","ErrorBoundary_getPrototypeOf","state","hasError","ErrorBoundary_inherits","error","errorInfo","setState","console","ErrorBoundary_ErrorBoundary","_List__WEBPACK_IMPORTED_MODULE_0__","_NonVirtualList__WEBPACK_IMPORTED_MODULE_1__","_VirtualList__WEBPACK_IMPORTED_MODULE_2__","NonVirtualList","_React$PureComponent","_getPrototypeOf2","_len","arguments","args","_key","_getPrototypeOf","apply","_defineProperty","_assertThisInitialized","scrollOffset","currentInner","listRef","isHorizontal","disableScrollEvents","scrollTo","left","_inherits","_this2","listStyle","dir","boxSizing","outline","display","getListElementType","handleOnScroll","itemCount","fill","_","_ref","react__WEBPACK_IMPORTED_MODULE_0__","itemSize","customScrollbar","layout","scrollKeys","_scrollKeys","PageUp","PageDown","End","Home","VirtualList","window","addEventListener","scrollByKey","removeEventListener","_offsetByKey","tableRef","tableInnerRef","tableOuterRef","scrollElement","ReactDOM","currentOffset","pageSize","maxOffset","offsetByKey","resetAfterIndex","forceUpdate","offset","react_window__WEBPACK_IMPORTED_MODULE_2__","innerRef","outerRef","assign","outerElementType","getOuterElementType","overscanCount","overscan","getKeyScrollProps","_ref2","renderRow","row","keyScroll","onMouseEnter","registerKeyHandlers","onMouseLeave","removeKeyHandlers","onKeyDown","RecycleManager","nextOriginalKeys","nextKeys","prevKeys","usedKeysOriginalToStable","nextIndex","prevIndex","nextOriginal","prevOriginal","freeUnusedKey","originalKey","stableKey","getNextKeyFromPool","result","freeKeysPool","stableKeySource","VirtualCell","VirtualCell_classCallCheck","_possibleConstructorReturn","rightOrLeft","transformModifier","transform","className","VirtualCell_defineProperty","CalcData","WindowCalculator","windowCalculator_classCallCheck","windowCalculator_defineProperty","column","elementType","fromPosition","toPosition","elementsOverscan","estimatedElementSize","calculateElementSize","minElementsCountToReturn","totalElementsCount","fromIndex","findNearestItem","toIndex","info","push","getElementInfo","elementsCount","lastMeasuredIndex","data","cache","totalSizeOfMeasuredElements","lastMeasuredElemInfo","maxIndex","_cache$lastMeasuredIn","_this$data$elementTyp","findNearestItemBinarySearch","findNearestItemExponentialSearch","high","low","middle","floor","currentPosition","interval","elementIndex","_this$data$elementTyp2","elementInfo","_ref3","_cache$index","TileKey","VirtualTileState","VirtualTile","VirtualTile_classCallCheck","VirtualTile_getPrototypeOf","VirtualTile_defineProperty","VirtualTile_assertThisInitialized","VirtualTile_inherits","scrollability","containerElement","windowCalc","getEstimatedTotalSize","estimatedRowHeight","rowCount","estimatedColumnWidth","columnCount","minColumnsToRender","minRowsToRender","getScrollableHeight","getScrollableWidth","renderCells","columns","elementsInRange","overscanColumnsCount","columnWidth","rows","overscanRowCount","rowHeight","originalKeys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","col","getCellOriginalKey","err","recycler","freeUnusedKeys","cellsByKey","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","getStableKey","renderCell","cells","_Object$keys","VirtualCell_VirtualCell","colIndex","rowIndex","VirtualGridProps","VirtualGrid_classCallCheck","VirtualGrid_defineProperty","VirtualGridState","VirtualGrid","VirtualGrid_getPrototypeOf","VirtualGrid_assertThisInitialized","tileKey","isSticky","isPositionStickySupported","topOffset","leftOffset","_this$tiles$tileKey","tiles","rowIndexOffset","columnIndexOffset","VirtualTile_VirtualTile","renderProps","tilePosition","getTilePosition","absRowIndex","absColIndex","relRowIndex","relColIndex","normalized","normalizeScrollEvent","activeTiles","scroll","VirtualGrid_inherits","VirtualGrid_createClass","_this$props$style","createTilesMap","prevProps","scrollableHeight","getScrollableAreaHeight","scrollableWidth","getScrollableAreaWidth","createClassName","getContainerHeight","getContainerWidth","handleScroll","renderTile","resetTiles","hasHeader","fixedHeaderHeight","hasFooter","fixedFooterHeight","hasFixedLeftColumn","fixedLeftWidth","hasFixedRightColumn","fixedRightWidth","createTilesMapEntry","createTileMapEntryFactory","HeaderLeft","HeaderCenter","HeaderRight","BodyLeft","BodyCenter","BodyRight","FooterLeft","FooterCenter","FooterRight","horizontalScrollbarWidth","getHorizontalScrollbarWidth","verticalScrollbarWidth","getVerticalScrollbarWidth","containerHeight","containerWidth","headerHeight","footerHeight","bodyHeight","bodyRowsCount","leftWidth","rightWidth","centerWidth","centerColumnsCount","float","_this2$getTilePositio","vertical","horizontal","isVerticalFixed","isHorizontalFixed","isCorner","shouldFloat","_tileKey$toLowerCase$2","_slicedToArray","toLowerCase","split","_this$tiles$TileKey$B","_this$tiles$TileKey$B2","_this$tiles$TileKey$B3","_this$tiles$TileKey$B4","bodyWidth","scrollbarWidth","clearCache","GridView","GridView_classCallCheck","GridView_possibleConstructorReturn","GridView_getPrototypeOf","GridView_inherits","internal","GridView_objectSpread","external_react_virtualized_auto_sizer_default","VirtualGrid_VirtualGrid","GridView_extends","ColumnBodyProps","ColumnBody_classCallCheck","ColumnBody","ColumnBody_possibleConstructorReturn","ColumnBody_getPrototypeOf","ColumnBody_inherits","ColumnHead","ColumnHead_classCallCheck","ColumnHead_possibleConstructorReturn","ColumnHead_getPrototypeOf","ColumnHead_inherits","TableBodyProps","TableBody_classCallCheck","TableBody","TableBody_possibleConstructorReturn","TableBody_getPrototypeOf","TableBody_inherits","count","StyledTableView","styled_base_default","target","label","styles","StyledTableHead","theme","StyledTableBody","StyledTableRow","StyledTableCell","TableCell","TableCell_classCallCheck","TableCell_possibleConstructorReturn","TableCell_getPrototypeOf","TableCell_inherits","cell","isTableCell","TableHead","TableHead_classCallCheck","TableHead_possibleConstructorReturn","TableHead_getPrototypeOf","TableHead_inherits","TableColumnProps","TableColumn_classCallCheck","TableColumn","TableColumn_possibleConstructorReturn","TableColumn_getPrototypeOf","TableColumn_inherits","every","singleChildOfType","colHead","TableCell_TableCell","TableBody_TableBody","columnIndex","cellRender","flattenDeep","TableRow","TableRow_classCallCheck","TableRow_possibleConstructorReturn","TableRow_getPrototypeOf","TableRow_inherits","isTableRow","content","RowAutoSize","TableViewProps","TableView_classCallCheck","TableView_defineProperty","TableView","TableView_getPrototypeOf","TableView_assertThisInitialized","TableView_inherits","tableElement","refresh","createHeadFromColumns","createBodyFromColumns","external_emotion_theming_","getTheme","TableView_objectSpread","renderTableHead","renderTableBody","_head$props","divProps","_objectWithoutProperties","TableView_extends","defaultHeadHeight","getBodyHeights","renderTableRows","hasChildren","renderItemsPlaceHolder","rowRender","ListComponent","getListComponent","getRowHeight","customScrollbars","renderBodyRow","rowContent","getRowContent","rowKey","getRowKey","TableRow_TableRow","getCellProps","visible","textAlign","emptyMessage","isVirtual","rowProps","GridView_GridView","TableColumn_TableColumn","TableView_TableView"],"mappings":"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","file":"react-tablize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-tablize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-tablize\"] = factory();\n\telse\n\t\troot[\"react-tablize\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = require(\"react\");","export type RtlOffsetType = 'negative' | 'positive-descending' | 'positive-ascending';\r\n\r\nexport class DomUtils {\r\n\r\n    public static get scrollbarWidth(): number {\r\n        if (this._scrollbarWidth !== null)\r\n            return this._scrollbarWidth;\r\n\r\n        // https://github.com/sonicdoe/measure-scrollbar/blob/master/index.js\r\n\r\n        const div = document.createElement('div');\r\n\r\n        div.style.width = '100px';\r\n        div.style.height = '100px';\r\n        div.style.overflow = 'scroll';\r\n        div.style.position = 'absolute';\r\n        div.style.top = '-9999px';\r\n\r\n        document.body.appendChild(div);\r\n\r\n        this._scrollbarWidth = div.offsetWidth - div.clientWidth;\r\n\r\n        document.body.removeChild(div);\r\n\r\n        return this._scrollbarWidth;\r\n    }\r\n\r\n    /**\r\n     * TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n     * Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\r\n     * Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\r\n     * The safest way to check this is to intentionally set a negative offset,\r\n     * and then verify that the subsequent \"scroll\" event matches the negative offset.\r\n     * If it does not match, then we can assume a non-standard RTL scroll implementation.\r\n     *\r\n     * From: https://github.com/bvaughn/react-window/blob/master/src/domHelpers.js\r\n     */\r\n    public static get rtlOffsetType(): RtlOffsetType {\r\n        if (DomUtils._rtlOffsetType)\r\n            return DomUtils._rtlOffsetType;\r\n\r\n        const outerDiv = document.createElement('div');\r\n        const outerStyle = outerDiv.style;\r\n        outerStyle.width = '50px';\r\n        outerStyle.height = '50px';\r\n        outerStyle.overflow = 'scroll';\r\n        outerStyle.direction = 'rtl';\r\n\r\n        const innerDiv = document.createElement('div');\r\n        const innerStyle = innerDiv.style;\r\n        innerStyle.width = '100px';\r\n        innerStyle.height = '100px';\r\n\r\n        outerDiv.appendChild(innerDiv);\r\n\r\n        document.body.appendChild(outerDiv);\r\n\r\n        if (outerDiv.scrollLeft > 0) {\r\n            DomUtils._rtlOffsetType = 'positive-descending';\r\n        } else {\r\n            outerDiv.scrollLeft = 1;\r\n            if (outerDiv.scrollLeft === 0) {\r\n                DomUtils._rtlOffsetType = 'negative';\r\n            } else {\r\n                DomUtils._rtlOffsetType = 'positive-ascending';\r\n            }\r\n        }\r\n\r\n        document.body.removeChild(outerDiv);\r\n\r\n        return DomUtils._rtlOffsetType;\r\n    }\r\n\r\n    public static get isPositionStickySupported(): boolean {\r\n\r\n        // https://github.com/dollarshaveclub/stickybits/issues/35#issuecomment-549929578\r\n\r\n        if (DomUtils._isPositionStickySupported !== null)\r\n            return DomUtils._isPositionStickySupported;\r\n\r\n        const prefix = ['', '-o-', '-webkit-', '-moz-', '-ms-'];\r\n        const testElementStyle = document.head.style;\r\n\r\n        for (let i = 0; i < prefix.length; i += 1) {\r\n            testElementStyle.position = `${prefix[i]}sticky`;\r\n        }\r\n        DomUtils._isPositionStickySupported = (testElementStyle.position === 'sticky');\r\n\r\n        return DomUtils._isPositionStickySupported;\r\n    }\r\n\r\n    private static _scrollbarWidth: number = null;\r\n\r\n    private static _rtlOffsetType: RtlOffsetType;\r\n\r\n    private static _isPositionStickySupported: boolean = null;\r\n}","export enum Keys {\r\n    PageUp = 'PageUp',\r\n    PageDown = 'PageDown',\r\n    End ='End',\r\n    Home ='Home',\r\n}\r\n\r\nexport interface KeyEvent {\r\n    key: string;\r\n}","import * as React from 'react';\r\nimport { Constructor } from '../types';\r\n\r\nexport class ReactUtils {\r\n\r\n    public static addPropsToChildren(children: React.ReactNode, createPropsToAdd: (child: React.ReactElement<any>, index?: number) => any) {\r\n\r\n        // https://stackoverflow.com/questions/32370994/how-to-pass-props-to-this-props-children\r\n        return React.Children.map(children, (child: React.ReactElement<any>, index: number) => {\r\n            const propsToAdd = createPropsToAdd(child, index);\r\n            return React.cloneElement(child, propsToAdd);\r\n        });\r\n    }    \r\n\r\n    public static childrenOfType<T>(parentElement: any, type: Constructor<T>): T[] {\r\n        const children = ReactUtils.childrenArray(parentElement);\r\n        if (!children)\r\n            return null;\r\n        return children.filter(child => ReactUtils.elementInstanceOf(child, type)) as any;\r\n    }\r\n\r\n    /**\r\n     * Return the only child that matches the given type.  \r\n     * If more than one child matches an error is thrown.  \r\n     * \r\n     * Notice that this function gives no indication of the total number of\r\n     * children, only the number of matching children.\r\n     * @param parentElement \r\n     * @param type \r\n     */\r\n    public static singleChildOfType<T>(parentElement: any, type: Constructor<T>): T {\r\n        const matchingChildren = ReactUtils.childrenOfType(parentElement, type);\r\n        if (!matchingChildren || !matchingChildren.length)\r\n            return null;\r\n\r\n        if (matchingChildren.length > 1)\r\n            throw new Error(`Only one ${type.name} child element is allowed.`);\r\n\r\n        return matchingChildren[0] as any;\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private static childrenArray(parentElement: any): React.ReactChild[] {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (Array.isArray(children))\r\n            return children;\r\n\r\n        return React.Children.map(children, child => child);\r\n    }\r\n\r\n    private static elementInstanceOf<T>(elem: any, type: Constructor<T>): elem is T {\r\n        if (!elem)\r\n            return false;\r\n        if (!elem.type)\r\n            return false;\r\n\r\n        // https://stackoverflow.com/questions/39387405/using-instanceof-to-test-for-base-class-of-a-react-component\r\n        // https://stackoverflow.com/questions/14486110/how-to-check-if-a-javascript-class-inherits-another-without-creating-an-obj\r\n        // https://stackoverflow.com/questions/2464426/whats-the-difference-between-isprototypeof-and-instanceof-in-javascript\r\n\r\n        return elem.type === type ||\r\n            elem.type.prototype instanceof type ||\r\n            Object.prototype.isPrototypeOf.call(type, elem.type);\r\n    }    \r\n}","import { DocDir } from '../types';\r\nimport { DomUtils } from './domUtils';\r\n\r\nexport interface NormalizedScrollEvent {\r\n    scrollTop: number;\r\n    /**\r\n     * The original scrollLeft value as it was sent by the browser.\r\n     */\r\n    rawScrollLeft: number;\r\n    /**\r\n     * The normalized, \"positive-ascending\" scrollLeft value. \r\n     * For mode details see the comment on `DomUtils.rtlOffsetType`. \r\n     */\r\n    normalizedScrollLeft: number;\r\n}\r\n\r\nexport class ScrollUtils {\r\n\r\n    public static normalizeScrollEvent(e: React.UIEvent<HTMLElement>, docDir: DocDir): NormalizedScrollEvent {\r\n\r\n        const { scrollTop, scrollLeft } = e.currentTarget;\r\n        const { scrollHeight, scrollWidth, clientHeight, clientWidth } = e.currentTarget;\r\n\r\n        // RTL support\r\n        let normalizedScrollLeft: number;\r\n        if (docDir === 'rtl') {\r\n            switch (DomUtils.rtlOffsetType) {\r\n                case 'negative':\r\n                    normalizedScrollLeft = -scrollLeft;\r\n                    break;\r\n                case 'positive-ascending':\r\n                    // noop\r\n                    break;\r\n                case 'positive-descending':\r\n                default:\r\n                    normalizedScrollLeft = scrollWidth - clientWidth - scrollLeft;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // fix scroll offset to prevent \"over scroll\"\r\n        let normalizedScrollTop = Math.min(scrollTop, scrollHeight - clientHeight);\r\n        normalizedScrollTop = Math.max(0, scrollTop);\r\n        normalizedScrollLeft = Math.min(normalizedScrollLeft, scrollWidth - clientWidth);\r\n        normalizedScrollLeft = Math.max(0, normalizedScrollLeft);\r\n\r\n        return {\r\n            scrollTop: normalizedScrollTop,\r\n            rawScrollLeft: scrollLeft,\r\n            normalizedScrollLeft\r\n        };\r\n    }\r\n}","\r\nexport interface ElementHeights {\r\n    height: string | number;\r\n    minHeight: string | number;\r\n    maxHeight: string | number;\r\n}\r\n\r\nexport interface TableHeights {\r\n    total: string | number;\r\n    head: string | number;\r\n}\r\n\r\nexport type ComponentWithStyle = React.Component<{ style?: React.CSSProperties }>;\r\n\r\nexport class SizeUtils {\r\n\r\n    public static cssSizeString(size: any): string {\r\n        if (Number.isFinite(size))\r\n            return size + 'px';\r\n        return size;\r\n    }\r\n\r\n    public static geElementHeights(component: ComponentWithStyle, defaultHeight: number | string): ElementHeights {\r\n        const style = (component && component.props.style) || {};\r\n\r\n        let height = style.height;\r\n        let minHeight = style.minHeight;\r\n        let maxHeight = style.maxHeight;\r\n\r\n        if (height === undefined && minHeight === undefined) {\r\n            height = defaultHeight;\r\n        }\r\n\r\n        height = this.cssSizeString(height);\r\n        minHeight = this.cssSizeString(minHeight);\r\n        maxHeight = this.cssSizeString(maxHeight);\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    public static getBodyHeights(table: ComponentWithStyle, head: ComponentWithStyle, defaultHeights: TableHeights): ElementHeights {\r\n\r\n        const totalHeights = this.geElementHeights(table, defaultHeights.total);\r\n        const headHeight = this.getHeadHeight(head, defaultHeights.head);\r\n        const bodyHeights = this.geElementHeights(table, undefined);\r\n\r\n        let height = bodyHeights.height || totalHeights.height;\r\n        let minHeight = bodyHeights.minHeight || totalHeights.minHeight;\r\n        let maxHeight = bodyHeights.maxHeight || totalHeights.maxHeight;\r\n\r\n        if (headHeight) {\r\n            height = `calc(${height} - ${headHeight})`;\r\n            if (minHeight)\r\n                minHeight = `calc(${minHeight} - ${headHeight})`;\r\n            if (maxHeight)\r\n                maxHeight = `calc(${maxHeight} - ${headHeight})`;\r\n        }\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    private static getHeadHeight(head: ComponentWithStyle, defaultHeight: string | number): string | number {\r\n        if (head) {\r\n            return this.geElementHeights(head, defaultHeight).height;\r\n        }\r\n        return 0;\r\n    }    \r\n}","\r\nexport function isNullOrUndefined(val: any): boolean {\r\n    return val === null || val === undefined;\r\n}\r\n\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n    if (Array.isArray(val))\r\n        return val;\r\n\r\n    return [val];\r\n}\r\n\r\nexport function range(count: number): number[] {\r\n    // https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp\r\n    return [...Array(count || 0).keys()];\r\n}\r\n\r\nexport function areShallowEqual(a: object, b: object) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n\r\n    if (a === null || a === undefined || b === null || b === undefined) {\r\n        return false;\r\n    }\r\n\r\n    const keysA = Object.keys(a);\r\n    const keysB = Object.keys(b);\r\n\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n\r\n    for (const key of keysA) {\r\n        if ((a as any)[key] !== (b as any)[key])\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}","export * from './domUtils';\r\nexport * from './keyboard';\r\nexport * from './reactUtils';\r\nexport * from './scrollUtils';\r\nexport * from './sizeUtils';\r\nexport * from './utils';\r\n","import * as React from 'react';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\n\r\nexport interface CustomScrollbarsProps {\r\n    style?: React.CSSProperties;\r\n    onScroll?: any;\r\n    forwardedRef: React.RefFunction<any> | React.RefObject<any>;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nclass CustomScrollbarsInner extends React.PureComponent<CustomScrollbarsProps> {\r\n    public render() {\r\n\r\n        // https://github.com/bvaughn/react-window/issues/110#issuecomment-469061213\r\n\r\n        const refSetter = (elem: any) => {\r\n            if (!this.props.forwardedRef)\r\n                return;\r\n\r\n            const ref = (elem || {}).view;\r\n            if (typeof this.props.forwardedRef === 'function') {\r\n                this.props.forwardedRef(ref);\r\n            } else {\r\n                (this.props.forwardedRef as any).current = ref;\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Scrollbars\r\n                ref={refSetter}\r\n                style={{\r\n                    ...this.props.style,\r\n                    overflow: 'hidden',\r\n                    direction: 'ltr'\r\n                }}\r\n                onScroll={this.props.onScroll}\r\n            >\r\n                {this.props.children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport const CustomScrollbars = React.forwardRef((props, ref) => (\r\n    <CustomScrollbarsInner {...props} forwardedRef={ref as any} />\r\n));\r\nCustomScrollbars.displayName = 'CustomScrollbars';","import * as React from 'react';\r\n\r\nclass ErrorBoundaryState {\r\n    public hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<{}, ErrorBoundaryState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n        this.setState({ hasError: true });\r\n        console.error(error);  // eslint-disable-line no-console\r\n    }\r\n\r\n    public render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <span>X</span>\r\n            );\r\n        }\r\n        return this.props.children !== undefined ? this.props.children : null;\r\n    }\r\n}","export * from './CustomScrollbars';\r\nexport * from './ErrorBoundary';\r\n","module.exports = require(\"@emotion/styled-base\");","module.exports = require(\"react-virtualized-auto-sizer\");","export * from './List';\r\nexport * from './NonVirtualList';\r\nexport * from './VirtualList';\r\n","import * as React from 'react';\r\nimport { CustomScrollbars } from '../internal';\r\nimport { ListProps } from './List';\r\n\r\nexport class NonVirtualList extends React.PureComponent<ListProps> {\r\n\r\n    private get isHorizontal(): boolean {\r\n        return this.props.layout === 'horizontal';\r\n    }\r\n\r\n    private disableScrollEvents = false;\r\n\r\n    private readonly listRef = React.createRef<HTMLDivElement>();\r\n\r\n    public scrollTo = (scrollOffset: number) => {\r\n        const currentInner = this.listRef.current;\r\n        if (currentInner) {\r\n\r\n            if (scrollOffset === undefined)\r\n                return;\r\n\r\n            const currentOffset = (this.isHorizontal ? currentInner.scrollLeft : currentInner.scrollTop);\r\n            if (scrollOffset === currentOffset)\r\n                return;\r\n\r\n            this.disableScrollEvents = true;\r\n            currentInner.scrollTo({\r\n                top: (this.isHorizontal ? undefined : scrollOffset),\r\n                left: (this.isHorizontal ? scrollOffset : undefined)\r\n            });\r\n        }\r\n    };\r\n\r\n    public render() {\r\n\r\n        const listStyle: React.CSSProperties = {\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n            direction: this.props.dir,\r\n            boxSizing: 'content-box',\r\n            outline: 'none',\r\n            overflow: 'auto',\r\n            [this.isHorizontal ? 'overflowY' : 'overflowX']: 'hidden'\r\n        };\r\n\r\n        if (this.isHorizontal) {\r\n            listStyle.display = 'flex';\r\n        }\r\n\r\n        return React.createElement(this.getListElementType() as any,\r\n            {\r\n                ref: this.listRef,\r\n                style: listStyle,\r\n                onScroll: this.handleOnScroll\r\n            },\r\n\r\n            // rows\r\n            Array(this.props.itemCount).fill(0).map((_, index) => (\r\n                <div\r\n                    key={index}\r\n                    style={{\r\n                        [this.isHorizontal ? 'minWidth' : 'minHeight']: this.props.itemSize(index),\r\n                        [this.isHorizontal ? 'height' : 'width']: (this.isHorizontal ? this.props.height : this.props.width)\r\n                    }}\r\n                >\r\n\r\n                    {/* content */}\r\n                    {this.props.children(index)}\r\n\r\n                </div>\r\n            ))\r\n        );\r\n    }\r\n\r\n    private handleOnScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n        if (this.disableScrollEvents) {\r\n            this.disableScrollEvents = false;\r\n            return;\r\n        }\r\n\r\n        if (!this.props.onScroll)\r\n            return;\r\n\r\n        const { scrollTop, scrollLeft } = e.currentTarget;\r\n        this.props.onScroll(this.isHorizontal ? scrollLeft : scrollTop);\r\n    };\r\n\r\n    private getListElementType() {\r\n        return this.props.customScrollbar ? CustomScrollbars : 'div';\r\n    }\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { VariableSizeList } from 'react-window';\r\nimport { CustomScrollbars } from '../internal';\r\nimport { IMap } from '../types';\r\nimport { KeyEvent, Keys } from '../utils';\r\nimport { List, ListProps } from './List';\r\n\r\nconst scrollKeys: IMap<boolean> = {\r\n    [Keys.PageUp]: true,\r\n    [Keys.PageDown]: true,\r\n    [Keys.End]: true,\r\n    [Keys.Home]: true,\r\n};\r\n\r\nexport interface VirtualListProps extends ListProps {\r\n    keyScroll?: boolean;\r\n}\r\n\r\nexport class VirtualList extends React.PureComponent<VirtualListProps> implements List {\r\n\r\n    private tableRef = React.createRef<VariableSizeList>();\r\n    private tableInnerRef = React.createRef<HTMLElement>();\r\n    private tableOuterRef = React.createRef<HTMLElement>();\r\n\r\n    public refresh() {\r\n        if (this.tableRef.current) {\r\n            this.tableRef.current.resetAfterIndex(0, false);\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    public scrollTo(offset: number): void {\r\n        if (this.tableRef.current) {\r\n            this.tableRef.current.scrollTo(offset);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <VariableSizeList\r\n                ref={this.tableRef}\r\n                innerRef={this.tableInnerRef}\r\n                outerRef={this.tableOuterRef}\r\n                style={Object.assign({ outline: 'none' }, this.props.style)}\r\n                outerElementType={this.getOuterElementType()}\r\n                direction={this.props.dir}\r\n                layout={this.props.layout}\r\n                height={this.props.height}\r\n                width={this.props.width}\r\n                itemCount={this.props.itemCount}\r\n                itemSize={this.props.itemSize}\r\n                overscanCount={this.props.overscan}\r\n                {...this.getKeyScrollProps()}\r\n            >\r\n                {({ index, style }) => this.renderRow(index, style)}\r\n            </VariableSizeList>\r\n        );\r\n    }\r\n\r\n    private renderRow(index: number, style: React.CSSProperties) {\r\n        const row = this.props.children(index);\r\n\r\n        return React.cloneElement(row, {\r\n            style: {\r\n                ...row.props.style,\r\n                ...style\r\n            }\r\n        });\r\n    }\r\n\r\n    //\r\n    // scroll with keys\r\n    //\r\n\r\n    private getKeyScrollProps() {\r\n        if (this.props.keyScroll === false)\r\n            return {};\r\n        return {\r\n            onMouseEnter: this.registerKeyHandlers,\r\n            onMouseLeave: this.removeKeyHandlers,\r\n            onKeyDown: this.scrollByKey\r\n        };\r\n    }\r\n\r\n    private registerKeyHandlers = () => {\r\n        window.addEventListener('keydown', this.scrollByKey);\r\n    };\r\n\r\n    private removeKeyHandlers = () => {\r\n        window.removeEventListener('keydown', this.scrollByKey);\r\n    };\r\n\r\n    private scrollByKey = ({ key }: KeyEvent) => {\r\n\r\n        // https://dev.to/dance2die/scrolling-with-page-up-down-keys-in-react-window-31ei\r\n\r\n        if (!scrollKeys[key])\r\n            return;\r\n\r\n        if (!this.tableRef.current || !this.tableInnerRef.current || !this.tableOuterRef.current)\r\n            return;\r\n\r\n        const scrollElement = (this.props.customScrollbar ? this.tableOuterRef.current : this.tableRef.current);\r\n        const table = (ReactDOM.findDOMNode(scrollElement) as HTMLElement);\r\n        const currentOffset = table.scrollTop;\r\n        const bodyHeight = table.clientHeight;\r\n        const pageSize = bodyHeight * 0.85;\r\n        const minOffset = 0.1;\r\n        const maxOffset = this.tableInnerRef.current.clientHeight;\r\n\r\n        const offsetByKey: IMap<number> = {\r\n            [Keys.PageUp]: Math.max(minOffset, currentOffset - pageSize),\r\n            [Keys.PageDown]: Math.min(currentOffset + pageSize, maxOffset),\r\n            [Keys.End]: maxOffset,\r\n            [Keys.Home]: minOffset,\r\n        };\r\n\r\n        this.tableRef.current.scrollTo(offsetByKey[key]);\r\n    };\r\n\r\n    private getOuterElementType() {\r\n        return this.props.customScrollbar ? CustomScrollbars : undefined;\r\n    }\r\n}","module.exports = require(\"react-custom-scrollbars\");","module.exports = require(\"emotion-theming\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-window\");","module.exports = require(\"lodash.flattendeep\");","import { IMap } from '../types';\r\n\r\n/**\r\n * Note: In few places the recycling logic leverages the fact that in JavaScript\r\n * when object keys are integers they are iterated in ascending numeric order\r\n * (except for IE of course...). See:\r\n * https://stackoverflow.com/questions/5525795/does-javascript-guarantee-object-property-order.\r\n */\r\nexport class RecycleManager {\r\n\r\n    private stableKeySource = 0;\r\n    private freeKeysPool: IMap<boolean> = {};\r\n    private usedKeysOriginalToStable: IMap<React.Key> = {};\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public freeUnusedKeys(nextOriginalKeys: IMap<boolean>) {\r\n\r\n        const nextKeys = Object.keys(nextOriginalKeys);\r\n        const prevKeys = Object.keys(this.usedKeysOriginalToStable);\r\n\r\n        let nextIndex = nextKeys.length - 1;\r\n        let prevIndex = prevKeys.length - 1;\r\n\r\n        while (nextIndex >= 0 && prevIndex >= 0) {\r\n\r\n            const nextOriginal = nextKeys[nextIndex];\r\n            const prevOriginal = prevKeys[prevIndex];\r\n\r\n            if (nextOriginal === prevOriginal) {\r\n\r\n                // still using the key - don't free\r\n                nextIndex--;\r\n                prevIndex--;\r\n\r\n            } else if (nextOriginal > prevOriginal) {\r\n\r\n                // still using the key - don't free\r\n                nextIndex--;\r\n\r\n            } else {\r\n\r\n                // not using the key - return to pool\r\n                this.freeUnusedKey(prevOriginal);\r\n                prevIndex--;\r\n            }\r\n        }\r\n\r\n        // return remaining keys to pool\r\n        while (prevIndex >= 0) {\r\n            const prevOriginal = prevKeys[prevIndex];\r\n            this.freeUnusedKey(prevOriginal);\r\n            prevIndex--;\r\n        }\r\n    }    \r\n\r\n    public getStableKey(originalKey: React.Key): React.Key {\r\n\r\n        if (this.usedKeysOriginalToStable[originalKey] !== undefined) {\r\n            return this.usedKeysOriginalToStable[originalKey];\r\n\r\n        } else {\r\n            const stableKey = this.getNextKeyFromPool();\r\n            this.usedKeysOriginalToStable[originalKey] = stableKey;\r\n            return stableKey;\r\n        }\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private getNextKeyFromPool(): React.Key {\r\n\r\n        // find next key in pool        \r\n        let result: React.Key;\r\n        for (const key in this.freeKeysPool) {\r\n            if (this.freeKeysPool.hasOwnProperty(key)) {\r\n                result = key;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (result === undefined) {\r\n\r\n            // generate new key\r\n            result = this.stableKeySource;\r\n            this.stableKeySource++;\r\n\r\n        } else {\r\n\r\n            // remove from pool\r\n            delete this.freeKeysPool[result];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private freeUnusedKey(originalKey: React.Key): void {\r\n        const stableKey = this.usedKeysOriginalToStable[originalKey];\r\n        delete this.usedKeysOriginalToStable[originalKey];\r\n        this.freeKeysPool[stableKey] = true;\r\n    }\r\n}","import * as React from 'react';\r\nimport { DocDir } from '../types';\r\n\r\nexport interface VirtualCellProps {\r\n    /**\r\n     * We are only using classes for easier debug inspection...\r\n     */\r\n    className: string;\r\n    direction: DocDir;\r\n    height: number;\r\n    width: number;\r\n    left: number;\r\n    top: number;\r\n    children: React.ReactNode;\r\n}\r\n\r\n/***\r\n * Each `VirtualTile` creates a constant number of these `VirtualCell`s and just\r\n * moves them around. This is much more efficient than creating a new cell on\r\n * each scroll.\r\n *\r\n * based on:\r\n * https://github.com/Flipkart/recyclerlistview/blob/master/src/platform/web/viewrenderer/ViewRenderer.tsx\r\n */\r\nexport class VirtualCell extends React.PureComponent<VirtualCellProps> {\r\n    public render() {\r\n\r\n        const rightOrLeft = this.props.direction === 'rtl' ? 'right' : 'left';\r\n\r\n        // https://rtl-css.net/tutorial/quick-tip-rtling-css3-transform-functions-translate-and-translatex\r\n        const transformModifier = (this.props.direction === 'rtl') ? -1 : 1;\r\n        const transform = `translate(${this.props.left * transformModifier}px,${this.props.top}px)`;\r\n\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                style={{\r\n                    height: this.props.height,\r\n                    width: this.props.width,\r\n                    position: \"absolute\",\r\n                    [rightOrLeft]: 0,\r\n                    top: 0,\r\n                    willChange: \"transform\",\r\n                    transform\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import { IMap, SizeCallback } from '../types';\r\n\r\nexport type ElementType = 'column' | 'row';\r\n\r\nexport interface ElementInfo {\r\n    index: number;\r\n    position: number;\r\n    size: number;\r\n}\r\n\r\nclass CalcData {\r\n    public cache: IMap<ElementInfo> = {};\r\n    public lastMeasuredIndex = -1;\r\n}\r\n\r\ntype CalcDataMap = {\r\n    [key in ElementType]: CalcData;\r\n};\r\n\r\n/**\r\n * Calculates the index, size and position of all visible items within a given\r\n * range.\r\n *\r\n * based on:\r\n * - https://github.com/bvaughn/react-window/blob/master/src/VariableSizeGrid.js\r\n * - https://github.com/fulcrumapp/react-virtual-grid/blob/master/src/grid-calculator.js\r\n * - https://github.com/ranneyd/sticky-table/blob/master/src/useVirtual.js\r\n */\r\nexport class WindowCalculator {\r\n\r\n    private readonly data: CalcDataMap = {\r\n        column: new CalcData(),\r\n        row: new CalcData()\r\n    };\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public elementsInRange(\r\n        elementType: ElementType,\r\n        fromPosition: number,\r\n        toPosition: number,\r\n        elementsOverscan: number,\r\n        estimatedElementSize: number,\r\n        calculateElementSize: SizeCallback,\r\n        minElementsCountToReturn: number,\r\n        totalElementsCount: number\r\n    ) {\r\n\r\n        let fromIndex = this.findNearestItem(\r\n            elementType,\r\n            fromPosition,\r\n            totalElementsCount,\r\n            estimatedElementSize,\r\n            calculateElementSize\r\n        );\r\n        fromIndex = Math.max(0, fromIndex - elementsOverscan);\r\n\r\n        let toIndex = this.findNearestItem(\r\n            elementType,\r\n            toPosition,\r\n            totalElementsCount,\r\n            estimatedElementSize,\r\n            calculateElementSize\r\n        );\r\n        toIndex = Math.min(toIndex + elementsOverscan, totalElementsCount - 1);\r\n        \r\n        while (toIndex - fromIndex + 1 < minElementsCountToReturn) {\r\n            if (toIndex + 1 < totalElementsCount) {\r\n                toIndex++;\r\n            } else {\r\n                fromIndex--;\r\n            }\r\n        }\r\n\r\n        const info: ElementInfo[] = [];\r\n        for (let i = fromIndex; i <= toIndex; i++) {\r\n            info.push(this.getElementInfo(\r\n                elementType,\r\n                i,\r\n                estimatedElementSize,\r\n                calculateElementSize\r\n            ));\r\n        }\r\n        return info;\r\n    }\r\n\r\n    public getEstimatedTotalSize(elementType: ElementType, estimatedElementSize: number, elementsCount: number) {\r\n\r\n        let { lastMeasuredIndex } = this.data[elementType];\r\n        const { cache } = this.data[elementType];\r\n\r\n        // Edge case check for when the number of items decreases while a scroll is in progress.\r\n        // https://github.com/bvaughn/react-window/pull/138\r\n        if (lastMeasuredIndex >= elementsCount) {\r\n            lastMeasuredIndex = elementsCount - 1;\r\n        }\r\n\r\n        let totalSizeOfMeasuredElements = 0;\r\n        if (lastMeasuredIndex >= 0) {\r\n            const lastMeasuredElemInfo = cache[lastMeasuredIndex];\r\n            totalSizeOfMeasuredElements = lastMeasuredElemInfo.position + lastMeasuredElemInfo.size;\r\n        }\r\n\r\n        const numUnmeasuredElements = elementsCount - lastMeasuredIndex - 1;\r\n        const totalSizeOfUnmeasuredElements = numUnmeasuredElements * estimatedElementSize;\r\n\r\n        return totalSizeOfMeasuredElements + totalSizeOfUnmeasuredElements;\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private findNearestItem(\r\n        elementType: ElementType,\r\n        position: number,\r\n        maxIndex: number,\r\n        estimatedElementSize: number,\r\n        calculateElementSize: SizeCallback\r\n    ) {\r\n\r\n        const { lastMeasuredIndex, cache } = this.data[elementType];\r\n        const lastMeasuredPosition = cache[lastMeasuredIndex]?.position ?? -1;\r\n\r\n        if (lastMeasuredPosition >= position) {\r\n\r\n            // If we've already measured items within this range just use a binary search as it's faster.\r\n            return this.findNearestItemBinarySearch(\r\n                elementType,\r\n                lastMeasuredIndex,\r\n                0,\r\n                position,\r\n                estimatedElementSize,\r\n                calculateElementSize\r\n            );\r\n\r\n        } else {\r\n\r\n            // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\r\n            // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\r\n            // The overall complexity for this approach is O(log n).\r\n            return this.findNearestItemExponentialSearch(\r\n                elementType,\r\n                Math.max(lastMeasuredIndex, 0),\r\n                maxIndex,\r\n                position,\r\n                estimatedElementSize,\r\n                calculateElementSize\r\n            );\r\n        }\r\n    };\r\n\r\n    private findNearestItemBinarySearch(\r\n        elementType: ElementType,\r\n        high: number,\r\n        low: number,\r\n        position: number,\r\n        estimatedElementSize: number,\r\n        calculateElementSize: SizeCallback\r\n    ) {\r\n        while (low <= high) {\r\n            const middle = low + Math.floor((high - low) / 2);\r\n            const currentPosition = this.getElementInfo(elementType, middle, estimatedElementSize, calculateElementSize).position;\r\n\r\n            if (currentPosition === position) {\r\n                return middle;\r\n            } else if (currentPosition < position) {\r\n                low = middle + 1;\r\n            } else if (currentPosition > position) {\r\n                high = middle - 1;\r\n            }\r\n        }\r\n\r\n        if (low > 0) {\r\n            return low - 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    private findNearestItemExponentialSearch(\r\n        elementType: ElementType,\r\n        index: number,\r\n        maxIndex: number,\r\n        position: number,\r\n        estimatedElementSize: number,\r\n        calculateElementSize: SizeCallback\r\n    ) {\r\n        let interval = 1;\r\n\r\n        while (\r\n            index < maxIndex &&\r\n            this.getElementInfo(elementType, index, estimatedElementSize, calculateElementSize).position < position\r\n        ) {\r\n            index += interval;\r\n            interval *= 2;\r\n        }\r\n\r\n        return this.findNearestItemBinarySearch(\r\n            elementType,\r\n            Math.min(index, maxIndex - 1),\r\n            Math.floor(index / 2),\r\n            position,\r\n            estimatedElementSize,\r\n            calculateElementSize\r\n        );\r\n    };\r\n\r\n    private getElementInfo(\r\n        elementType: ElementType,\r\n        elementIndex: number,\r\n        estimatedElementSize: number,\r\n        calculateElementSize: SizeCallback\r\n    ) {\r\n\r\n        const { lastMeasuredIndex, cache } = this.data[elementType];\r\n\r\n        // fill missing cache entries\r\n        if (elementIndex > lastMeasuredIndex) {\r\n\r\n            let position = 0;\r\n\r\n            // skipped already cached entries\r\n            if (lastMeasuredIndex !== -1) {\r\n                const elementInfo = cache[lastMeasuredIndex];\r\n                position = elementInfo.position + elementInfo.size;\r\n            }\r\n\r\n            // add new cache entries\r\n            for (let index = (lastMeasuredIndex + 1); index <= elementIndex; index++) {\r\n                const size = cache[index]?.size ?? calculateElementSize?.(index) ?? estimatedElementSize;\r\n\r\n                cache[index] = {\r\n                    index,\r\n                    position,\r\n                    size,\r\n                };\r\n\r\n                position += size;\r\n            }\r\n\r\n            this.data[elementType].lastMeasuredIndex = elementIndex;\r\n        }\r\n\r\n        return cache[elementIndex];\r\n    }\r\n}","import * as React from 'react';\r\nimport { DocDir, ScrollEvent, SizeCallback } from '../types';\r\nimport { DomUtils, areShallowEqual, ScrollUtils } from '../utils';\r\nimport { VirtualTile, VirtualTileProps } from './VirtualTile';\r\n\r\nexport enum TileKey {\r\n    HeaderLeft = 'Header_Left',\r\n    HeaderCenter = 'Header_Center',\r\n    HeaderRight = 'Header_Right',\r\n    BodyLeft = 'Body_Left',\r\n    BodyCenter = 'Body_Center',\r\n    BodyRight = 'Body_Right',\r\n    FooterLeft = 'Footer_Left',\r\n    FooterCenter = 'Footer_Center',\r\n    FooterRight = 'Footer_Right'\r\n}\r\n\r\nexport interface TilePosition {\r\n    vertical: 'header' | 'body' | 'footer';\r\n    horizontal: 'left' | 'center' | 'right';\r\n}\r\n\r\nexport interface RenderCellProps {\r\n    /**\r\n     * Absolute column index, taking into account fixed columns.\r\n     */\r\n    absColIndex: number;\r\n    /**\r\n     * Absolute row index, taking into account fixed header and/or footer.\r\n     */\r\n    absRowIndex: number;\r\n    /**\r\n     * Column index relative to the current tile.\r\n     */\r\n    relColIndex: number;\r\n    /**\r\n     * Row index relative to the current tile.\r\n     */\r\n    relRowIndex: number;\r\n    tileKey: TileKey;\r\n    tilePosition: TilePosition;\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\nexport class VirtualGridProps {\r\n\r\n    public onScroll?: (e: ScrollEvent) => void;\r\n\r\n    public height: number;\r\n    public width: number;\r\n    public columnCount: number;\r\n    public rowCount: number;\r\n    public estimatedColumnWidth: number;\r\n    public estimatedRowHeight: number;\r\n    public columnWidth?: SizeCallback;\r\n    public rowHeight?: SizeCallback;\r\n    public overscanColumnsCount?= 0;\r\n    public overscanRowCount?= 0;\r\n\r\n    public fixedHeaderHeight?= 0;\r\n    public fixedFooterHeight?= 0;\r\n    public fixedLeftWidth?= 0;\r\n    public fixedRightWidth?= 0;\r\n\r\n    public style?: React.CSSProperties;\r\n    public tileStyle?: (tileKey: TileKey) => React.CSSProperties;\r\n\r\n    public children: (props: RenderCellProps) => React.ReactNode;\r\n}\r\n\r\ninterface TileEntry {\r\n    ref: React.RefObject<VirtualTile>;\r\n    rowIndexOffset: number;\r\n    columnIndexOffset: number;\r\n    props: Omit<VirtualTileProps, \"children\">;\r\n}\r\n\r\ntype TilesMap = {\r\n    [key in TileKey]: TileEntry\r\n};\r\n\r\nclass VirtualGridState {\r\n    public scrollTop = 0;\r\n    public scrollLeft = 0;\r\n}\r\n\r\nexport class VirtualGrid extends React.PureComponent<VirtualGridProps, VirtualGridState> {\r\n\r\n    public static defaultProps: unknown = new VirtualGridProps();\r\n\r\n    private get direction(): DocDir {\r\n        return this.props.style?.direction === 'rtl' ? 'rtl' : 'ltr';\r\n    }\r\n\r\n    private get activeTiles(): TileKey[] {\r\n        return Object.keys(this.tiles) as TileKey[];\r\n    }\r\n\r\n    private tiles: Partial<TilesMap> = {};\r\n\r\n    constructor(props: VirtualGridProps) {\r\n        super(props);\r\n        this.state = new VirtualGridState();\r\n    }\r\n\r\n    //\r\n    // life cycle\r\n    //\r\n\r\n    public componentDidMount() {\r\n        this.tiles = this.createTilesMap();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    public componentDidUpdate(prevProps: VirtualGridProps) {\r\n        if (!areShallowEqual(this.props, prevProps)) {\r\n            this.tiles = this.createTilesMap();\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        const scrollableHeight = this.getScrollableAreaHeight();\r\n        const scrollableWidth = this.getScrollableAreaWidth();\r\n\r\n        return (\r\n            <div\r\n                className={this.createClassName('Main_Container')}\r\n                style={{\r\n                    direction: this.direction,\r\n                    position: 'relative',\r\n                    height: this.getContainerHeight(scrollableHeight, scrollableWidth),\r\n                    width: this.getContainerWidth(scrollableHeight, scrollableWidth),\r\n                    overflow: 'auto',\r\n                    ...this.props.style\r\n                }}\r\n                onScroll={this.handleScroll}\r\n            >\r\n                <div\r\n                    className={this.createClassName('Main_ScrollableArea')}\r\n                    style={{\r\n                        height: scrollableHeight,\r\n                        width: scrollableWidth\r\n                    }}\r\n                >\r\n                    {this.activeTiles.map(this.renderTile)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderTile = (tileKey: TileKey): React.ReactNode => {\r\n\r\n        const isSticky = DomUtils.isPositionStickySupported;\r\n        const topOffset = (isSticky ? 0 : this.state.scrollTop);\r\n        const leftOffset = (isSticky ? 0 : this.state.scrollLeft);\r\n\r\n        const { ref, props, rowIndexOffset, columnIndexOffset } = this.tiles[tileKey];\r\n\r\n        return (\r\n            <VirtualTile\r\n                key={tileKey}\r\n                ref={ref}\r\n                {...props}\r\n                top={props.top + topOffset}\r\n                left={props.left + leftOffset}\r\n            >\r\n                {renderProps => this.props.children({\r\n                    tileKey,\r\n                    tilePosition: this.getTilePosition(tileKey),\r\n                    absRowIndex: renderProps.rowIndex + rowIndexOffset,\r\n                    absColIndex: renderProps.colIndex + columnIndexOffset,\r\n                    relRowIndex: renderProps.rowIndex,\r\n                    relColIndex: renderProps.colIndex,\r\n                    height: renderProps.height,\r\n                    width: renderProps.width\r\n                })}\r\n            </VirtualTile>\r\n        );\r\n    };\r\n\r\n    //\r\n    // event handlers\r\n    //\r\n\r\n    private handleScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n        const normalized = ScrollUtils.normalizeScrollEvent(e, this.direction);\r\n        \r\n        // restore tiles position\r\n        this.setState({\r\n            scrollTop: normalized.scrollTop,\r\n            scrollLeft: normalized.normalizedScrollLeft\r\n        });\r\n        \r\n        // scroll tiles content\r\n        for (const tileKey of this.activeTiles) {\r\n            const { ref } = this.tiles[tileKey];\r\n            ref.current.scroll(normalized);\r\n        }\r\n    };\r\n\r\n    //\r\n    // render helpers\r\n    //\r\n\r\n    private createTilesMap(): Partial<TilesMap> {\r\n        this.resetTiles();\r\n\r\n        const map: Partial<TilesMap> = {};\r\n\r\n        const hasHeader = !!this.props.fixedHeaderHeight;\r\n        const hasFooter = !!this.props.fixedFooterHeight;\r\n        const hasFixedLeftColumn = !!this.props.fixedLeftWidth;\r\n        const hasFixedRightColumn = !!this.props.fixedRightWidth;\r\n\r\n        const createTilesMapEntry = this.createTileMapEntryFactory();\r\n\r\n        // header\r\n\r\n        if (hasHeader) {\r\n\r\n            if (hasFixedLeftColumn) {\r\n                map[TileKey.HeaderLeft] = createTilesMapEntry(TileKey.HeaderLeft);\r\n            }\r\n\r\n            map[TileKey.HeaderCenter] = createTilesMapEntry(TileKey.HeaderCenter);\r\n\r\n            if (hasFixedRightColumn) {\r\n                map[TileKey.HeaderRight] = createTilesMapEntry(TileKey.HeaderRight);\r\n            }\r\n        }\r\n\r\n        // body\r\n\r\n        if (hasFixedLeftColumn) {\r\n            map[TileKey.BodyLeft] = createTilesMapEntry(TileKey.BodyLeft);\r\n        }\r\n\r\n        map[TileKey.BodyCenter] = createTilesMapEntry(TileKey.BodyCenter);\r\n\r\n        if (hasFixedRightColumn) {\r\n            map[TileKey.BodyRight] = createTilesMapEntry(TileKey.BodyRight);\r\n        }\r\n\r\n        // footer\r\n\r\n        if (hasFooter) {\r\n\r\n            if (hasFixedLeftColumn) {\r\n                map[TileKey.FooterLeft] = createTilesMapEntry(TileKey.FooterLeft);\r\n            }\r\n\r\n            map[TileKey.FooterCenter] = createTilesMapEntry(TileKey.FooterCenter);\r\n\r\n            if (hasFixedRightColumn) {\r\n                map[TileKey.FooterRight] = createTilesMapEntry(TileKey.FooterRight);\r\n            }\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    private createTileMapEntryFactory() {\r\n\r\n        // calculate base dimensions\r\n\r\n        const scrollableHeight = this.getScrollableAreaHeight();\r\n        const scrollableWidth = this.getScrollableAreaWidth();\r\n\r\n        const horizontalScrollbarWidth = this.getHorizontalScrollbarWidth(scrollableWidth);\r\n        const verticalScrollbarWidth = this.getVerticalScrollbarWidth(scrollableHeight);\r\n\r\n        const containerHeight = this.getContainerHeight(scrollableHeight, scrollableWidth);\r\n        const containerWidth = this.getContainerWidth(scrollableHeight, scrollableWidth);\r\n\r\n        const headerHeight = this.props.fixedHeaderHeight;\r\n        const footerHeight = this.props.fixedFooterHeight;\r\n        const bodyHeight = containerHeight - horizontalScrollbarWidth - headerHeight - footerHeight;\r\n\r\n        const bodyRowsCount = this.props.rowCount - (headerHeight && 1) - (footerHeight && 1);\r\n\r\n        const leftWidth = this.props.fixedLeftWidth;\r\n        const rightWidth = this.props.fixedRightWidth;\r\n        const centerWidth = containerWidth - verticalScrollbarWidth - leftWidth - rightWidth;\r\n\r\n        const centerColumnsCount = this.props.columnCount - (leftWidth && 1) - (rightWidth && 1);\r\n\r\n        const isSticky = DomUtils.isPositionStickySupported;\r\n        const position = isSticky ? 'sticky' : 'absolute';\r\n        const float = (!isSticky ? undefined : this.direction === 'ltr' ? 'left' : 'right');\r\n\r\n        // create factory method\r\n\r\n        return (tileKey: TileKey): TileEntry => {\r\n\r\n            const { vertical, horizontal } = this.getTilePosition(tileKey);\r\n\r\n            const isVerticalFixed = vertical === 'header' || vertical === 'footer';\r\n            const isHorizontalFixed = horizontal === 'left' || horizontal === 'right';\r\n            const isCorner = isVerticalFixed && isHorizontalFixed;\r\n\r\n            const shouldFloat = (horizontal === 'left' || (horizontal === 'center' && !!rightWidth));\r\n\r\n            return {\r\n                ref: React.createRef<VirtualTile>(),\r\n\r\n                rowIndexOffset: vertical === 'header' ? 0 :\r\n                    vertical === 'body' ? (headerHeight && 1) :\r\n                        bodyRowsCount + (headerHeight && 1),\r\n\r\n                columnIndexOffset: horizontal === 'left' ? 0 :\r\n                    horizontal === 'center' ? (leftWidth && 1) :\r\n                        centerColumnsCount + (leftWidth && 1),\r\n\r\n                props: {\r\n                    className: this.createClassName(tileKey),\r\n\r\n                    scrollability: isCorner ? 'none' :\r\n                        isVerticalFixed ? 'horizontal' :\r\n                            isHorizontalFixed ? 'vertical' :\r\n                                'both',\r\n\r\n                    direction: this.direction,\r\n\r\n                    height: vertical === 'header' ? headerHeight :\r\n                        vertical === 'body' ? bodyHeight :\r\n                            footerHeight,\r\n\r\n                    width: horizontal === 'left' ? leftWidth :\r\n                        horizontal === 'center' ? centerWidth :\r\n                            rightWidth,\r\n\r\n                    position,\r\n\r\n                    top: vertical === 'header' ? 0 :\r\n                        vertical === 'body' ? headerHeight :\r\n                            headerHeight + bodyHeight,\r\n\r\n                    left: horizontal === 'left' ? 0 :\r\n                        horizontal === 'center' ? leftWidth :\r\n                            leftWidth + centerWidth,\r\n\r\n                    float: shouldFloat ? float : undefined,\r\n\r\n                    columnCount: horizontal === 'left' ? 1 :\r\n                        horizontal === 'center' ? centerColumnsCount :\r\n                            1,\r\n\r\n                    rowCount: vertical === 'header' ? 1 :\r\n                        vertical === 'body' ? bodyRowsCount :\r\n                            1,\r\n\r\n                    estimatedColumnWidth: horizontal === 'left' ? leftWidth :\r\n                        horizontal === 'center' ? this.props.estimatedColumnWidth :\r\n                            rightWidth,\r\n\r\n                    estimatedRowHeight: vertical === 'header' ? headerHeight :\r\n                        vertical === 'body' ? this.props.estimatedRowHeight :\r\n                            footerHeight,\r\n\r\n                    columnWidth: horizontal === 'left' ? null :\r\n                        horizontal === 'center' ? this.props.columnWidth :\r\n                            null,\r\n\r\n                    rowHeight: vertical === 'header' ? null :\r\n                        vertical === 'body' ? this.props.rowHeight :\r\n                            null,\r\n\r\n                    overscanColumnsCount: horizontal === 'left' ? 0 :\r\n                        horizontal === 'center' ? this.props.overscanColumnsCount :\r\n                            0,\r\n\r\n                    overscanRowCount: vertical === 'header' ? 0 :\r\n                        vertical === 'body' ? this.props.overscanRowCount :\r\n                            0\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    private getTilePosition(tileKey: TileKey): TilePosition {\r\n        const [vertical, horizontal] = tileKey.toLowerCase().split('_');\r\n        return {\r\n            vertical,\r\n            horizontal\r\n\r\n        } as TilePosition;\r\n    }\r\n\r\n    private getScrollableAreaHeight() {\r\n\r\n        const headerHeight = this.props.fixedHeaderHeight;\r\n        const footerHeight = this.props.fixedFooterHeight;\r\n\r\n        let bodyHeight: number;\r\n        const body = this.tiles[TileKey.BodyCenter]?.ref?.current;\r\n        if (body) {\r\n            bodyHeight = body.getScrollableHeight();\r\n        } else {\r\n            const bodyRows = this.props.rowCount - (headerHeight && 1) - (footerHeight && 1);\r\n            bodyHeight = bodyRows * this.props.estimatedRowHeight;\r\n        }\r\n\r\n        return bodyHeight + headerHeight + footerHeight;\r\n    }\r\n\r\n    private getScrollableAreaWidth() {\r\n\r\n        const leftWidth = this.props.fixedLeftWidth;\r\n        const rightWidth = this.props.fixedRightWidth;\r\n\r\n        let bodyWidth: number;\r\n        const body = this.tiles[TileKey.BodyCenter]?.ref?.current;\r\n        if (body) {\r\n            bodyWidth = body.getScrollableWidth();\r\n        } else {\r\n            const bodyColumns = this.props.columnCount - (leftWidth && 1) - (rightWidth && 1);\r\n            bodyWidth = bodyColumns * this.props.estimatedColumnWidth;\r\n        }\r\n\r\n        return bodyWidth + leftWidth + rightWidth;\r\n    }\r\n\r\n    private getVerticalScrollbarWidth(scrollableHeight: number): number {\r\n        const hasVerticalScrollbar = scrollableHeight > this.props.height;\r\n        return (hasVerticalScrollbar && DomUtils.scrollbarWidth) || 0;\r\n    }\r\n\r\n    private getHorizontalScrollbarWidth(scrollableWidth: number): number {\r\n        const hasHorizontalScrollbar = scrollableWidth > this.props.width;\r\n        return (hasHorizontalScrollbar && DomUtils.scrollbarWidth) || 0;\r\n    }\r\n\r\n    private getContainerHeight(scrollableHeight: number, scrollableWidth: number): number {\r\n        const horizontalScrollbarWidth = this.getHorizontalScrollbarWidth(scrollableWidth);\r\n        return Math.min(this.props.height, scrollableHeight + horizontalScrollbarWidth);\r\n    }\r\n\r\n    private getContainerWidth(scrollableHeight: number, scrollableWidth: number): number {\r\n        const verticalScrollbarWidth = this.getVerticalScrollbarWidth(scrollableHeight);\r\n        return Math.min(this.props.width, scrollableWidth + verticalScrollbarWidth);\r\n    }\r\n\r\n    /**\r\n     * We are only using classes for easier debug inspection...\r\n     */\r\n    private createClassName(className: string): string {\r\n        return `ReactTablize__VirtualGrid__${className}`;\r\n    }\r\n\r\n    //\r\n    // misc\r\n    //\r\n\r\n    private resetTiles() {\r\n        for (const tileKey of this.activeTiles) {\r\n            this.tiles[tileKey].ref.current.clearCache();\r\n        }\r\n        this.tiles = {};\r\n    }\r\n}","import * as React from 'react';\r\nimport { DocDir, IMap, SizeCallback } from '../types';\r\nimport { NormalizedScrollEvent } from '../utils';\r\nimport { RecycleManager } from './recycleManager';\r\nimport { VirtualCell } from './VirtualCell';\r\nimport { ElementInfo, WindowCalculator } from './windowCalculator';\r\n\r\nexport type Scrollability = 'vertical' | 'horizontal' | 'none' | 'both';\r\n\r\nexport interface RenderTileCellProps {\r\n    colIndex: number;\r\n    rowIndex: number;\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\nexport interface VirtualTileProps {\r\n    scrollability: Scrollability;\r\n    direction: DocDir;\r\n    height: number;\r\n    width: number;\r\n    position: 'absolute' | 'sticky';\r\n    top: number;\r\n    left: number;\r\n    float: 'right' | 'left';\r\n    columnCount: number;\r\n    rowCount: number;\r\n    estimatedColumnWidth: number;\r\n    estimatedRowHeight: number;\r\n    columnWidth?: SizeCallback;\r\n    rowHeight?: SizeCallback;\r\n    overscanColumnsCount?: number;\r\n    overscanRowCount?: number;\r\n\r\n    /**\r\n     * We are only using classes for easier debug inspection...\r\n     */\r\n    className: string;\r\n\r\n    children: (props: RenderTileCellProps) => React.ReactNode;\r\n}\r\n\r\nclass VirtualTileState {\r\n    public scrollTop = 0;\r\n    public scrollLeft = 0;\r\n}\r\n\r\nexport class VirtualTile extends React.PureComponent<VirtualTileProps, VirtualTileState> {\r\n\r\n    /**\r\n     * Make sure to return a constant number of elements, this is important for\r\n     * recycling purposes.\r\n     */\r\n    private minColumnsToRender = 0;\r\n    /**\r\n     * Make sure to return a constant number of elements, this is important for\r\n     * recycling purposes.\r\n     */\r\n    private minRowsToRender = 0;\r\n\r\n    private windowCalc = new WindowCalculator();\r\n    private recycler = new RecycleManager();\r\n\r\n    private containerElement = React.createRef<HTMLDivElement>();\r\n\r\n    constructor(props: VirtualTileProps) {\r\n        super(props);\r\n\r\n        this.state = new VirtualTileState();\r\n    }\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public scroll(e: NormalizedScrollEvent): void {\r\n\r\n        switch (this.props.scrollability) {\r\n\r\n            case 'both':\r\n                this.containerElement.current.scrollTop = e.scrollTop;\r\n                this.containerElement.current.scrollLeft = e.rawScrollLeft;\r\n                this.setState({ \r\n                    scrollTop: e.scrollTop, \r\n                    scrollLeft: e.normalizedScrollLeft \r\n                });\r\n                break;\r\n\r\n            case 'vertical':\r\n                this.containerElement.current.scrollTop = e.scrollTop;\r\n                this.setState({ scrollTop: e.scrollTop });\r\n                break;\r\n\r\n            case 'horizontal':\r\n                this.containerElement.current.scrollLeft = e.rawScrollLeft;\r\n                this.setState({ scrollLeft: e.normalizedScrollLeft });\r\n                break;\r\n\r\n            case 'none':\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Invalid ${nameof(this.props.scrollability)} value: '${this.props.scrollability}'.`);\r\n        }\r\n    }\r\n\r\n    public getScrollableHeight(): number {\r\n        return this.windowCalc.getEstimatedTotalSize('row', this.props.estimatedRowHeight, this.props.rowCount);\r\n    }\r\n\r\n    public getScrollableWidth(): number {\r\n        return this.windowCalc.getEstimatedTotalSize('column', this.props.estimatedColumnWidth, this.props.columnCount);\r\n    }\r\n\r\n    public clearCache(): void {\r\n        this.windowCalc = new WindowCalculator();\r\n        this.minColumnsToRender = 0;\r\n        this.minRowsToRender = 0;\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        const rightOrLeft = this.props.direction === 'rtl' ? 'right' : 'left';\r\n\r\n        return (\r\n            <div\r\n                ref={this.containerElement}\r\n                className={this.props.className + '_Container'}\r\n                style={{\r\n                    height: this.props.height,\r\n                    width: this.props.width,\r\n                    position: this.props.position,\r\n                    top: this.props.top,\r\n                    [rightOrLeft]: this.props.left,\r\n                    float: this.props.float,\r\n                    overflow: 'hidden'\r\n                }}\r\n            >\r\n                <div\r\n                    className={this.props.className + '_ScrollableArea'}\r\n                    style={{\r\n                        height: this.getScrollableHeight(),\r\n                        width: this.getScrollableWidth()\r\n                    }}\r\n                >\r\n                    {this.renderCells()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderCells() {\r\n\r\n        // get cell indexes to render\r\n\r\n        const columns = this.windowCalc.elementsInRange(\r\n            'column',\r\n            this.state.scrollLeft,\r\n            this.state.scrollLeft + this.props.width,\r\n            this.props.overscanColumnsCount,\r\n            this.props.estimatedColumnWidth,\r\n            this.props.columnWidth,\r\n            this.minColumnsToRender,\r\n            this.props.columnCount\r\n        );\r\n        const rows = this.windowCalc.elementsInRange(\r\n            'row',\r\n            this.state.scrollTop,\r\n            this.state.scrollTop + this.props.height,\r\n            this.props.overscanRowCount,\r\n            this.props.estimatedRowHeight,\r\n            this.props.rowHeight,\r\n            this.minRowsToRender,\r\n            this.props.rowCount\r\n        );\r\n\r\n        this.minColumnsToRender = columns.length;\r\n        this.minRowsToRender = rows.length;\r\n\r\n        // free unused stable keys before rendering\r\n\r\n        const originalKeys: IMap<boolean> = {};\r\n        for (const row of rows) {\r\n            for (const col of columns) {\r\n                const originalKey = this.getCellOriginalKey(col.index, row.index);\r\n                originalKeys[originalKey] = true;\r\n            }\r\n        }\r\n        this.recycler.freeUnusedKeys(originalKeys);\r\n\r\n        // render cells\r\n\r\n        const cellsByKey: IMap<React.ReactNode> = {};\r\n        for (const row of rows) {\r\n            for (const col of columns) {\r\n\r\n                const originalKey = this.getCellOriginalKey(col.index, row.index);\r\n                const stableKey = this.recycler.getStableKey(originalKey);\r\n\r\n                cellsByKey[stableKey] = this.renderCell(col, row, stableKey);\r\n            }\r\n        }\r\n\r\n        // sort the cells by key order (important for recycling)\r\n        // https://stackoverflow.com/questions/5525795/does-javascript-guarantee-object-property-order\r\n        const cells: React.ReactNode[] = [];\r\n        for (const key of Object.keys(cellsByKey)) {\r\n            cells.push(cellsByKey[key]);\r\n        }\r\n\r\n        return cells;\r\n    }\r\n\r\n    private renderCell(col: ElementInfo, row: ElementInfo, stableKey: React.Key): React.ReactNode {\r\n        return (\r\n            <VirtualCell\r\n                className={this.props.className + '_Cell'}\r\n                key={stableKey}\r\n                direction={this.props.direction}\r\n                height={row.size}\r\n                width={col.size}\r\n                top={row.position}\r\n                left={col.position}\r\n            >\r\n                {this.props.children({\r\n                    colIndex: col.index,\r\n                    rowIndex: row.index,\r\n                    height: row.size,\r\n                    width: col.size\r\n                })}\r\n            </VirtualCell>\r\n        );\r\n    }\r\n\r\n    //\r\n    // render helpers\r\n    //\r\n\r\n    private getCellOriginalKey(colIndex: number, rowIndex: number): React.Key {\r\n        return `${colIndex}, ${rowIndex}`;\r\n    }\r\n}","import * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { DocDir } from '../types';\r\nimport { SizeUtils } from '../utils';\r\nimport { VirtualGridProps, VirtualGrid } from './VirtualGrid';\r\n\r\nexport interface GridViewProps extends Omit<VirtualGridProps, 'height' | 'width'> {\r\n    height?: string | number;\r\n    width?: string | number;\r\n}\r\n\r\nexport class GridView extends React.PureComponent<GridViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n\r\n    private get direction(): DocDir {\r\n        return this.props.style?.direction === 'rtl' ? 'rtl' : 'ltr';\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <ErrorBoundary>\r\n                <div\r\n                    style={{\r\n                        direction: this.direction,\r\n                        width: '100%',\r\n                        ...this.props.style,\r\n                        ...SizeUtils.geElementHeights(this, GridView.defaultHeight)\r\n                    }}\r\n                >\r\n                    <AutoSizer>\r\n                        {({ width, height }) => (\r\n                            <VirtualGrid \r\n                                {...this.props}\r\n                                height={height}\r\n                                width={width}\r\n                            />\r\n                        )}\r\n                    </AutoSizer>\r\n                </div>\r\n            </ErrorBoundary >\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { CellRender } from './TableCell';\r\n\r\nexport class ColumnBodyProps {\r\n    public children?: CellRender;\r\n}\r\n\r\nexport class ColumnBody extends React.PureComponent<ColumnBodyProps> { }","import * as React from 'react';\r\nimport { TableCellProps } from './TableCell';\r\n\r\nexport interface ColumnHeadProps extends TableCellProps {\r\n}\r\n\r\nexport class ColumnHead extends React.PureComponent<ColumnHeadProps> { }","import * as React from 'react';\r\nimport { isNullOrUndefined } from '../utils';\r\nimport { RowRender } from './TableRow';\r\n\r\nexport class TableBodyProps {\r\n    public children?: RowRender;\r\n}\r\n\r\nexport class TableBody extends React.PureComponent<TableBodyProps> {\r\n\r\n    public static hasChildren(body: TableBody): boolean {\r\n        if (!body)\r\n            return false;\r\n\r\n        if (isNullOrUndefined(body.props.children))\r\n            return false;\r\n\r\n        if (typeof body.props.children === 'function')\r\n            return true;\r\n\r\n        if (Array.isArray(body.props.children))\r\n            return body.props.children.length > 0;\r\n\r\n        const childrenCount = React.Children.count(body.props.children);\r\n        return childrenCount > 0;\r\n    }\r\n}","import styled from '@emotion/styled';\r\nimport { DomUtils } from '../utils';\r\n\r\nexport const StyledTableView = styled.div`\r\n    width: 100%;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nexport const StyledTableHead = styled.div`\r\n    display: flex;\r\n    overflow-y: hidden;\r\n    \r\n    /* add padding to compensate for scrollbar width */\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-right')}: ${DomUtils.scrollbarWidth}px;\r\n`;\r\n\r\nexport const StyledTableBody = styled.div`\r\n    /* no style... */\r\n`;\r\n\r\nexport const StyledTableRow = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nexport const StyledTableCell = styled.div`\r\n    flex: 1;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n","import * as React from 'react';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { StyledTableCell } from './style';\r\n\r\nconst TableCellSymbol = '__ReactTablize__TableCell__';\r\n\r\nexport type CellContent = React.ReactNode;\r\n\r\nexport interface TableCellProps extends React.DivProps {\r\n    children?: CellContent;\r\n    visible?: boolean;\r\n}\r\n\r\nexport class TableCell extends React.PureComponent<TableCellProps> {\r\n\r\n    public static defaultProps: TableCellProps = {\r\n        [TableCellSymbol as any]: true\r\n    };\r\n\r\n    public static isTableCell(cell: unknown): cell is React.ReactElement<TableCellProps> {\r\n        return React.isValidElement(cell) && (cell.props as any)[TableCellSymbol];\r\n    }\r\n\r\n    public static getCellProps(cell: unknown): TableCellProps {\r\n        return (TableCell.isTableCell(cell) && cell.props) || {};\r\n    }\r\n\r\n    public static getCellContent(cell: unknown): CellContent {\r\n        return TableCell.isTableCell(cell) ?\r\n            cell.props.children :\r\n            cell;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <StyledTableCell {...this.props}>\r\n                <ErrorBoundary>\r\n                    {this.props.children}\r\n                </ErrorBoundary>\r\n            </StyledTableCell>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface CellRenderArgs {\r\n    rowIndex: number;\r\n    columnIndex: number;\r\n}\r\n\r\nexport type CellRender = (args: CellRenderArgs) => TableCell | CellContent;","import * as React from 'react';\r\nimport { RowContent } from './TableRow';\r\n\r\nexport interface TableHeadProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableHead extends React.PureComponent<TableHeadProps> { }","import * as React from 'react';\r\nimport { ReactUtils } from '../utils';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\nimport { TableBody } from './TableBody';\r\nimport { TableCell } from './TableCell';\r\nimport { TableHead } from './TableHead';\r\n\r\nexport class TableColumnProps {\r\n    public children?: [React.SubComp<ColumnHead>, React.SubComp<ColumnBody>];\r\n}\r\n\r\nexport class TableColumn extends React.PureComponent<TableColumnProps> { \r\n\r\n    public static createHeadFromColumns(columns: TableColumn[]): TableHead {\r\n\r\n        if (columns.every(col => !ReactUtils.singleChildOfType(col, ColumnHead)))\r\n            return null;\r\n\r\n        const head: any = (\r\n            <TableHead>\r\n                {columns.map(col => {\r\n                    const colHead = ReactUtils.singleChildOfType(col, ColumnHead);\r\n                    if (!colHead)\r\n                        return null;\r\n\r\n                    // eslint-disable-next-line react/jsx-key\r\n                    return <TableCell {...(colHead.props as any)} />;\r\n                })}\r\n            </TableHead>\r\n        );\r\n        return head;\r\n    }\r\n\r\n    public static createBodyFromColumns(columns: TableColumn[]): TableBody {\r\n        const body: any = (\r\n            <TableBody>\r\n                {(rowIndex: number) => columns.map((col, columnIndex) => {\r\n                    const cellRender = ReactUtils.singleChildOfType(col, ColumnBody).props.children;\r\n                    if (!cellRender)\r\n                        return null;\r\n                    return cellRender({ rowIndex, columnIndex });\r\n                })}\r\n            </TableBody>\r\n        );\r\n        return body;\r\n    }    \r\n}","import * as React from 'react';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { OneOrMore } from '../types';\r\nimport { StyledTableRow } from './style';\r\nimport { CellContent, TableCell } from './TableCell';\r\nconst flattenDeep = require('lodash.flattendeep');\r\n\r\nconst TableRowSymbol = '__ReactTablize__TableRow__';\r\n\r\n/**\r\n * One or more cells.\r\n */\r\nexport type RowContent = OneOrMore<React.SubComp<TableCell> | CellContent>;\r\n\r\nexport interface TableRowProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableRow extends React.PureComponent<TableRowProps> {\r\n\r\n    public static defaultProps: TableRowProps = {\r\n        [TableRowSymbol as any]: true\r\n    };\r\n\r\n    public static isTableRow(row: unknown): row is React.ReactElement<TableRowProps> {\r\n        return React.isValidElement(row) && (row.props as any)[TableRowSymbol];\r\n    }\r\n\r\n    public static getRowProps(row: unknown): TableRowProps {\r\n        return (TableRow.isTableRow(row) && row.props) || {};\r\n    }\r\n\r\n    public static getRowContent(row: unknown): RowContent {\r\n\r\n        let content: RowContent = row;\r\n\r\n        // row element\r\n        if (TableRow.isTableRow(content)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        if (Array.isArray(content)) {\r\n            content = flattenDeep(content);\r\n        }\r\n        return content;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <StyledTableRow {...this.props}>\r\n                <ErrorBoundary>\r\n                    {this.props.children}\r\n                </ErrorBoundary>\r\n            </StyledTableRow>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport type RowRender = (index: number) => React.SubComp<TableRow> | RowContent;","import { Theme } from '@emotion/styled';\r\nimport { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ErrorBoundary } from '../internal';\r\nimport { List, NonVirtualList, VirtualList } from '../list';\r\nimport { DocDir, OneOrMore, SizeCallback } from '../types';\r\nimport { asArray, isNullOrUndefined, ReactUtils, SizeUtils } from '../utils';\r\nimport { StyledTableBody, StyledTableHead, StyledTableView } from './style';\r\nimport { TableBody } from './TableBody';\r\nimport { TableCell } from './TableCell';\r\nimport { TableColumn } from './TableColumn';\r\nimport { TableHead } from './TableHead';\r\nimport { RowRender, TableRow, TableRowProps } from './TableRow';\r\n\r\ntype TableChildren_RowsSyntax = [React.SubComp<TableHead>, React.SubComp<TableBody>];\r\n\r\ntype TableChildren_ColumnsSyntax = OneOrMore<React.SubComp<TableColumn>>;\r\n\r\n/**\r\n * Applicable only on non-virtual tables.\r\n */\r\nexport const RowAutoSize = (): number => undefined;\r\n\r\nexport type RowKeyCallback = (index: number) => React.Key;\r\n\r\nexport class TableViewProps {\r\n\r\n    //\r\n    // main props\r\n    //\r\n\r\n    public isVirtual?: boolean;\r\n    public rowCount: number;\r\n    public rowKey?: RowKeyCallback;\r\n    public children?: TableChildren_RowsSyntax | TableChildren_ColumnsSyntax;\r\n\r\n    //\r\n    // appearance\r\n    //\r\n\r\n    public dir?: DocDir = 'ltr';\r\n    public className?: string;\r\n    public style?: React.CSSProperties;\r\n    /**\r\n     * Row height in pixels.  \r\n     * \r\n     * Default: 50\r\n     */\r\n    public rowHeight?: number | SizeCallback = 50;\r\n    public emptyMessage?= \"No Items to Display\";\r\n    public customScrollbars?: boolean;\r\n\r\n    //\r\n    // behavior\r\n    //\r\n\r\n    public keyScroll?: boolean;\r\n\r\n    //\r\n    // virtualization\r\n    //\r\n\r\n    /**\r\n     * Number of extra buffer items to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 20\r\n     */\r\n    public overscanCount?= 20;\r\n}\r\n\r\nexport class TableView extends React.PureComponent<TableViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n    public static readonly defaultHeadHeight = '40px';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = TableHead;\r\n\r\n    public static Body = TableBody;\r\n\r\n    public static Row = TableRow;\r\n\r\n    public static Cell = TableCell;\r\n\r\n    public static Column = TableColumn;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps = new TableViewProps();\r\n\r\n    private tableElement = React.createRef<List>();\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public refresh() {\r\n        if (this.tableElement.current) {\r\n            this.tableElement.current.refresh();\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        // head & body\r\n        let head = ReactUtils.singleChildOfType(this, TableHead);\r\n        let body = ReactUtils.singleChildOfType(this, TableBody);\r\n        const columns = ReactUtils.childrenOfType(this, TableColumn);\r\n\r\n        // columns\r\n        if (columns && columns.length) {\r\n            if (head || body)\r\n                throw new Error('Can not specify head and/or body when specifying table columns.');\r\n\r\n            head = TableColumn.createHeadFromColumns(columns);\r\n            body = TableColumn.createBodyFromColumns(columns);\r\n        }\r\n\r\n        // render\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <StyledTableView\r\n                        className={this.props.className}\r\n                        style={{\r\n                            ...this.props.style,\r\n                            ...SizeUtils.geElementHeights(this, TableView.defaultHeight)\r\n                        }}\r\n                    >\r\n                        {this.renderTableHead(head)}\r\n                        {this.renderTableBody(head, body)}\r\n                    </StyledTableView>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderTableHead(head: TableHead) {\r\n\r\n        if (!head)\r\n            return null;\r\n\r\n        const { children, ...divProps } = head.props;\r\n\r\n        return (\r\n            <StyledTableHead\r\n                {...divProps}\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    ...head.props.style,\r\n                    ...SizeUtils.geElementHeights(head, TableView.defaultHeadHeight)\r\n                }}\r\n            >\r\n                {React.Children.map(children, this.renderCell)}\r\n            </StyledTableHead>\r\n        );\r\n    }\r\n\r\n    private renderTableBody(head: TableHead, body: TableBody) {\r\n\r\n        const bodyHeights = SizeUtils.getBodyHeights(this, head, {\r\n            total: TableView.defaultHeight,\r\n            head: TableView.defaultHeadHeight\r\n        });\r\n\r\n        return (\r\n            <StyledTableBody\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    ...bodyHeights\r\n                }}\r\n            >\r\n                <ErrorBoundary>\r\n                    {this.renderTableRows(body)}\r\n                </ErrorBoundary>\r\n            </StyledTableBody>\r\n        );\r\n    }\r\n\r\n    private renderTableRows(body: TableBody) {\r\n\r\n        // placeholder\r\n        if (this.props.rowCount === 0 || !TableBody.hasChildren(body)) {\r\n            return this.renderItemsPlaceHolder();\r\n        }\r\n\r\n        // table rows\r\n        const rowRender = body.props.children;\r\n        const ListComponent = this.getListComponent();\r\n        return (\r\n            <AutoSizer>\r\n                {({ width, height }) => (\r\n                    <ListComponent\r\n                        ref={this.tableElement as React.Ref<any>}\r\n                        style={{ outline: 'none' }}\r\n                        dir={this.props.dir}\r\n                        layout=\"vertical\"\r\n                        height={height}\r\n                        width={width}\r\n                        itemCount={this.props.rowCount}\r\n                        itemSize={this.getRowHeight}\r\n                        overscan={this.props.overscanCount}\r\n                        customScrollbar={this.props.customScrollbars}\r\n                    >\r\n                        {index => this.renderBodyRow(index, rowRender)}\r\n                    </ListComponent>\r\n                )}\r\n            </AutoSizer>\r\n        );\r\n    }\r\n\r\n    private renderBodyRow(index: number, rowRender: RowRender) {\r\n        if (!rowRender)\r\n            return null;\r\n\r\n        const row = rowRender(index);\r\n        let rowContent = TableRow.getRowContent(row);\r\n        rowContent = asArray(rowContent).map(this.renderCell);\r\n\r\n        // already a row - just adjust the content\r\n        if (TableRow.isTableRow(row)) {\r\n            const rowKey = this.getRowKey(row.props, index);\r\n            return React.cloneElement(row, { key: rowKey }, rowContent);\r\n        }\r\n\r\n        // not a row - wrap content with row element\r\n        else {\r\n            const rowKey = this.getRowKey({}, index);\r\n            return (\r\n                <TableRow key={rowKey}>\r\n                    {rowContent}\r\n                </TableRow>\r\n            );\r\n        }\r\n    }\r\n\r\n    private renderCell(cell: unknown, columnIndex: number) {\r\n        const cellProps = TableCell.getCellProps(cell);\r\n        if (cellProps.visible === false)\r\n            return null;\r\n\r\n        // already a cell - just add key and return\r\n        if (TableCell.isTableCell(cell)) {\r\n            return React.cloneElement(cell, { key: columnIndex });\r\n        }\r\n\r\n        // not a cell - wrap content with cell element\r\n        return (\r\n            <TableCell key={columnIndex}>\r\n                {cell}\r\n            </TableCell>\r\n        );\r\n    }\r\n\r\n    private renderItemsPlaceHolder() {\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {this.props.emptyMessage}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //\r\n    // helpers\r\n    //\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir\r\n        };\r\n    }\r\n\r\n    private getListComponent() {\r\n        return this.props.isVirtual !== false ?\r\n            VirtualList :\r\n            NonVirtualList;\r\n    }\r\n\r\n    private getRowKey(rowProps: TableRowProps, index: number): React.Key {\r\n\r\n        if (!isNullOrUndefined(rowProps.key))\r\n            return rowProps.key;\r\n\r\n        if (typeof this.props.rowKey === 'function')\r\n            return this.props.rowKey(index);\r\n\r\n        return index;\r\n    }\r\n\r\n    private getRowHeight = (rowIndex: number): number => {\r\n        if (typeof this.props.rowHeight === 'function')\r\n            return this.props.rowHeight(rowIndex);\r\n        return this.props.rowHeight;\r\n    };\r\n}","export * from './grid';\r\nexport * from './table';\r\n"],"sourceRoot":""}