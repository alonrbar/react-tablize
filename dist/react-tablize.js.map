{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\ErrorBoundary.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\keys.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\reactUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\sizeUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridFooter.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableColumn.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableRow.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\CustomScrollbars.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\styled.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\index.ts","external \"@emotion/styled\"","external \"@emotion/styled-base\"","external \"emotion-theming\"","external \"lodash.flattendeep\"","external \"react\"","external \"react-custom-scrollbars\"","external \"react-dom\"","external \"react-virtualized-auto-sizer\"","external \"react-window\""],"names":["ErrorBoundaryState","ErrorBoundary","props","state","hasError","error","errorInfo","setState","console","children","undefined","React","Keys","ReactUtils","elem","type","prototype","Object","isPrototypeOf","call","createPropsToAdd","map","child","index","propsToAdd","parentElement","Array","isArray","childrenArray","filter","elementInstanceOf","matchingChildren","childrenOfType","length","Error","name","SizeUtils","component","defaultHeight","style","height","minHeight","maxHeight","cssSizeString","table","head","defaultHeights","totalHeights","geElementHeights","total","headHeight","getHeadHeight","bodyHeights","size","Number","isFinite","_scrollbarWidth","div","document","createElement","width","overflow","position","top","body","appendChild","offsetWidth","clientWidth","removeChild","isNullOrUndefined","val","asArray","randomInt","min","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","Math","floor","random","range","count","keys","GridBody","GridCellSymbol","GridCell","cell","cellElemChildren","cellElemProps","content","GridFooter","GridHead","tableBorder","StyledGridView","StyledGridCell","StyledGridHead","theme","dir","scrollbarWidth","StyledGridBody","FrozenColumnsWrapper","FrozenColumns","VariableSizeGrid","GridView","e","scrollTop","scrollLeft","headList","current","scrollTo","freezedColumnsGrid","mainBodyGrid","colIndex","columnWidth","rowHeightProp","rowIndex","columnCount","divProps","getTheme","assign","direction","renderHead","renderBody","renderFooter","singleChildOfType","cellRender","freezeColumns","defaultHeadHeight","display","columnIndex","renderCell","isScrolling","getFrozenColumnsWidth","getColumnWidth","overscanColumnsCount","useIsScrolling","rowCount","rowHeight","heights","getBodyHeights","frozenColumnsWidth","getRowHeight","overscanRowsCount","handleFrozenColumnsScroll","handleMainGridScroll","args","extract","cellProps","cellContent","footer","reduce","a","b","ColumnBodyProps","ColumnBody","ColumnHead","TableBodyProps","TableBody","TableCell","TableColumnProps","TableColumn","TableHead","TableRow","CustomScrollbarsInner","refSetter","forwardedRef","view","onScroll","CustomScrollbars","ref","displayName","styledWithTheme","StyledTableView","styled","StyledTableHead","TableHeadRow","hairlines","TableHeadCell","StyledTableBody","TableBodyRow","TableBodyCell","flattenDeep","require","scrollKeys","PageUp","PageDown","End","Home","TableViewProps","TableView","window","addEventListener","scrollByKey","removeEventListener","key","tableElement","tableInnerRef","tableOuterRef","scrollElement","customScrollbars","ReactDOM","currentOffset","bodyHeight","clientHeight","pageSize","minOffset","maxOffset","offsetByKey","setScrollOffset","offset","resetAfterIndex","forceUpdate","columns","createHeadFromColumns","createBodyFromColumns","className","getKeyScrollProps","renderTableHead","renderTableBody","headCell","getHeadCellProps","visible","getHeadCellContent","renderTableRows","hasBody","renderItemsPlaceHolder","rowRender","isVirtual","renderTableRows_virtual","renderTableRows_nonVirtual","outline","getOuterElementType","overscanCount","renderBodyRow","fill","_","row","getRowProps","rowStyle","rowProps","rowKey","getRowKey","rowContent","getRowContent","getCellProps","getCellContent","textAlign","emptyMessage","keyScroll","onMouseEnter","registerKeyHandlers","onMouseLeave","removeKeyHandlers","onKeyDown","every","col","colHead","childrenCount","isReactFragment"],"mappings":"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","file":"react-tablize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-tablize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-tablize\"] = factory();\n\telse\n\t\troot[\"react-tablize\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as React from 'react';\r\n\r\nclass ErrorBoundaryState {\r\n    public hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<{}, ErrorBoundaryState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n        this.setState({ hasError: true });\r\n        console.error(error);  // eslint-disable-line no-console\r\n    }\r\n\r\n    public render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <span>X</span>\r\n            );\r\n        }\r\n        return this.props.children !== undefined ? this.props.children : null;\r\n    }\r\n}","export enum Keys {\r\n    PageUp = 'PageUp',\r\n    PageDown = 'PageDown',\r\n    End ='End',\r\n    Home ='Home',\r\n}","import * as React from 'react';\r\n\r\nexport class ReactUtils {\r\n\r\n    //\r\n    // props\r\n    //\r\n\r\n    public static getProps<T>(elem: any): T {\r\n        return (elem && (elem as any).props) || {};\r\n    }\r\n\r\n    //\r\n    // react element\r\n    //\r\n\r\n    public static elementInstanceOf<T>(elem: any, type: Constructor<T>): elem is T {\r\n        if (!elem)\r\n            return false;\r\n        if (!elem.type)\r\n            return false;\r\n\r\n        // https://stackoverflow.com/questions/39387405/using-instanceof-to-test-for-base-class-of-a-react-component\r\n        // https://stackoverflow.com/questions/14486110/how-to-check-if-a-javascript-class-inherits-another-without-creating-an-obj\r\n        // https://stackoverflow.com/questions/2464426/whats-the-difference-between-isprototypeof-and-instanceof-in-javascript\r\n\r\n        return elem.type === type ||\r\n            elem.type.prototype instanceof type ||\r\n            Object.prototype.isPrototypeOf.call(type, elem.type);\r\n    }\r\n\r\n    public static isReactFragment(elem: any): boolean {\r\n        return React.isValidElement(elem) && elem.type === React.Fragment;\r\n    }\r\n\r\n    //\r\n    // react children\r\n    //\r\n\r\n    public static addPropsToChildren(children: React.ReactNode, createPropsToAdd: (child: React.ReactElement<any>, index?: number) => any) {\r\n\r\n        // https://stackoverflow.com/questions/32370994/how-to-pass-props-to-this-props-children\r\n        return React.Children.map(children, (child: React.ReactElement<any>, index: number) => {\r\n            const propsToAdd = createPropsToAdd(child, index);\r\n            return React.cloneElement(child, propsToAdd);\r\n        });\r\n    }\r\n\r\n    public static childrenArray(parentElement: any): React.ReactChild[] {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (Array.isArray(children))\r\n            return children;\r\n\r\n        return React.Children.map(children, child => child);\r\n    }\r\n\r\n    public static childrenOfType<T>(parentElement: any, type: Constructor<T>): T[] {\r\n        const children = ReactUtils.childrenArray(parentElement);\r\n        if (!children)\r\n            return null;\r\n        return children.filter(child => ReactUtils.elementInstanceOf(child, type)) as any;\r\n    }\r\n\r\n    /**\r\n     * Return the only child that matches the given type.  \r\n     * If more than one child matches an error is thrown.  \r\n     * \r\n     * Notice that this function gives no indication of the total number of\r\n     * children, only the number of matching children.\r\n     * @param parentElement \r\n     * @param type \r\n     */\r\n    public static singleChildOfType<T>(parentElement: any, type: Constructor<T>): T {\r\n        const matchingChildren = ReactUtils.childrenOfType(parentElement, type);\r\n        if (!matchingChildren || !matchingChildren.length)\r\n            return null;\r\n\r\n        if (matchingChildren.length > 1)\r\n            throw new Error(`Only one ${type.name} child element is allowed.`);\r\n\r\n        return matchingChildren[0] as any;\r\n    }\r\n\r\n    // tslint:disable-next-line:ban-types\r\n    public static singleFunctionChild(parentElement: any): Function {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (typeof parentElement.props.children !== 'function')\r\n            return null;\r\n\r\n        return children;\r\n    }\r\n}","\r\nexport interface ElementHeights {\r\n    height: string | number;\r\n    minHeight: string | number;\r\n    maxHeight: string | number;\r\n}\r\n\r\nexport interface TableHeights {\r\n    total: string | number;\r\n    head: string | number;\r\n}\r\n\r\nexport type ComponentWithStyle = React.Component<{ style?: React.CSSProperties }>;\r\n\r\nexport class SizeUtils {\r\n\r\n    public static get scrollbarWidth(): number {\r\n        if (this._scrollbarWidth === null) {\r\n            \r\n            // https://github.com/sonicdoe/measure-scrollbar/blob/master/index.js\r\n\r\n            const div = document.createElement('div');\r\n\r\n            div.style.width = '100px';\r\n            div.style.height = '100px';\r\n            div.style.overflow = 'scroll';\r\n            div.style.position = 'absolute';\r\n            div.style.top = '-9999px';\r\n\r\n            document.body.appendChild(div);\r\n\r\n            this._scrollbarWidth = div.offsetWidth - div.clientWidth;\r\n\r\n            document.body.removeChild(div);\r\n        }\r\n\r\n        return this._scrollbarWidth;\r\n    }\r\n\r\n    private static _scrollbarWidth: number = null;\r\n\r\n    public static geElementHeights(component: ComponentWithStyle, defaultHeight: number | string): ElementHeights {\r\n        const style = (component && component.props.style) || {};\r\n\r\n        let height = style.height;\r\n        let minHeight = style.minHeight;\r\n        let maxHeight = style.maxHeight;\r\n\r\n        if (height === undefined && minHeight === undefined) {\r\n            height = defaultHeight;\r\n        }\r\n\r\n        height = this.cssSizeString(height);\r\n        minHeight = this.cssSizeString(minHeight);\r\n        maxHeight = this.cssSizeString(maxHeight);\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    public static getBodyHeights(table: ComponentWithStyle, head: ComponentWithStyle, defaultHeights: TableHeights): ElementHeights {\r\n\r\n        const totalHeights = this.geElementHeights(table, defaultHeights.total);\r\n        const headHeight = this.getHeadHeight(head, defaultHeights.head);\r\n        const bodyHeights = this.geElementHeights(table, undefined);\r\n\r\n        let height = bodyHeights.height || totalHeights.height;\r\n        let minHeight = bodyHeights.minHeight || totalHeights.minHeight;\r\n        let maxHeight = bodyHeights.maxHeight || totalHeights.maxHeight;\r\n\r\n        if (headHeight) {\r\n            height = `calc(${height} - ${headHeight})`;\r\n            if (minHeight)\r\n                minHeight = `calc(${minHeight} - ${headHeight})`;\r\n            if (maxHeight)\r\n                maxHeight = `calc(${maxHeight} - ${headHeight})`;\r\n        }\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    private static getHeadHeight(head: ComponentWithStyle, defaultHeight: string | number): string | number {\r\n        if (head) {\r\n            return this.geElementHeights(head, defaultHeight).height;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public static cssSizeString(size: any): string {\r\n        if (Number.isFinite(size))\r\n            return size + 'px';\r\n        return size;\r\n    }\r\n}","\r\nexport function isNullOrUndefined(val: any): boolean {\r\n    return val === null || val === undefined;\r\n}\r\n\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n    if (Array.isArray(val))\r\n        return val;\r\n\r\n    return [val];\r\n}\r\n\r\nexport function randomInt(min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER): number {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport function range(count: number): number[] {\r\n    // https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp\r\n    return [...Array(count || 0).keys()];\r\n}","export * from './ErrorBoundary';\r\nexport * from './keys';\r\nexport * from './reactUtils';\r\nexport * from './sizeUtils';\r\nexport * from './utils';\r\n","import * as React from 'react';\r\n\r\nexport interface BodyCellRenderArgs {\r\n    rowIndex: number; \r\n    columnIndex: number;\r\n    isScrolling?: boolean;\r\n}\r\n\r\nexport type BodyCellRender = (args: BodyCellRenderArgs) => React.ReactNode;\r\n\r\nexport interface GridBodyProps extends React.DivProps {\r\n    rowCount: number;\r\n    /**\r\n     * Body row height.  \r\n     * To adjust the head height set the head `style` prop.\r\n     */\r\n    rowHeight: number | SizeCallback;\r\n    children?: BodyCellRender;\r\n}\r\n\r\nexport class GridBody extends React.PureComponent<GridBodyProps> { }","import * as React from 'react';\r\nimport { randomInt } from '../utils/utils';\r\n\r\nconst GridCellSymbol = '__ReactTablize__GridCell__' + randomInt(0);\r\n\r\nexport interface GridCellExtractResult {\r\n    props: GridCellProps;\r\n    content: React.ReactNode;\r\n}\r\n\r\nexport interface GridCellProps extends React.DivProps {\r\n}\r\n\r\nexport class GridCell extends React.PureComponent<GridCellProps> {\r\n\r\n    public static defaultProps: GridCellProps = {\r\n        [GridCellSymbol]: true\r\n    };\r\n\r\n    public static extract(cell: any): GridCellExtractResult {\r\n        if (cell && cell.props && cell.props[GridCellSymbol]) {\r\n            const { children: cellElemChildren, ...cellElemProps } = cell.props;\r\n            return {\r\n                props: cellElemProps,\r\n                content: cellElemChildren\r\n            };\r\n        } else {\r\n            return {\r\n                props: {},\r\n                content: cell\r\n            };\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return this.props.children;\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport interface GridFooterProps extends React.DivProps {    \r\n    children?: (columnIndex: number) => React.ReactNode;\r\n}\r\n\r\nexport class GridFooter extends React.PureComponent<GridFooterProps> { }","import * as React from 'react';\r\n\r\nexport interface HeadCellRenderArgs {\r\n    columnIndex: number;\r\n    isScrolling?: boolean;\r\n}\r\n\r\nexport type HeadCellRender = (args: HeadCellRenderArgs) => React.ReactNode;\r\n\r\nexport interface GridHeadProps extends React.DivProps {    \r\n    children?: HeadCellRender;\r\n}\r\n\r\nexport class GridHead extends React.PureComponent<GridHeadProps> { }","import styled from '@emotion/styled';\r\nimport { VariableSizeGrid } from 'react-window';\r\nimport { SizeUtils } from '../utils';\r\n\r\n//\r\n// constants\r\n//\r\n\r\nconst tableBorder = '1px solid #ddd';\r\n\r\n//\r\n// grid\r\n//\r\n\r\nexport const StyledGridView = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nexport const StyledGridCell = styled.div`\r\n    display: flex;\r\n\r\n    height: 100%;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    align-items: center;\r\n    vertical-align: middle;\r\n`;\r\n\r\n//\r\n// head\r\n//\r\n\r\nexport const StyledGridHead = styled.div`\r\n    display: flex;\r\n\r\n    font-weight: bold;\r\n    vertical-align: middle;\r\n\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-right')}: ${SizeUtils.scrollbarWidth}px;\r\n    border-bottom: ${tableBorder};\r\n\r\n    & ${StyledGridCell} {\r\n        align-items: flex-end;\r\n    }\r\n`;\r\n\r\n//\r\n// body\r\n//\r\n\r\nexport const StyledGridBody = styled.div`\r\n`;\r\n\r\n// https://stackoverflow.com/questions/16670931/hide-scroll-bar-but-while-still-being-able-to-scroll\r\nexport const FrozenColumnsWrapper = styled.div`\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const FrozenColumns = styled(VariableSizeGrid)`\r\n    overflow-y: scroll;\r\n    box-sizing: content-box;\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-right')}: ${SizeUtils.scrollbarWidth}px;\r\n`;","import { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { GridOnScrollProps, VariableSizeGrid, VariableSizeList } from 'react-window';\r\nimport { Theme } from '../styled';\r\nimport { ErrorBoundary, range, ReactUtils, SizeUtils } from '../utils';\r\nimport { BodyCellRender, GridBody } from './GridBody';\r\nimport { GridCell } from './GridCell';\r\nimport { GridFooter } from './GridFooter';\r\nimport { GridHead, HeadCellRender } from './GridHead';\r\nimport { FrozenColumns, FrozenColumnsWrapper, StyledGridBody, StyledGridCell, StyledGridHead, StyledGridView } from './style';\r\n\r\ntype GridChildren_FullSyntax = [React.SubComp<GridHead>, React.SubComp<GridBody>];\r\ntype GridChildren_PartialSyntax = React.SubComp<GridHead> | React.SubComp<GridBody>;\r\ntype GridChildren = GridChildren_FullSyntax | GridChildren_PartialSyntax | BodyCellRender;\r\n\r\ninterface RenderHeadCellArgs {\r\n    cellRender: HeadCellRender;\r\n    columnIndex: number;\r\n    isScrolling: boolean;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\ninterface RenderBodyCellArgs {\r\n    cellRender: BodyCellRender;\r\n    rowIndex: number;\r\n    columnIndex: number;\r\n    isScrolling: boolean;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport interface GridViewProps extends React.DivProps {\r\n\r\n    columnCount: number;\r\n    columnWidth: number | SizeCallback;\r\n    /**\r\n     * Number of columns to freeze (always the first columns).\r\n     */\r\n    freezeColumns?: number;\r\n\r\n    dir?: DocDir;\r\n\r\n    /**\r\n     * Number of extra rows to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 1\r\n     */\r\n    overscanRowsCount?: number;\r\n    /**\r\n     * Number of extra columns to render before/after the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 1\r\n     */\r\n    overscanColumnsCount?: number;\r\n    /**\r\n     * Adds an additional isScrolling parameter to the children render function.\r\n     * This parameter can be used to show a placeholder row or column while the\r\n     * list is being scrolled.\r\n     *\r\n     * Note that using this parameter will result in an additional render call\r\n     * after scrolling has stopped (when isScrolling changes from true to\r\n     * false).\r\n     */\r\n    useIsScrolling?: boolean;\r\n\r\n    children?: GridChildren;\r\n}\r\n\r\nexport class GridView extends React.PureComponent<GridViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n    public static readonly defaultHeadHeight = '40px';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = GridHead;\r\n\r\n    public static Body = GridBody;\r\n\r\n    // TODO: public static Footer = GridFooter;\r\n\r\n    public static Cell = GridCell;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps: Partial<GridViewProps> = {\r\n        overscanRowsCount: 1,\r\n        overscanColumnsCount: 1\r\n    };\r\n\r\n    private headList = React.createRef<VariableSizeList>();\r\n    private mainBodyGrid = React.createRef<VariableSizeGrid>();\r\n    private freezedColumnsGrid = React.createRef<VariableSizeGrid>();\r\n\r\n    public render() {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { columnCount, columnWidth, children, ...divProps } = this.props;\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <StyledGridView\r\n                        {...divProps}\r\n                        style={Object.assign(\r\n                            { direction: this.props.dir },\r\n                            this.props.style,\r\n                            SizeUtils.geElementHeights(this, GridView.defaultHeight))\r\n                        }\r\n                    >\r\n                        {this.renderHead()}\r\n                        {this.renderBody()}\r\n                        {this.renderFooter()}\r\n                    </StyledGridView>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderHead() {\r\n        const head = ReactUtils.singleChildOfType(this, GridHead);\r\n        if (!head)\r\n            return null;\r\n\r\n        const { children: cellRender, ...divProps } = head.props;\r\n        const freezeColumns = this.props.freezeColumns || 0;\r\n\r\n        return (\r\n            <StyledGridHead\r\n                {...divProps}\r\n                style={Object.assign({}, head.props.style, SizeUtils.geElementHeights(head, GridView.defaultHeadHeight))}\r\n            >\r\n                <ErrorBoundary>\r\n                    <AutoSizer>\r\n                        {({ width, height }) => (\r\n                            <div style={{ width, height, display: 'flex' }}>\r\n\r\n                                {/* frozen first columns */}\r\n                                {range(freezeColumns).map(columnIndex => this.renderCell({\r\n                                    cellRender,\r\n                                    rowIndex: 0,\r\n                                    columnIndex,\r\n                                    isScrolling: false\r\n                                }))}\r\n\r\n                                {/* main columns */}\r\n                                <VariableSizeList\r\n                                    ref={this.headList}\r\n                                    direction={this.props.dir}\r\n                                    style={{ overflow: 'hidden' }}\r\n                                    layout=\"horizontal\"\r\n                                    height={height}\r\n                                    width={width - this.getFrozenColumnsWidth()}\r\n                                    itemCount={this.props.columnCount - freezeColumns}\r\n                                    itemSize={colIndex => this.getColumnWidth(colIndex + freezeColumns)}\r\n                                    overscanCount={this.props.overscanColumnsCount}\r\n                                    useIsScrolling={this.props.useIsScrolling}\r\n                                >\r\n                                    {({ index, style, isScrolling }) =>\r\n                                        this.renderCell({\r\n                                            cellRender,\r\n                                            rowIndex: 0,\r\n                                            columnIndex: index + freezeColumns,\r\n                                            isScrolling,\r\n                                            style\r\n                                        })\r\n                                    }\r\n                                </VariableSizeList>\r\n\r\n                            </div>\r\n                        )}\r\n                    </AutoSizer>\r\n                </ErrorBoundary>\r\n            </StyledGridHead>\r\n        );\r\n    }\r\n\r\n    private renderBody() {\r\n\r\n        const body = ReactUtils.singleChildOfType(this, GridBody);\r\n        if (!body)\r\n            return null;\r\n        const { children: cellRender, rowCount, rowHeight, ...divProps } = body.props;\r\n\r\n        const head = ReactUtils.singleChildOfType(this, GridHead);\r\n        const heights = SizeUtils.getBodyHeights(this, head, {\r\n            total: GridView.defaultHeight,\r\n            head: GridView.defaultHeadHeight\r\n        });\r\n        const freezeColumns = this.props.freezeColumns || 0;\r\n        const frozenColumnsWidth = this.getFrozenColumnsWidth();\r\n\r\n        return (\r\n            <StyledGridBody\r\n                {...divProps}\r\n                style={Object.assign({}, divProps.style, heights)}\r\n            >\r\n                <ErrorBoundary>\r\n                    <AutoSizer>\r\n                        {({ height, width }) => (\r\n                            <div style={{ width, height, display: 'flex' }}>\r\n\r\n                                {/* frozen first columns */}\r\n                                <FrozenColumnsWrapper\r\n                                    style={{\r\n                                        height: height - SizeUtils.scrollbarWidth,\r\n                                        width: frozenColumnsWidth\r\n                                    }}\r\n                                >\r\n                                    <FrozenColumns\r\n                                        ref={this.freezedColumnsGrid}\r\n                                        direction={this.props.dir}\r\n                                        height={height - SizeUtils.scrollbarWidth}\r\n                                        width={frozenColumnsWidth}\r\n                                        columnCount={freezeColumns}\r\n                                        columnWidth={this.getColumnWidth}\r\n                                        rowCount={rowCount}\r\n                                        rowHeight={this.getRowHeight(rowHeight)}\r\n                                        overscanRowsCount={this.props.overscanRowsCount}\r\n                                        useIsScrolling={this.props.useIsScrolling}\r\n                                        onScroll={this.handleFrozenColumnsScroll}\r\n                                    >\r\n                                        {({ rowIndex, columnIndex, style, isScrolling }) =>\r\n                                            this.renderCell({\r\n                                                cellRender,\r\n                                                rowIndex,\r\n                                                columnIndex,\r\n                                                isScrolling,\r\n                                                style\r\n                                            })\r\n                                        }\r\n                                    </FrozenColumns>\r\n                                </FrozenColumnsWrapper>\r\n\r\n                                {/* main body grid */}\r\n                                <VariableSizeGrid\r\n                                    ref={this.mainBodyGrid}\r\n                                    direction={this.props.dir}\r\n                                    height={height}\r\n                                    width={width - frozenColumnsWidth}\r\n                                    columnCount={this.props.columnCount - freezeColumns}\r\n                                    columnWidth={colIndex => this.getColumnWidth(colIndex + freezeColumns)}\r\n                                    rowCount={rowCount}\r\n                                    rowHeight={this.getRowHeight(rowHeight)}\r\n                                    onScroll={this.handleMainGridScroll}\r\n                                    overscanRowsCount={this.props.overscanRowsCount}\r\n                                    overscanColumnsCount={this.props.overscanColumnsCount}\r\n                                    useIsScrolling={this.props.useIsScrolling}\r\n                                >\r\n                                    {({ rowIndex, columnIndex, style, isScrolling }) =>\r\n                                        this.renderCell({\r\n                                            cellRender,\r\n                                            rowIndex,\r\n                                            columnIndex: columnIndex + freezeColumns,\r\n                                            isScrolling,\r\n                                            style\r\n                                        })\r\n                                    }\r\n                                </VariableSizeGrid>\r\n                            </div>\r\n                        )}\r\n                    </AutoSizer>\r\n                </ErrorBoundary>\r\n            </StyledGridBody>\r\n        );\r\n    }\r\n\r\n    private renderCell(args: RenderBodyCellArgs) {\r\n\r\n        const {\r\n            rowIndex,\r\n            columnIndex,\r\n            cellRender,\r\n            isScrolling,\r\n            style\r\n        } = args;\r\n\r\n        // create the cell\r\n        const cell: any = cellRender({ rowIndex, columnIndex, isScrolling });\r\n\r\n        // get cell props & content\r\n        const { props: cellProps, content: cellContent } = GridCell.extract(cell);\r\n        const columnWidth = this.getColumnWidth(columnIndex);\r\n\r\n        // render\r\n        return (\r\n            <StyledGridCell\r\n                key={`[ ${rowIndex}, ${columnIndex} ]`}\r\n                {...cellProps}\r\n                style={Object.assign({ width: columnWidth }, cellProps.style, style)}\r\n            >\r\n                <ErrorBoundary>\r\n                    {cellContent}\r\n                </ErrorBoundary>\r\n            </StyledGridCell>\r\n        );\r\n    }\r\n\r\n    private renderFooter() {\r\n        const footer = ReactUtils.singleChildOfType(this, GridFooter);\r\n        if (!footer)\r\n            return null;\r\n\r\n        return (\r\n            <span>Footer</span>\r\n        );\r\n    }\r\n\r\n    //\r\n    // event handlers\r\n    //\r\n\r\n    private handleMainGridScroll = (e: GridOnScrollProps) => {\r\n        const { scrollTop, scrollLeft } = e;\r\n\r\n        // synchronize head\r\n        if (this.headList.current) {\r\n            this.headList.current.scrollTo(scrollLeft);\r\n        }\r\n\r\n        // synchronize frozen body columns\r\n        if (this.freezedColumnsGrid.current) {\r\n            this.freezedColumnsGrid.current.scrollTo({ scrollTop } as any);\r\n        }\r\n    }\r\n\r\n    private handleFrozenColumnsScroll = (e: GridOnScrollProps) => {\r\n        const { scrollTop } = e;\r\n\r\n        // synchronize main grid\r\n        if (this.mainBodyGrid.current) {\r\n            this.mainBodyGrid.current.scrollTo({ scrollTop } as any);\r\n        }\r\n    }\r\n\r\n    //\r\n    // helpers\r\n    //\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir\r\n        };\r\n    }\r\n\r\n    private getFrozenColumnsWidth(): number {\r\n        if (!this.props.freezeColumns)\r\n            return 0;\r\n        const width = range(this.props.freezeColumns)\r\n            .map(this.getColumnWidth)\r\n            .reduce((a, b) => a + b, 0);\r\n        return width;\r\n    }\r\n\r\n    private getColumnWidth = (colIndex: number): number => {\r\n        if (typeof this.props.columnWidth === 'function')\r\n            return this.props.columnWidth(colIndex);\r\n        return this.props.columnWidth;\r\n    }\r\n\r\n    private getRowHeight = (rowHeightProp: number | SizeCallback) => (rowIndex: number): number => {\r\n        if (typeof rowHeightProp === 'function')\r\n            return rowHeightProp(rowIndex);\r\n        return rowHeightProp;\r\n    }\r\n}","import * as React from 'react';\r\nimport { CellRender } from './TableCell';\r\n\r\nexport class ColumnBodyProps {\r\n    public children?: CellRender;\r\n}\r\n\r\nexport class ColumnBody extends React.PureComponent<ColumnBodyProps> { }","import * as React from 'react';\r\nimport { TableCellProps } from './TableCell';\r\n\r\nexport interface ColumnHeadProps extends TableCellProps {\r\n}\r\n\r\nexport class ColumnHead extends React.PureComponent<ColumnHeadProps> { }","import * as React from 'react';\r\nimport { RowRender } from './TableRow';\r\n\r\nexport class TableBodyProps {\r\n    public children?: RowRender;\r\n}\r\n\r\nexport class TableBody extends React.PureComponent<TableBodyProps> { }","import * as React from 'react';\r\n\r\nexport type CellContent = React.ReactNode;\r\n\r\nexport interface TableCellProps extends React.DivProps {\r\n    children?: CellContent;\r\n    visible?: boolean;\r\n}\r\n\r\nexport class TableCell extends React.PureComponent<TableCellProps> { }\r\n\r\nexport interface CellRenderArgs {\r\n    rowIndex: number;\r\n    columnIndex: number;\r\n}\r\n\r\nexport type CellRender = (args: CellRenderArgs) => TableCell | CellContent;","import * as React from 'react';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\n\r\nexport class TableColumnProps {\r\n    public children?: [React.SubComp<ColumnHead>, React.SubComp<ColumnBody>];\r\n}\r\n\r\nexport class TableColumn extends React.PureComponent<TableColumnProps> { }","import * as React from 'react';\r\nimport { RowContent } from './TableRow';\r\n\r\nexport interface TableHeadProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableHead extends React.PureComponent<TableHeadProps> { }","import * as React from 'react';\r\nimport { TableCell, CellContent } from './TableCell';\r\n\r\nexport type RowContent = OneOrMore<React.SubComp<TableCell> | CellContent>;\r\n\r\nexport interface TableRowProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableRow extends React.PureComponent<TableRowProps> { }\r\n\r\nexport type RowRender = (index: number, isScrolling: boolean) => React.SubComp<TableRow> | RowContent;","import * as React from 'react';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\n\r\nexport interface CustomScrollbarsProps {\r\n    style?: React.CSSProperties;\r\n    onScroll?: any;\r\n    forwardedRef: (elem: Element) => void;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nclass CustomScrollbarsInner extends React.PureComponent<CustomScrollbarsProps> {\r\n    public render() {\r\n\r\n        // https://github.com/bvaughn/react-window/issues/110#issuecomment-469061213\r\n\r\n        const refSetter = (elem: any) => {\r\n            if (!this.props.forwardedRef)\r\n                return;\r\n            this.props.forwardedRef((elem || {}).view);\r\n        };\r\n\r\n        return (\r\n            <Scrollbars\r\n                ref={refSetter}\r\n                style={{\r\n                    ...this.props.style,\r\n                    overflow: 'hidden',\r\n                    direction: 'ltr'\r\n                }}\r\n                onScroll={this.props.onScroll}\r\n            >\r\n                {this.props.children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport const CustomScrollbars = React.forwardRef((props, ref) => (\r\n    <CustomScrollbarsInner {...props} forwardedRef={ref as any} />\r\n));\r\nCustomScrollbars.displayName = 'CustomScrollbars';","import styled, { CreateStyled } from '@emotion/styled';\r\n\r\nexport interface Theme {\r\n    dir: DocDir;\r\n    hairlines?: boolean;\r\n}\r\n\r\nconst styledWithTheme = (styled as CreateStyled<Theme>);\r\n\r\nexport { styledWithTheme as styled };","import { styled } from '../styled';\r\n\r\n//\r\n// constants\r\n//\r\n\r\nconst scrollbarWidth = '17px';\r\nconst tableBorder = '1px solid #ddd';\r\n\r\n//\r\n// table\r\n//\r\n\r\nexport const StyledTableView = styled.div`\r\n    width: 100%;\r\n    overflow-y: hidden;\r\n`;\r\n\r\n//\r\n// head\r\n//\r\n\r\nexport const StyledTableHead = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    overflow-y: hidden;\r\n\r\n    font-weight: bold;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const TableHeadRow = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: stretch;\r\n\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-right')}: ${scrollbarWidth};\r\n    ${props => props.theme.hairlines ? `border-bottom: ${tableBorder}` : ''};\r\n`;\r\n\r\nexport const TableHeadCell = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    padding: 8px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    align-items: flex-end;\r\n    vertical-align: bottom;\r\n`;\r\n\r\n//\r\n// body\r\n//\r\n\r\nexport const StyledTableBody = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const TableBodyRow = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: stretch;\r\n\r\n    ${props => props.theme.hairlines ? `border-top: ${tableBorder}` : ''};\r\n\r\n    &:first-of-type {\r\n        border-top: none;\r\n    }\r\n`;\r\n\r\nexport const TableBodyCell = styled.div`\r\n    flex: 1;\r\n    padding: 8px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;","import { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { VariableSizeList } from 'react-window';\r\nimport { Theme } from '../styled';\r\nimport { asArray, ErrorBoundary, isNullOrUndefined, Keys, ReactUtils, SizeUtils } from '../utils';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\nimport { CustomScrollbars } from './CustomScrollbars';\r\nimport { StyledTableBody, StyledTableHead, StyledTableView, TableBodyCell, TableBodyRow, TableHeadCell, TableHeadRow } from './style';\r\nimport { TableBody } from './TableBody';\r\nimport { CellContent, TableCell, TableCellProps } from './TableCell';\r\nimport { TableColumn } from './TableColumn';\r\nimport { TableHead } from './TableHead';\r\nimport { RowContent, RowRender, TableRow, TableRowProps } from './TableRow';\r\nconst flattenDeep = require('lodash.flattendeep');\r\n\r\ninterface KeyEvent {\r\n    key: string;\r\n}\r\n\r\nconst scrollKeys: IMap<boolean> = {\r\n    [Keys.PageUp]: true,\r\n    [Keys.PageDown]: true,\r\n    [Keys.End]: true,\r\n    [Keys.Home]: true,\r\n};\r\n\r\ntype TableChildren_RowsSyntax = [React.SubComp<TableHead>, React.SubComp<TableBody>];\r\n\r\ntype TableChildren_ColumnsSyntax = OneOrMore<React.SubComp<TableColumn>>;\r\n\r\nexport type RowKeyCallback = (index: number) => React.Key;\r\n\r\nexport class TableViewProps {\r\n\r\n    //\r\n    // main props\r\n    //\r\n\r\n    public isVirtual?: boolean;\r\n    public rowCount: number;\r\n    public rowKey?: RowKeyCallback;\r\n    public children?: TableChildren_RowsSyntax | TableChildren_ColumnsSyntax;\r\n\r\n    //\r\n    // appearance\r\n    //\r\n\r\n    public dir?: DocDir = 'ltr';\r\n    public className?: string;\r\n    public style?: React.CSSProperties;\r\n    /**\r\n     * Row height in pixels.  \r\n     * \r\n     * Default: 50\r\n     */\r\n    public rowHeight?: number | SizeCallback = 50;\r\n    public emptyMessage?= \"No Items to Display\";\r\n    public customScrollbars?: boolean;\r\n    public hairlines?: boolean;\r\n\r\n    //\r\n    // behavior\r\n    //\r\n\r\n    public keyScroll?: boolean;\r\n\r\n    //\r\n    // virtualization\r\n    //\r\n\r\n    /**\r\n     * Number of extra buffer items to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 20\r\n     */\r\n    public overscanCount?= 20;\r\n    /**\r\n     * Adds an additional isScrolling parameter to the children render function.\r\n     * This parameter can be used to show a placeholder row or column while the\r\n     * list is being scrolled.\r\n     *\r\n     * Note that using this parameter will result in an additional render call\r\n     * after scrolling has stopped (when isScrolling changes from true to\r\n     * false).\r\n     */\r\n    public useIsScrolling?: boolean;\r\n\r\n}\r\n\r\nexport class TableView extends React.PureComponent<TableViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n    public static readonly defaultHeadHeight = '40px';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = TableHead;\r\n\r\n    public static Body = TableBody;\r\n\r\n    public static Row = TableRow;\r\n\r\n    public static Cell = TableCell;\r\n\r\n    public static Column = TableColumn;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps = new TableViewProps();\r\n\r\n    private tableElement = React.createRef<VariableSizeList>();\r\n    private tableInnerRef = React.createRef<HTMLElement>();\r\n    private tableOuterRef = React.createRef<HTMLElement>();\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public refresh() {\r\n        if (this.tableElement.current) {\r\n            this.tableElement.current.resetAfterIndex(0, false);\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        // head & body\r\n        let head = ReactUtils.singleChildOfType(this, TableHead);\r\n        let body = ReactUtils.singleChildOfType(this, TableBody);\r\n        const columns = ReactUtils.childrenOfType(this, TableColumn);\r\n\r\n        // columns\r\n        if (columns && columns.length) {\r\n            if (head || body)\r\n                throw new Error('Can not specify head and/or body when specifying table columns.');\r\n\r\n            head = this.createHeadFromColumns(columns);\r\n            body = this.createBodyFromColumns(columns);\r\n        }\r\n\r\n        // render\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <StyledTableView\r\n                        className={this.props.className}\r\n                        style={Object.assign({},\r\n                            this.props.style,\r\n                            SizeUtils.geElementHeights(this, TableView.defaultHeight)\r\n                        )}\r\n                        {...this.getKeyScrollProps()}\r\n                    >\r\n                        {this.renderTableHead(head)}\r\n                        {this.renderTableBody(head, body)}\r\n                    </StyledTableView>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderTableHead(head: TableHead) {\r\n\r\n        if (!head)\r\n            return null;\r\n\r\n        const { children, ...divProps } = head.props;\r\n\r\n        return (\r\n\r\n            <StyledTableHead\r\n                {...divProps}\r\n                style={Object.assign({}, head.props.style, SizeUtils.geElementHeights(head, TableView.defaultHeadHeight))}\r\n            >\r\n                <TableHeadRow>\r\n                    <ErrorBoundary>\r\n                        {React.Children.map(children, (cell, index) => {\r\n\r\n                            const headCell: TableCell = cell as any;\r\n                            const cellProps = this.getHeadCellProps(headCell);\r\n                            if (cellProps.visible === false)\r\n                                return null;\r\n\r\n                            const cellContent = this.getHeadCellContent(headCell);\r\n                            return (\r\n                                <TableHeadCell\r\n                                    key={index}\r\n                                    {...cellProps}\r\n                                >\r\n                                    <ErrorBoundary>\r\n                                        {cellContent}\r\n                                    </ErrorBoundary>\r\n                                </TableHeadCell>\r\n                            );\r\n                        })}\r\n                    </ErrorBoundary>\r\n                </TableHeadRow>\r\n            </StyledTableHead>\r\n        );\r\n    }\r\n\r\n    private renderTableBody(head: TableHead, body: TableBody) {\r\n\r\n        const bodyHeights = SizeUtils.getBodyHeights(this, head, {\r\n            total: TableView.defaultHeight,\r\n            head: TableView.defaultHeadHeight\r\n        });\r\n\r\n        return (\r\n            <StyledTableBody\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    ...bodyHeights\r\n                }}\r\n            >\r\n                <ErrorBoundary>\r\n                    {this.renderTableRows(body)}\r\n                </ErrorBoundary>\r\n            </StyledTableBody>\r\n        );\r\n    }\r\n\r\n    private renderTableRows(body: TableBody) {\r\n\r\n        // placeholder\r\n        if (this.props.rowCount === 0 || !this.hasBody(body)) {\r\n            return this.renderItemsPlaceHolder();\r\n        }\r\n\r\n        // table rows\r\n        const rowRender = body.props.children;\r\n        return (\r\n            <AutoSizer>\r\n                {({ width, height }) => (\r\n                    this.props.isVirtual !== false ?\r\n                        this.renderTableRows_virtual(width, height, rowRender) :\r\n                        this.renderTableRows_nonVirtual(width, height, rowRender)\r\n                )}\r\n            </AutoSizer>\r\n        );\r\n    }\r\n\r\n    private renderTableRows_virtual(width: number, height: number, rowRender: RowRender) {\r\n        return (\r\n            <VariableSizeList\r\n                ref={this.tableElement}\r\n                innerRef={this.tableInnerRef}\r\n                outerRef={this.tableOuterRef}\r\n                style={{ outline: 'none' }}\r\n                outerElementType={this.getOuterElementType()}\r\n                direction={this.props.dir}\r\n                layout=\"vertical\"\r\n                height={height}\r\n                width={width}\r\n                itemCount={this.props.rowCount}\r\n                itemSize={this.getRowHeight}\r\n                overscanCount={this.props.overscanCount}\r\n                useIsScrolling={this.props.useIsScrolling}\r\n            >\r\n                {({ index, style, isScrolling }) => this.renderBodyRow(index, rowRender, style, isScrolling)}\r\n            </VariableSizeList>\r\n        );\r\n    }\r\n\r\n    private renderTableRows_nonVirtual(width: number, height: number, rowRender: RowRender) {\r\n        return React.createElement(this.getOuterElementType() || 'div',\r\n            {\r\n                style: {\r\n                    height,\r\n                    width,\r\n                    direction: this.props.dir,\r\n                    outline: 'none',\r\n                    overflow: 'auto',\r\n                }\r\n            } as any,\r\n            (rowRender && (\r\n                Array(this.props.rowCount).fill(0).map((_, index) => (\r\n                    this.renderBodyRow(index, rowRender, { height: this.getRowHeight(index) })\r\n                ))\r\n            ))\r\n        );\r\n    }\r\n\r\n    private renderBodyRow(index: number, rowRender: RowRender, style: React.CSSProperties, isScrolling?: boolean) {\r\n        if (!rowRender)\r\n            return null;\r\n\r\n        const row = rowRender(index, isScrolling);\r\n        const { style: rowStyle, ...rowProps } = this.getRowProps(row);\r\n        const rowKey = this.getRowKey(rowProps, index);\r\n        const rowContent = this.getRowContent(row);\r\n\r\n        return (\r\n            <TableBodyRow\r\n                style={Object.assign({}, style, rowStyle)}\r\n                key={rowKey}\r\n                {...rowProps}\r\n            >\r\n                <ErrorBoundary>\r\n                    {asArray(rowContent).map((cell, columnIndex) => {\r\n\r\n                        const cellProps = this.getCellProps(cell);\r\n                        if (cellProps.visible === false)\r\n                            return null;\r\n\r\n                        return (\r\n                            <TableBodyCell\r\n                                key={columnIndex}\r\n                                {...cellProps}\r\n                            >\r\n                                <ErrorBoundary>\r\n                                    {this.getCellContent(cell)}\r\n                                </ErrorBoundary>\r\n                            </TableBodyCell>\r\n                        );\r\n                    })}\r\n                </ErrorBoundary>\r\n            </TableBodyRow>\r\n        );\r\n    }\r\n\r\n    private renderItemsPlaceHolder() {\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {this.props.emptyMessage}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //\r\n    // scroll with keys\r\n    //\r\n\r\n    private getKeyScrollProps() {\r\n        if (this.props.keyScroll === false)\r\n            return {};\r\n        return {\r\n            onMouseEnter: this.registerKeyHandlers,\r\n            onMouseLeave: this.removeKeyHandlers,\r\n            onKeyDown: (e: KeyEvent) => this.scrollByKey(e)\r\n        };\r\n    }\r\n\r\n    private registerKeyHandlers = () => {\r\n        window.addEventListener('keydown', this.scrollByKey);\r\n    }\r\n\r\n    private removeKeyHandlers = () => {\r\n        window.removeEventListener('keydown', this.scrollByKey);\r\n    }\r\n\r\n    private scrollByKey = ({ key }: KeyEvent) => {\r\n\r\n        // https://dev.to/dance2die/scrolling-with-page-up-down-keys-in-react-window-31ei\r\n\r\n        if (!scrollKeys[key])\r\n            return;\r\n\r\n        if (!this.tableElement.current || !this.tableInnerRef.current || !this.tableOuterRef.current)\r\n            return;\r\n\r\n        const scrollElement = (this.props.customScrollbars ? this.tableOuterRef.current : this.tableElement.current);\r\n        const table = (ReactDOM.findDOMNode(scrollElement) as HTMLElement);\r\n        const currentOffset = table.scrollTop;\r\n        const bodyHeight = table.clientHeight;\r\n        const pageSize = bodyHeight * 0.85;\r\n        const minOffset = 0.1;\r\n        const maxOffset = this.tableInnerRef.current.clientHeight;\r\n\r\n        const offsetByKey: IMap<number> = {\r\n            [Keys.PageUp]: Math.max(minOffset, currentOffset - pageSize),\r\n            [Keys.PageDown]: Math.min(currentOffset + pageSize, maxOffset),\r\n            [Keys.End]: maxOffset,\r\n            [Keys.Home]: minOffset,\r\n        };\r\n\r\n        this.setScrollOffset(offsetByKey[key]);\r\n    }\r\n\r\n    private setScrollOffset = (offset: number) => {\r\n        if (!this.tableElement.current)\r\n            return;\r\n\r\n        this.tableElement.current.scrollTo(offset);\r\n    }\r\n\r\n    //\r\n    // components structure handling\r\n    //  \r\n\r\n    private createHeadFromColumns(columns: TableColumn[]): TableHead {\r\n\r\n        if (columns.every(col => !ReactUtils.singleChildOfType(col, ColumnHead)))\r\n            return null;\r\n\r\n        const head: any = (\r\n            <TableHead>\r\n                {columns.map(col => {\r\n                    const colHead = ReactUtils.singleChildOfType(col, ColumnHead);\r\n                    if (!colHead)\r\n                        return null;\r\n\r\n                    // eslint-disable-next-line react/jsx-key\r\n                    return <TableCell {...(colHead.props as any)} />;\r\n                })}\r\n            </TableHead>\r\n        );\r\n        return head;\r\n    }\r\n\r\n    private createBodyFromColumns(columns: TableColumn[]): TableBody {\r\n        const body: any = (\r\n            <TableBody>\r\n                {(rowIndex: number) => columns.map((col, columnIndex) => {\r\n                    const cellRender = ReactUtils.singleChildOfType(col, ColumnBody).props.children;\r\n                    if (!cellRender)\r\n                        return null;\r\n                    return cellRender({ rowIndex, columnIndex });\r\n                })}\r\n            </TableBody>\r\n        );\r\n        return body;\r\n    }\r\n\r\n    private getHeadCellProps(cell: TableCell): TableCellProps {\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell))\r\n            return cell.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getHeadCellContent(cell: TableCell): CellContent {\r\n\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell)) {\r\n            return cell.props.children;\r\n        }\r\n\r\n        return cell;\r\n    }\r\n\r\n    private hasBody(body: TableBody): boolean {\r\n\r\n        if (!body)\r\n            return false;\r\n\r\n        if (isNullOrUndefined(body.props.children))\r\n            return false;\r\n\r\n        if (typeof body.props.children === 'function')\r\n            return true;\r\n\r\n        if (Array.isArray(body.props.children))\r\n            return body.props.children.length > 0;\r\n\r\n        const childrenCount = React.Children.count(body.props.children);\r\n        return childrenCount > 0;\r\n    }\r\n\r\n    private getRowProps(row: any): TableRowProps {\r\n\r\n        if (ReactUtils.elementInstanceOf(row, TableRow))\r\n            return row.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getRowContent(row: any): RowContent {\r\n\r\n        let content: RowContent = row;\r\n\r\n        // fragment element\r\n        if (ReactUtils.isReactFragment(content)) {\r\n            throw new Error('Can not use React.Fragment as row content. Consider wrapping your content with a row element.');\r\n        }\r\n\r\n        // row element\r\n        if (ReactUtils.elementInstanceOf(content, TableRow)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        if (Array.isArray(content)) {\r\n            content = flattenDeep(content);\r\n        }\r\n        return content;\r\n    }\r\n\r\n    private getRowKey(rowProps: TableRowProps, index: number): React.Key {\r\n\r\n        if (!isNullOrUndefined(rowProps.key))\r\n            return rowProps.key;\r\n\r\n        if (typeof this.props.rowKey === 'function')\r\n            return this.props.rowKey(index);\r\n\r\n        return index;\r\n    }\r\n\r\n    private getCellProps(cell: any): TableCellProps {\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell))\r\n            return cell.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getCellContent(cell: any): CellContent {\r\n\r\n        let content = cell;\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(content, TableCell)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        return content || null;\r\n    }\r\n\r\n    //\r\n    // helpers\r\n    //\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir,\r\n            hairlines: (this.props.hairlines !== false)\r\n        };\r\n    }\r\n\r\n    private getRowHeight = (rowIndex: number): number => {\r\n        if (typeof this.props.rowHeight === 'function')\r\n            return this.props.rowHeight(rowIndex);\r\n        return this.props.rowHeight;\r\n    }\r\n\r\n    private getOuterElementType() {\r\n        return this.props.customScrollbars ? CustomScrollbars : undefined;\r\n    }\r\n}","export * from './ColumnBody';\r\nexport * from './ColumnHead';\r\nexport * from './TableBody';\r\nexport * from './TableCell';\r\nexport * from './TableColumn';\r\nexport * from './TableHead';\r\nexport * from './TableRow';\r\nexport * from './TableView';\r\n","export * from './grid';\r\nexport * from './table';\r\n","module.exports = require(\"@emotion/styled\");","module.exports = require(\"@emotion/styled-base\");","module.exports = require(\"emotion-theming\");","module.exports = require(\"lodash.flattendeep\");","module.exports = require(\"react\");","module.exports = require(\"react-custom-scrollbars\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-virtualized-auto-sizer\");","module.exports = require(\"react-window\");"],"sourceRoot":""}