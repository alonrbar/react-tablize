{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","external \"react\"","C:/Users/Alon/Documents/devel/react-tablize/src/internal/utils/domUtils.ts","C:/Users/Alon/Documents/devel/react-tablize/src/internal/utils/reactUtils.ts","C:/Users/Alon/Documents/devel/react-tablize/src/internal/utils/scrollUtils.ts","C:/Users/Alon/Documents/devel/react-tablize/src/internal/utils/sizeUtils.ts","C:/Users/Alon/Documents/devel/react-tablize/src/internal/utils/utils.ts","C:/Users/Alon/Documents/devel/react-tablize/src/internal/utils/index.ts","C:/Users/Alon/Documents/devel/react-tablize/src/internal/ErrorBoundary.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/internal/window/recycleManager.ts","C:/Users/Alon/Documents/devel/react-tablize/src/internal/window/VirtualCell.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/internal/window/windowCalculator.ts","C:/Users/Alon/Documents/devel/react-tablize/src/internal/window/VirtualWindow.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/internal/window/index.ts","external \"@emotion/styled-base\"","C:/Users/Alon/Documents/devel/react-tablize/src/internal/CustomScrollbars.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/list/List.tsx","external \"react-virtualized-auto-sizer\"","C:/Users/Alon/Documents/devel/react-tablize/src/table/ColumnBody.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/table/ColumnHead.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/table/style.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/table/TableBody.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/table/TableCell.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/table/TableHead.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/table/TableColumn.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/table/TableRow.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/table/Table.tsx","C:/Users/Alon/Documents/devel/react-tablize/src/table/index.ts","C:/Users/Alon/Documents/devel/react-tablize/src/grid/Grid.tsx","external \"react-custom-scrollbars\"","external \"emotion-theming\"","C:/Users/Alon/Documents/devel/react-tablize/src/index.ts","external \"lodash.flattendeep\""],"names":["DomUtils","_scrollbarWidth","div","document","createElement","style","width","height","overflow","position","top","body","appendChild","offsetWidth","clientWidth","removeChild","_rtlOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","scrollLeft","_isPositionStickySupported","prefix","testElementStyle","head","i","length","ReactUtils","children","createPropsToAdd","React","map","child","index","propsToAdd","parentElement","type","childrenArray","filter","elementInstanceOf","matchingChildren","childrenOfType","Error","name","a","b","props","Array","isArray","elem","prototype","Object","isPrototypeOf","call","ScrollUtils","e","docDir","currentTarget","scrollTop","scrollHeight","scrollWidth","clientHeight","normalizedScrollLeft","rtlOffsetType","normalizedScrollTop","Math","min","max","rawScrollLeft","SizeUtils","size","Number","isFinite","component","defaultHeight","minHeight","maxHeight","undefined","cssSizeString","isNullOrUndefined","val","asArray","range","count","keys","areShallowEqual","keysA","keysB","key","ErrorBoundaryState","ErrorBoundary","state","hasError","error","errorInfo","setState","console","RecycleManager","nextOriginalKeys","nextKeys","slice","sort","prevKeys","usedKeysOriginalToStable","nextIndex","prevIndex","nextOriginal","prevOriginal","freeUnusedKey","originalKey","stableKey","getNextKeyFromPool","result","freeKeysPool","hasOwnProperty","stableKeySource","VirtualCell","rightOrLeft","transformModifier","transform","left","className","boxSizing","CalcData","WindowCalculator","column","row","elementType","fromPosition","toPosition","elementsOverscan","elementSize","minElementsCountToReturn","totalElementsCount","fromIndex","findNearestItem","toIndex","data","lastFromPosition","info","push","getElementInfo","estimatedElementSize","elementsCount","lastMeasuredIndex","totalSizeOfUnmeasuredElements","numUnmeasuredElementsCount","elementSizeOrEstimate","totalSizeOfMeasuredElements","cache","lastMeasuredElemInfo","maxIndex","lastMeasuredPosition","findNearestItemBinarySearch","findNearestItemExponentialSearch","high","low","middle","floor","currentPosition","interval","elementIndex","elementInfo","getSize","VirtualWindowProps","VirtualWindowState","VirtualWindow","normalized","normalizeScrollEvent","setScrollState","containerElementScroll","windowCalc","getTotalSize","rowHeight","rowCount","columnWidth","columnCount","minColumnsToRender","minRowsToRender","prevProps","rtlRedrawHack","outerRef","current","containerElement","clearCache","controlledScroll","onScroll","handleScroll","outerElementType","ref","opacity","innerElementType","innerRef","getScrollableHeight","getScrollableWidth","renderCells","columns","elementsInRange","overscanColumnsCount","rows","overscanRowCount","originalKeys","col","getCellOriginalKey","recycler","freeUnusedKeys","cells","getStableKey","renderCell","compareKeys","colIndex","rowIndex","scrollDirection","window","requestAnimationFrame","setTimeout","CustomScrollbarsInner","refSetter","forwardedRef","view","CustomScrollbars","displayName","List","windowRef","forceUpdate","offset","isHorizontal","scrollTo","dir","assign","outline","getOuterElementType","itemCount","itemSize","getVerticalScrollbarWidth","getHorizontalScrollbarWidth","overscan","cellProps","renderRow","layout","scrollableHeight","hasVerticalScrollbar","scrollbarWidth","scrollableWidth","hasHorizontalScrollbar","initialCalculator","customScrollbar","ColumnBodyProps","ColumnBody","ColumnHead","tableBorder","StyledTable","StyledTableCell","theme","defaultTheme","StyledTableHead","StyledTableBody","StyledTableRow","TableBodyProps","TableBody","childrenCount","TableCellSymbol","TableCell","cell","isTableCell","TableHead","TableColumnProps","TableColumn","every","singleChildOfType","colHead","columnIndex","cellRender","flattenDeep","require","TableRowSymbol","TableRow","isTableRow","content","RowAutoSize","TableProps","Table","tableElement","refresh","createHeadFromColumns","createBodyFromColumns","getTheme","getElementHeights","renderHead","renderBody","divProps","defaultHeadHeight","bodyHeights","getBodyHeights","total","showPlaceholder","hasChildren","rowRender","renderRowsPlaceholder","getRowHeight","overscanCount","customScrollbars","renderBodyRow","rowContent","getRowContent","rowKey","getRowKey","getCellProps","visible","placeholder","textAlign","defaultStyle","rowProps","table","defaultHeights","totalHeights","headHeight","getHeadHeight","TileKey","GridState","GridProps","Grid","tiles","tileKey","rowIndexOffset","columnIndexOffset","renderProps","tilePosition","getTilePosition","absRowIndex","absColIndex","relRowIndex","relColIndex","isRtl","isPositionStickySupported","activeTiles","createTilesMap","onClick","renderGrid","createClassName","getContainerHeight","getContainerWidth","renderTilesRow","tileKeys","getTilesInRow","firstTile","isSticky","topOffset","leftOffset","reduce","cur","marginLeft","display","tileRowTop","renderTile","vertical","resetTiles","hasHeader","fixedHeaderHeight","hasFooter","fixedFooterHeight","hasFixedLeftColumn","fixedLeftWidth","hasFixedRightColumn","fixedRightWidth","createTilesMapEntry","createTileMapEntryFactory","HeaderLeft","HeaderCenter","HeaderRight","BodyLeft","BodyCenter","BodyRight","FooterLeft","FooterCenter","FooterRight","horizontalScrollbarWidth","verticalScrollbarWidth","containerHeight","containerWidth","headerHeight","footerHeight","bodyHeight","leftWidth","rightWidth","centerWidth","horizontal","isVerticalFixed","isHorizontalFixed","isCorner","toLowerCase","split","getBodyScrollableHeight","bodyWidth","getBodyScrollableWidth"],"mappings":"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","file":"react-tablize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-tablize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-tablize\"] = factory();\n\telse\n\t\troot[\"react-tablize\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = require(\"react\");","export type RtlOffsetType = 'negative' | 'positive-descending' | 'positive-ascending';\r\n\r\nexport class DomUtils {\r\n\r\n    public static get scrollbarWidth(): number {\r\n        if (this._scrollbarWidth !== null)\r\n            return this._scrollbarWidth;\r\n\r\n        // https://github.com/sonicdoe/measure-scrollbar/blob/master/index.js\r\n\r\n        const div = document.createElement('div');\r\n\r\n        div.style.width = '100px';\r\n        div.style.height = '100px';\r\n        div.style.overflow = 'scroll';\r\n        div.style.position = 'absolute';\r\n        div.style.top = '-9999px';\r\n\r\n        document.body.appendChild(div);\r\n\r\n        this._scrollbarWidth = div.offsetWidth - div.clientWidth;\r\n\r\n        document.body.removeChild(div);\r\n\r\n        return this._scrollbarWidth;\r\n    }\r\n\r\n    /**\r\n     * TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\r\n     * Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\r\n     * Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\r\n     * The safest way to check this is to intentionally set a negative offset,\r\n     * and then verify that the subsequent \"scroll\" event matches the negative offset.\r\n     * If it does not match, then we can assume a non-standard RTL scroll implementation.\r\n     *\r\n     * From: https://github.com/bvaughn/react-window/blob/master/src/domHelpers.js\r\n     */\r\n    public static get rtlOffsetType(): RtlOffsetType {\r\n        if (DomUtils._rtlOffsetType)\r\n            return DomUtils._rtlOffsetType;\r\n\r\n        const outerDiv = document.createElement('div');\r\n        const outerStyle = outerDiv.style;\r\n        outerStyle.width = '50px';\r\n        outerStyle.height = '50px';\r\n        outerStyle.overflow = 'scroll';\r\n        outerStyle.direction = 'rtl';\r\n\r\n        const innerDiv = document.createElement('div');\r\n        const innerStyle = innerDiv.style;\r\n        innerStyle.width = '100px';\r\n        innerStyle.height = '100px';\r\n\r\n        outerDiv.appendChild(innerDiv);\r\n\r\n        document.body.appendChild(outerDiv);\r\n\r\n        if (outerDiv.scrollLeft > 0) {\r\n            DomUtils._rtlOffsetType = 'positive-descending';\r\n        } else {\r\n            outerDiv.scrollLeft = 1;\r\n            if (outerDiv.scrollLeft === 0) {\r\n                DomUtils._rtlOffsetType = 'negative';\r\n            } else {\r\n                DomUtils._rtlOffsetType = 'positive-ascending';\r\n            }\r\n        }\r\n\r\n        document.body.removeChild(outerDiv);\r\n\r\n        return DomUtils._rtlOffsetType;\r\n    }\r\n\r\n    public static get isPositionStickySupported(): boolean {\r\n\r\n        // https://github.com/dollarshaveclub/stickybits/issues/35#issuecomment-549929578\r\n\r\n        if (DomUtils._isPositionStickySupported !== null)\r\n            return DomUtils._isPositionStickySupported;\r\n\r\n        const prefix = ['', '-o-', '-webkit-', '-moz-', '-ms-'];\r\n        const testElementStyle = document.head.style;\r\n\r\n        for (let i = 0; i < prefix.length; i += 1) {\r\n            testElementStyle.position = `${prefix[i]}sticky`;\r\n        }\r\n        DomUtils._isPositionStickySupported = (testElementStyle.position === 'sticky');\r\n\r\n        return DomUtils._isPositionStickySupported;\r\n    }\r\n\r\n    private static _scrollbarWidth: number = null;\r\n\r\n    private static _rtlOffsetType: RtlOffsetType;\r\n\r\n    private static _isPositionStickySupported: boolean = null;\r\n}","import * as React from 'react';\r\nimport { Constructor } from '../../types';\r\n\r\nexport class ReactUtils {\r\n\r\n    public static addPropsToChildren(children: React.ReactNode, createPropsToAdd: (child: React.ReactElement<any>, index?: number) => any) {\r\n\r\n        // https://stackoverflow.com/questions/32370994/how-to-pass-props-to-this-props-children\r\n        return React.Children.map(children, (child: React.ReactElement<any>, index: number) => {\r\n            const propsToAdd = createPropsToAdd(child, index);\r\n            return React.cloneElement(child, propsToAdd);\r\n        });\r\n    }\r\n\r\n    public static childrenOfType<T>(parentElement: any, type: Constructor<T>): T[] {\r\n        const children = ReactUtils.childrenArray(parentElement);\r\n        if (!children)\r\n            return null;\r\n        return children.filter(child => ReactUtils.elementInstanceOf(child, type)) as any;\r\n    }\r\n\r\n    /**\r\n     * Return the only child that matches the given type.  \r\n     * If more than one child matches an error is thrown.  \r\n     * \r\n     * Notice that this function gives no indication of the total number of\r\n     * children, only the number of matching children.\r\n     * @param parentElement \r\n     * @param type \r\n     */\r\n    public static singleChildOfType<T>(parentElement: any, type: Constructor<T>): T {\r\n        const matchingChildren = ReactUtils.childrenOfType(parentElement, type);\r\n        if (!matchingChildren || !matchingChildren.length)\r\n            return null;\r\n\r\n        if (matchingChildren.length > 1)\r\n            throw new Error(`Only one ${type.name} child element is allowed.`);\r\n\r\n        return matchingChildren[0] as any;\r\n    }\r\n\r\n    public static compareKeys(a: React.Key, b: React.Key): number {\r\n        if (a < b) {\r\n            return -1;\r\n        } else if (a > b) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private static childrenArray(parentElement: any): React.ReactChild[] {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (Array.isArray(children))\r\n            return children;\r\n\r\n        return React.Children.map(children, child => child);\r\n    }\r\n\r\n    private static elementInstanceOf<T>(elem: any, type: Constructor<T>): elem is T {\r\n        if (!elem)\r\n            return false;\r\n        if (!elem.type)\r\n            return false;\r\n\r\n        // https://stackoverflow.com/questions/39387405/using-instanceof-to-test-for-base-class-of-a-react-component\r\n        // https://stackoverflow.com/questions/14486110/how-to-check-if-a-javascript-class-inherits-another-without-creating-an-obj\r\n        // https://stackoverflow.com/questions/2464426/whats-the-difference-between-isprototypeof-and-instanceof-in-javascript\r\n\r\n        return elem.type === type ||\r\n            elem.type.prototype instanceof type ||\r\n            Object.prototype.isPrototypeOf.call(type, elem.type);\r\n    }\r\n}","import { DocDir } from '../../types';\r\nimport { DomUtils } from './domUtils';\r\n\r\nexport interface NormalizedScrollEvent {\r\n    scrollTop: number;\r\n    /**\r\n     * The original scrollLeft value as it was sent by the browser.\r\n     */\r\n    rawScrollLeft: number;\r\n    /**\r\n     * The normalized, \"positive-ascending\" scrollLeft value. \r\n     * For mode details see the comment on `DomUtils.rtlOffsetType`. \r\n     */\r\n    normalizedScrollLeft: number;\r\n}\r\n\r\nexport class ScrollUtils {\r\n\r\n    public static normalizeScrollEvent(e: React.UIEvent<HTMLElement>, docDir: DocDir): NormalizedScrollEvent {\r\n\r\n        const { scrollTop, scrollLeft } = e.currentTarget;\r\n        const { scrollHeight, scrollWidth, clientHeight, clientWidth } = e.currentTarget;\r\n\r\n        // RTL support\r\n        let normalizedScrollLeft = scrollLeft;\r\n        if (docDir === 'rtl') {\r\n            switch (DomUtils.rtlOffsetType) {\r\n                case 'negative':\r\n                    normalizedScrollLeft = -scrollLeft;\r\n                    break;\r\n                case 'positive-ascending':\r\n                    // noop\r\n                    break;\r\n                case 'positive-descending':\r\n                default:\r\n                    normalizedScrollLeft = scrollWidth - clientWidth - scrollLeft;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // fix scroll offset to prevent \"over scroll\"\r\n        let normalizedScrollTop = Math.min(scrollTop, scrollHeight - clientHeight);\r\n        normalizedScrollTop = Math.max(0, scrollTop);\r\n        normalizedScrollLeft = Math.min(normalizedScrollLeft, scrollWidth - clientWidth);\r\n        normalizedScrollLeft = Math.max(0, normalizedScrollLeft);\r\n\r\n        return {\r\n            scrollTop: normalizedScrollTop,\r\n            rawScrollLeft: scrollLeft,\r\n            normalizedScrollLeft\r\n        };\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport interface ElementHeights {\r\n    height: string | number;\r\n    minHeight: string | number;\r\n    maxHeight: string | number;\r\n}\r\n\r\nexport class SizeUtils {\r\n\r\n    public static cssSizeString(size: number | string): string {\r\n        if (Number.isFinite(size as number))\r\n            return size + 'px';\r\n        return size as string;\r\n    }\r\n\r\n    public static getElementHeights(component: React.ComponentWithStyle, defaultHeight: number | string): ElementHeights {\r\n        const style = (component && component.props.style) || {};\r\n\r\n        let height = style.height;\r\n        let minHeight = style.minHeight;\r\n        let maxHeight = style.maxHeight;\r\n\r\n        if (height === undefined && minHeight === undefined) {\r\n            height = defaultHeight;\r\n        }\r\n\r\n        height = this.cssSizeString(height);\r\n        minHeight = this.cssSizeString(minHeight);\r\n        maxHeight = this.cssSizeString(maxHeight);\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n}","\r\nexport function isNullOrUndefined(val: any): boolean {\r\n    return val === null || val === undefined;\r\n}\r\n\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n    if (Array.isArray(val))\r\n        return val;\r\n\r\n    return [val];\r\n}\r\n\r\nexport function range(count: number): number[] {\r\n    // https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp\r\n    return [...Array(count || 0).keys()];\r\n}\r\n\r\nexport function areShallowEqual(a: object, b: object) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n\r\n    if (a === null || a === undefined || b === null || b === undefined) {\r\n        return false;\r\n    }\r\n\r\n    const keysA = Object.keys(a);\r\n    const keysB = Object.keys(b);\r\n\r\n    if (keysA.length !== keysB.length) {\r\n        return false;\r\n    }\r\n\r\n    for (const key of keysA) {\r\n        if ((a as any)[key] !== (b as any)[key])\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}","export * from './domUtils';\r\nexport * from './reactUtils';\r\nexport * from './scrollUtils';\r\nexport * from './sizeUtils';\r\nexport * from './utils';\r\n","import * as React from 'react';\r\n\r\nclass ErrorBoundaryState {\r\n    public hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<{}, ErrorBoundaryState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n        this.setState({ hasError: true });\r\n        console.error(error);  // eslint-disable-line no-console\r\n    }\r\n\r\n    public render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <span>X</span>\r\n            );\r\n        }\r\n        return this.props.children !== undefined ? this.props.children : null;\r\n    }\r\n}","import { IMap } from '../../types';\r\n\r\nexport class RecycleManager {\r\n\r\n    private stableKeySource = 0;\r\n    private freeKeysPool: IMap<boolean> = {};\r\n    private usedKeysOriginalToStable: IMap<React.Key> = {};\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public freeUnusedKeys(nextOriginalKeys: React.Key[]): void {\r\n\r\n        const nextKeys = nextOriginalKeys.slice();\r\n        nextKeys.sort();\r\n        const prevKeys = Object.keys(this.usedKeysOriginalToStable);\r\n        prevKeys.sort();\r\n\r\n        let nextIndex = nextKeys.length - 1;\r\n        let prevIndex = prevKeys.length - 1;\r\n\r\n        while (nextIndex >= 0 && prevIndex >= 0) {\r\n\r\n            const nextOriginal = nextKeys[nextIndex];\r\n            const prevOriginal = prevKeys[prevIndex];\r\n\r\n            if (nextOriginal === prevOriginal) {\r\n\r\n                // still using the key - don't free\r\n                nextIndex--;\r\n                prevIndex--;\r\n\r\n            } else if (nextOriginal > prevOriginal) {\r\n\r\n                // still using the key - don't free\r\n                nextIndex--;\r\n\r\n            } else {\r\n\r\n                // not using the key - return to pool\r\n                this.freeUnusedKey(prevOriginal);\r\n                prevIndex--;\r\n            }\r\n        }\r\n\r\n        // return remaining keys to pool\r\n        while (prevIndex >= 0) {\r\n            const prevOriginal = prevKeys[prevIndex];\r\n            this.freeUnusedKey(prevOriginal);\r\n            prevIndex--;\r\n        }\r\n    }\r\n\r\n    public getStableKey(originalKey: React.Key): React.Key {\r\n\r\n        if (this.usedKeysOriginalToStable[originalKey] !== undefined) {\r\n            return this.usedKeysOriginalToStable[originalKey];\r\n\r\n        } else {\r\n            const stableKey = this.getNextKeyFromPool();\r\n            this.usedKeysOriginalToStable[originalKey] = stableKey;\r\n            return stableKey;\r\n        }\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private getNextKeyFromPool(): React.Key {\r\n\r\n        // find next key in pool        \r\n        let result: React.Key;\r\n        for (const key in this.freeKeysPool) {\r\n            if (this.freeKeysPool.hasOwnProperty(key)) {\r\n                result = key;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (result === undefined) {\r\n\r\n            // generate new key\r\n            result = this.stableKeySource;\r\n            this.stableKeySource++;\r\n\r\n        } else {\r\n\r\n            // remove from pool\r\n            delete this.freeKeysPool[result];\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private freeUnusedKey(originalKey: React.Key): void {\r\n        const stableKey = this.usedKeysOriginalToStable[originalKey];\r\n        delete this.usedKeysOriginalToStable[originalKey];\r\n        this.freeKeysPool[stableKey] = true;\r\n    }\r\n}","import * as React from 'react';\r\nimport { DocDir } from '../../types';\r\n\r\nexport interface VirtualCellProps {\r\n    /**\r\n     * We are only using classes for easier debug inspection...\r\n     */\r\n    className: string;\r\n    direction: DocDir;\r\n    height: number;\r\n    width: number;\r\n    left: number;\r\n    top: number;\r\n    children: React.ReactNode;\r\n}\r\n\r\n/***\r\n * Each `VirtualWindow` creates a constant number of these `VirtualCell`s and just\r\n * moves them around. This is much more efficient than creating a new cell on\r\n * each scroll.\r\n *\r\n * based on:\r\n * https://github.com/Flipkart/recyclerlistview/blob/master/src/platform/web/viewrenderer/ViewRenderer.tsx\r\n */\r\nexport class VirtualCell extends React.PureComponent<VirtualCellProps> {\r\n    public render() {\r\n\r\n        const rightOrLeft = this.props.direction === 'rtl' ? 'right' : 'left';\r\n\r\n        // https://rtl-css.net/tutorial/quick-tip-rtling-css3-transform-functions-translate-and-translatex\r\n        const transformModifier = (this.props.direction === 'rtl') ? -1 : 1;\r\n        const transform = `translate(${this.props.left * transformModifier}px,${this.props.top}px)`;\r\n\r\n        return (\r\n            <div\r\n                className={this.props.className}\r\n                style={{\r\n                    boxSizing: 'border-box',\r\n                    height: this.props.height,\r\n                    width: this.props.width,\r\n                    position: \"absolute\",\r\n                    [rightOrLeft]: 0,\r\n                    top: 0,\r\n                    willChange: \"transform\",\r\n                    transform\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import { IMap, SizeCallback } from '../../types';\r\n\r\nexport type ElementType = 'column' | 'row';\r\n\r\nexport interface ElementInfo {\r\n    index: number;\r\n    position: number;\r\n    size: number;\r\n}\r\n\r\nclass CalcData {\r\n    public cache: IMap<ElementInfo> = {};\r\n    public lastMeasuredIndex = -1;\r\n    public lastFromPosition = -1;\r\n}\r\n\r\ntype CalcDataMap = {\r\n    [key in ElementType]: CalcData;\r\n};\r\n\r\n/**\r\n * Calculates the index, size and position of all visible items within a given\r\n * range.\r\n *\r\n * based on:\r\n * - https://github.com/bvaughn/react-window/blob/master/src/VariableSizeGrid.js\r\n * - https://github.com/fulcrumapp/react-virtual-grid/blob/master/src/grid-calculator.js\r\n * - https://github.com/ranneyd/sticky-table/blob/master/src/useVirtual.js\r\n */\r\nexport class WindowCalculator {\r\n\r\n    private readonly data: CalcDataMap = {\r\n        column: new CalcData(),\r\n        row: new CalcData()\r\n    };\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public elementsInRange(\r\n        elementType: ElementType,\r\n        fromPosition: number,\r\n        toPosition: number,\r\n        elementsOverscan: number,\r\n        elementSize: number | SizeCallback,\r\n        minElementsCountToReturn: number,\r\n        totalElementsCount: number\r\n    ) {\r\n\r\n        let fromIndex = this.findNearestItem(\r\n            elementType,\r\n            fromPosition,\r\n            totalElementsCount,\r\n            elementSize\r\n        );\r\n\r\n        let toIndex = this.findNearestItem(\r\n            elementType,\r\n            toPosition,\r\n            totalElementsCount,\r\n            elementSize\r\n        );\r\n\r\n        // Determine scroll direction and set overscan accordingly\r\n        if (fromPosition < this.data[elementType].lastFromPosition) {\r\n            fromIndex -= elementsOverscan;\r\n        } else {\r\n            toIndex += elementsOverscan;\r\n        }\r\n        this.data[elementType].lastFromPosition = fromPosition;\r\n\r\n        // Enforce \"minElementsCountToReturn\"\r\n        while (toIndex - fromIndex + 1 < minElementsCountToReturn) {\r\n            if (toIndex + 1 < totalElementsCount) {\r\n                toIndex++;\r\n            } else {\r\n                fromIndex--;\r\n            }\r\n        }\r\n\r\n        // Prevent range error\r\n        fromIndex = Math.max(0, fromIndex);\r\n        toIndex = Math.min(toIndex, totalElementsCount - 1);\r\n\r\n        // Get elements info\r\n        const info: ElementInfo[] = [];\r\n        for (let i = fromIndex; i <= toIndex; i++) {\r\n            info.push(this.getElementInfo(\r\n                elementType,\r\n                i,\r\n                elementSize\r\n            ));\r\n        }\r\n        return info;\r\n    }\r\n\r\n    public getTotalSize(\r\n        elementType: ElementType,\r\n        elementSize: number | SizeCallback,\r\n        estimatedElementSize: null | number,\r\n        elementsCount: number\r\n    ) {\r\n\r\n        // Handle unmeasured elements\r\n        let lastMeasuredIndex: number;\r\n        let totalSizeOfUnmeasuredElements = 0;\r\n        if (typeof elementSize === \"function\" && !estimatedElementSize) {\r\n\r\n            // Dynamic element size and no estimation - force evaluation of all unmeasured elements.\r\n            this.getElementInfo(elementType, elementsCount - 1, elementSize);\r\n\r\n            // Update last measured index after evaluation\r\n            lastMeasuredIndex = Math.min(this.data[elementType].lastMeasuredIndex, elementsCount - 1);\r\n\r\n        } else {\r\n\r\n            // Constant element size - use simple multiplication for unmeasured elements.\r\n            lastMeasuredIndex = Math.min(this.data[elementType].lastMeasuredIndex, elementsCount - 1);\r\n            const numUnmeasuredElementsCount = elementsCount - lastMeasuredIndex - 1;\r\n            const elementSizeOrEstimate = typeof elementSize === \"number\" ? elementSize : estimatedElementSize;\r\n            totalSizeOfUnmeasuredElements = numUnmeasuredElementsCount * elementSizeOrEstimate;\r\n        }\r\n\r\n        // Get total size of already measured elements\r\n        let totalSizeOfMeasuredElements = 0;\r\n        if (lastMeasuredIndex >= 0) {\r\n            const { cache } = this.data[elementType];\r\n            const lastMeasuredElemInfo = cache[lastMeasuredIndex];\r\n            totalSizeOfMeasuredElements = lastMeasuredElemInfo.position + lastMeasuredElemInfo.size;\r\n        }\r\n\r\n        // Sum and return\r\n        return totalSizeOfMeasuredElements + totalSizeOfUnmeasuredElements;\r\n    }\r\n\r\n    //\r\n    // private methods\r\n    //\r\n\r\n    private findNearestItem(\r\n        elementType: ElementType,\r\n        position: number,\r\n        maxIndex: number,\r\n        elementSize: number | SizeCallback\r\n    ) {\r\n\r\n        const { lastMeasuredIndex, cache } = this.data[elementType];\r\n        const lastMeasuredPosition = cache[lastMeasuredIndex]?.position ?? -1;\r\n\r\n        if (lastMeasuredPosition >= position) {\r\n\r\n            // If we've already measured items within this range just use a binary search as it's faster.\r\n            return this.findNearestItemBinarySearch(\r\n                elementType,\r\n                lastMeasuredIndex,\r\n                0,\r\n                position,\r\n                elementSize\r\n            );\r\n\r\n        } else {\r\n\r\n            // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\r\n            // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\r\n            // The overall complexity for this approach is O(log n).\r\n            return this.findNearestItemExponentialSearch(\r\n                elementType,\r\n                Math.max(lastMeasuredIndex, 0),\r\n                maxIndex,\r\n                position,\r\n                elementSize\r\n            );\r\n        }\r\n    };\r\n\r\n    private findNearestItemBinarySearch(\r\n        elementType: ElementType,\r\n        high: number,\r\n        low: number,\r\n        position: number,\r\n        elementSize: number | SizeCallback\r\n    ) {\r\n        while (low <= high) {\r\n            const middle = low + Math.floor((high - low) / 2);\r\n            const currentPosition = this.getElementInfo(elementType, middle, elementSize).position;\r\n\r\n            if (currentPosition === position) {\r\n                return middle;\r\n            } else if (currentPosition < position) {\r\n                low = middle + 1;\r\n            } else if (currentPosition > position) {\r\n                high = middle - 1;\r\n            }\r\n        }\r\n\r\n        if (low > 0) {\r\n            return low - 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    private findNearestItemExponentialSearch(\r\n        elementType: ElementType,\r\n        index: number,\r\n        maxIndex: number,\r\n        position: number,\r\n        elementSize: number | SizeCallback\r\n    ) {\r\n        let interval = 1;\r\n\r\n        while (\r\n            index < maxIndex &&\r\n            this.getElementInfo(elementType, index, elementSize).position < position\r\n        ) {\r\n            index += interval;\r\n            interval *= 2;\r\n        }\r\n\r\n        return this.findNearestItemBinarySearch(\r\n            elementType,\r\n            Math.min(index, maxIndex - 1),\r\n            Math.floor(index / 2),\r\n            position,\r\n            elementSize\r\n        );\r\n    };\r\n\r\n    private getElementInfo(\r\n        elementType: ElementType,\r\n        elementIndex: number,\r\n        elementSize: number | SizeCallback\r\n    ) {\r\n\r\n        const { lastMeasuredIndex, cache } = this.data[elementType];\r\n\r\n        // fill missing cache entries\r\n        if (elementIndex > lastMeasuredIndex) {\r\n\r\n            let position = 0;\r\n\r\n            // skipped already cached entries\r\n            if (lastMeasuredIndex !== -1) {\r\n                const elementInfo = cache[lastMeasuredIndex];\r\n                position = elementInfo.position + elementInfo.size;\r\n            }\r\n\r\n            // add new cache entries\r\n            for (let index = (lastMeasuredIndex + 1); index <= elementIndex; index++) {\r\n                const size = this.getSize(index, elementSize, cache[index]?.size);\r\n\r\n                cache[index] = {\r\n                    index,\r\n                    position,\r\n                    size,\r\n                };\r\n\r\n                position += size;\r\n            }\r\n\r\n            this.data[elementType].lastMeasuredIndex = elementIndex;\r\n        }\r\n\r\n        return cache[elementIndex];\r\n    }\r\n\r\n    private getSize(index: number, elementSize: number | SizeCallback, cache: number): number {\r\n\r\n        if (cache !== null && cache !== undefined)\r\n            return cache;\r\n\r\n        if (typeof elementSize === \"number\")\r\n            return elementSize;\r\n\r\n        if (typeof elementSize === \"function\")\r\n            return elementSize(index);\r\n\r\n        throw new Error(\r\n            `Invalid argument '${nameof(elementSize)}' expected a number or a function ` +\r\n            `but received '${typeof elementSize}': ${elementSize}.`\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { DocDir, ScrollDirection, ScrollEvent, SizeCallback } from '../../types';\r\nimport { areShallowEqual, NormalizedScrollEvent, ReactUtils, ScrollUtils } from '../utils';\r\nimport { RecycleManager } from './recycleManager';\r\nimport { VirtualCell } from './VirtualCell';\r\nimport { ElementInfo, WindowCalculator } from './windowCalculator';\r\n\r\nexport interface RenderWindowCellProps {\r\n    colIndex: number;\r\n    rowIndex: number;\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\nexport class VirtualWindowProps {\r\n    public direction?: DocDir = 'ltr';\r\n    /**\r\n     * Allow scrolling only via calling the `scrollTo` method.\r\n     */\r\n    public controlledScroll?: boolean;\r\n    public scrollDirection?: ScrollDirection = 'both';\r\n    public height: number;\r\n    public width: number;\r\n    public columnCount: number;\r\n    public rowCount: number;\r\n    public columnWidth: number | SizeCallback;\r\n    public rowHeight: number | SizeCallback;\r\n    public overscanColumnsCount?= 0;\r\n    public overscanRowCount?= 0;\r\n\r\n    /**\r\n     * Tag name passed to `React.createElement` to create the inner \"scrollable\r\n     * area\" element. This is an advanced property.\r\n     */\r\n    public innerElementType?: React.ElementType = 'div';\r\n    /**\r\n     * Ref to attach to the inner \"scrollable area\" element. This is an advanced\r\n     * property.\r\n     */\r\n    public innerRef?: React.RefObject<any>;\r\n    /**\r\n     * Tag name passed to `React.createElement` to create the outer container\r\n     * element. This is an advanced property.\r\n     */\r\n    public outerElementType?: React.ElementType = 'div';\r\n    /**\r\n     * Ref to attach to the outer container element. This is an advanced property.\r\n     */\r\n    public outerRef?: React.RefObject<any>;\r\n\r\n    /**\r\n     * We are only using classes for easier debug inspection...\r\n     */\r\n    public className?: string;\r\n    public style?: React.CSSProperties;\r\n\r\n    public children: (props: RenderWindowCellProps) => React.ReactNode;\r\n}\r\n\r\nclass VirtualWindowState {\r\n    public scrollTop = 0;\r\n    public scrollLeft = 0;\r\n    public opacity: any;\r\n}\r\n\r\nexport class VirtualWindow extends React.PureComponent<VirtualWindowProps, VirtualWindowState> {\r\n\r\n    public static defaultProps: unknown = new VirtualWindowProps();\r\n\r\n    private get className() {\r\n        return this.props.className || nameof(VirtualWindow);\r\n    }\r\n\r\n    /**\r\n     * Make sure to return a constant number of elements, this is important for\r\n     * recycling purposes.\r\n     */\r\n    private minColumnsToRender = 0;\r\n    /**\r\n     * Make sure to return a constant number of elements, this is important for\r\n     * recycling purposes.\r\n     */\r\n    private minRowsToRender = 0;\r\n\r\n    private windowCalc = new WindowCalculator();\r\n    private recycler = new RecycleManager();\r\n\r\n    private prevProps: VirtualWindowProps;\r\n\r\n    private containerElement = React.createRef<HTMLDivElement>();\r\n\r\n    constructor(props: VirtualWindowProps) {\r\n        super(props);\r\n\r\n        this.state = new VirtualWindowState();\r\n    }\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public scrollTo(e: NormalizedScrollEvent): void {\r\n        this.containerElementScroll({\r\n            scrollTop: e.scrollTop,\r\n            scrollLeft: e.rawScrollLeft\r\n        });\r\n        this.setScrollState({\r\n            scrollTop: e.scrollTop,\r\n            scrollLeft: e.normalizedScrollLeft\r\n        });\r\n    }\r\n\r\n    public getScrollableHeight(): number {\r\n        return this.windowCalc.getTotalSize(\r\n            'row',\r\n            this.props.rowHeight,\r\n            null, // this.props.estimatedRowHeight,\r\n            this.props.rowCount\r\n        );\r\n    }\r\n\r\n    public getScrollableWidth(): number {\r\n        return this.windowCalc.getTotalSize(\r\n            'column',\r\n            this.props.columnWidth,\r\n            null, // this.props.estimatedColumnWidth,\r\n            this.props.columnCount\r\n        );\r\n    }\r\n\r\n    public clearCache(): void {\r\n        this.windowCalc = new WindowCalculator();\r\n        this.minColumnsToRender = 0;\r\n        this.minRowsToRender = 0;\r\n    }\r\n\r\n    //\r\n    // life cycle\r\n    //\r\n\r\n    public componentDidUpdate(prevProps: VirtualWindowProps) {\r\n        if (this.props.direction === 'rtl' && !areShallowEqual(this.props, prevProps)) {\r\n            this.rtlRedrawHack();\r\n        }\r\n        if (this.props.outerRef) {\r\n            (this.props.outerRef as any).current = this.containerElement.current;\r\n        }\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        if (!areShallowEqual(this.props, this.prevProps)) {\r\n            this.prevProps = this.props;\r\n            this.clearCache();\r\n        }\r\n\r\n        const overflow = this.props.controlledScroll ? 'hidden' : 'auto';\r\n        const onScroll = this.props.controlledScroll ? undefined : this.handleScroll;\r\n\r\n        return (\r\n\r\n            // outer element - container\r\n            React.createElement(\r\n                this.props.outerElementType,\r\n                {\r\n                    ref: this.containerElement,\r\n                    className: this.className + '_Container',\r\n                    style: {\r\n                        direction: this.props.direction,\r\n                        height: this.props.height,\r\n                        width: this.props.width,\r\n                        position: 'relative',\r\n                        overflow,\r\n                        ...this.props.style,\r\n                        opacity: this.state.opacity\r\n                    },\r\n                    onScroll: onScroll,\r\n                },\r\n\r\n                // inner element - scrollable area\r\n                React.createElement(\r\n                    this.props.innerElementType,\r\n                    {\r\n                        ref: this.props.innerRef,\r\n                        className: this.className + '_ScrollableArea',\r\n                        style: {\r\n                            height: this.getScrollableHeight(),\r\n                            width: this.getScrollableWidth()\r\n                        }\r\n                    },\r\n                    this.renderCells()\r\n                )\r\n            ));\r\n    }\r\n\r\n    private renderCells() {\r\n\r\n        // get cell indexes to render\r\n        const columns = this.windowCalc.elementsInRange(\r\n            'column',\r\n            this.state.scrollLeft,\r\n            this.state.scrollLeft + this.props.width,\r\n            this.props.overscanColumnsCount,\r\n            this.props.columnWidth,\r\n            this.minColumnsToRender,\r\n            this.props.columnCount\r\n        );\r\n        const rows = this.windowCalc.elementsInRange(\r\n            'row',\r\n            this.state.scrollTop,\r\n            this.state.scrollTop + this.props.height,\r\n            this.props.overscanRowCount,\r\n            this.props.rowHeight,\r\n            this.minRowsToRender,\r\n            this.props.rowCount\r\n        );\r\n\r\n        // always render the same amount of items (important for recycling)\r\n        this.minColumnsToRender = columns.length;\r\n        this.minRowsToRender = rows.length;\r\n\r\n        // free unused stable keys before rendering\r\n        const originalKeys: React.Key[] = [];\r\n        for (const row of rows) {\r\n            for (const col of columns) {\r\n                originalKeys.push(this.getCellOriginalKey(col.index, row.index));\r\n            }\r\n        }\r\n        this.recycler.freeUnusedKeys(originalKeys);\r\n\r\n        // render cells\r\n        const cells: React.ReactElement[] = [];\r\n        for (const row of rows) {\r\n            for (const col of columns) {\r\n\r\n                const originalKey = this.getCellOriginalKey(col.index, row.index);\r\n                const stableKey = this.recycler.getStableKey(originalKey);\r\n\r\n                cells.push(this.renderCell(col, row, stableKey));\r\n            }\r\n        }\r\n\r\n        // sort the cells by key order (important for recycling)\r\n        cells.sort((a, b) => ReactUtils.compareKeys(a.key, b.key));\r\n\r\n        return cells;\r\n    }\r\n\r\n    private renderCell(col: ElementInfo, row: ElementInfo, stableKey: React.Key): React.ReactElement {\r\n        return (\r\n            <VirtualCell\r\n                className={this.className + '_Cell'}\r\n                key={stableKey}\r\n                direction={this.props.direction}\r\n                height={row.size}\r\n                width={col.size}\r\n                top={row.position}\r\n                left={col.position}\r\n            >\r\n                {this.props.children({\r\n                    colIndex: col.index,\r\n                    rowIndex: row.index,\r\n                    height: row.size,\r\n                    width: col.size\r\n                })}\r\n            </VirtualCell>\r\n        );\r\n    }\r\n\r\n    //\r\n    // scroll handlers\r\n    //\r\n\r\n    private handleScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n        const normalized = ScrollUtils.normalizeScrollEvent(e, this.props.direction);\r\n        this.setScrollState({\r\n            scrollTop: normalized.scrollTop,\r\n            scrollLeft: normalized.normalizedScrollLeft\r\n        });\r\n    };\r\n\r\n    private containerElementScroll(e: ScrollEvent): void {\r\n        switch (this.props.scrollDirection) {\r\n\r\n            case 'both':\r\n                window.requestAnimationFrame(() => {\r\n                    this.containerElement.current.scrollTop = e.scrollTop;\r\n                    this.containerElement.current.scrollLeft = e.scrollLeft;\r\n                });\r\n                break;\r\n\r\n            case 'vertical':\r\n                window.requestAnimationFrame(() => {\r\n                    this.containerElement.current.scrollTop = e.scrollTop;\r\n                });\r\n                break;\r\n\r\n            case 'horizontal':\r\n                window.requestAnimationFrame(() => {\r\n                    this.containerElement.current.scrollLeft = e.scrollLeft;\r\n                });\r\n                break;\r\n\r\n            case 'none':\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Invalid ${nameof(this.props.scrollDirection)} value: '${this.props.scrollDirection}'.`);\r\n        }\r\n    }\r\n\r\n    private setScrollState(e: ScrollEvent): void {\r\n        switch (this.props.scrollDirection) {\r\n\r\n            case 'both':\r\n                this.setState(e);\r\n                break;\r\n\r\n            case 'vertical':\r\n                this.setState({ scrollTop: e.scrollTop });\r\n                break;\r\n\r\n            case 'horizontal':\r\n                this.setState({ scrollLeft: e.scrollLeft });\r\n                break;\r\n\r\n            case 'none':\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Invalid ${nameof(this.props.scrollDirection)} value: '${this.props.scrollDirection}'.`);\r\n        }\r\n    }\r\n\r\n    //\r\n    // render helpers\r\n    //\r\n\r\n    private getCellOriginalKey(colIndex: number, rowIndex: number): React.Key {\r\n        return `${colIndex}, ${rowIndex}`;\r\n    }\r\n\r\n    private rtlRedrawHack() {\r\n        // There's an issue when dynamically removing columns in RTL.\r\n        // For some reason Chrome does not correctly redraw in RTL mode...\r\n        // https://stackoverflow.com/questions/8840580/force-dom-redraw-refresh-on-chrome-mac#29946331\r\n        const opacity = ((this.props.style?.opacity as number) ?? 1) - 0.01;\r\n        this.setState(\r\n            { opacity },\r\n            () => setTimeout(() => this.setState({ opacity: undefined }), 0)\r\n        );\r\n    }\r\n}","export * from './recycleManager';\r\nexport * from './VirtualCell';\r\nexport * from './VirtualWindow';\r\nexport * from './windowCalculator';\r\n","module.exports = require(\"@emotion/styled-base\");","import * as React from 'react';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\n\r\nexport interface CustomScrollbarsProps {\r\n    style?: React.CSSProperties;\r\n    onScroll?: any;\r\n    forwardedRef: React.RefFunction<any> | React.RefObject<any>;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nclass CustomScrollbarsInner extends React.PureComponent<CustomScrollbarsProps> {\r\n    public render() {\r\n\r\n        // https://github.com/bvaughn/react-window/issues/110#issuecomment-469061213\r\n\r\n        const refSetter = (elem: any) => {\r\n            if (!this.props.forwardedRef)\r\n                return;\r\n\r\n            const ref = (elem || {}).view;\r\n            if (typeof this.props.forwardedRef === 'function') {\r\n                this.props.forwardedRef(ref);\r\n            } else {\r\n                (this.props.forwardedRef as any).current = ref;\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Scrollbars\r\n                ref={refSetter}\r\n                style={{\r\n                    ...this.props.style,\r\n                    overflow: 'hidden',\r\n                    direction: 'ltr'\r\n                }}\r\n                onScroll={this.props.onScroll}\r\n            >\r\n                {this.props.children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport const CustomScrollbars = React.forwardRef((props, ref) => (\r\n    <CustomScrollbarsInner {...props} forwardedRef={ref as any} />\r\n));\r\nCustomScrollbars.displayName = 'CustomScrollbars';","import * as React from 'react';\r\nimport { CustomScrollbars } from '../internal/CustomScrollbars';\r\nimport { DomUtils } from '../internal/utils';\r\nimport { RenderWindowCellProps, VirtualWindow, WindowCalculator } from '../internal/window';\r\nimport { DocDir, SizeCallback } from '../types';\r\n\r\nexport interface ListRowProps {\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport type ListRowRender = (index: number) => React.ReactElement<ListRowProps>;\r\n\r\nexport interface ListProps {\r\n    style?: React.CSSProperties;\r\n    dir: DocDir;\r\n    layout?: 'horizontal' | 'vertical';\r\n    height: number;\r\n    width: number;\r\n    itemCount: number;\r\n    itemSize: SizeCallback;\r\n    customScrollbar?: boolean;\r\n    overscan?: number;\r\n    onScroll?: (offset: number) => void;\r\n    children: ListRowRender;\r\n}\r\n\r\nexport class List extends React.PureComponent<ListProps> {\r\n\r\n    private get isHorizontal(): boolean {\r\n        return this.props.layout === 'horizontal';\r\n    }\r\n\r\n    private windowRef = React.createRef<VirtualWindow>();\r\n\r\n    private initialCalculator = new WindowCalculator();\r\n\r\n    public refresh() {\r\n        if (this.windowRef.current) {\r\n            this.windowRef.current.clearCache();\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    public scrollTo(offset: number): void {\r\n        if (this.windowRef.current) {\r\n\r\n            const top = (this.isHorizontal ? undefined : offset);\r\n            const left = (this.isHorizontal ? offset : undefined);\r\n\r\n            this.windowRef.current.scrollTo({\r\n                scrollTop: top,\r\n                rawScrollLeft: left,\r\n                normalizedScrollLeft: left\r\n            });\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <VirtualWindow\r\n\r\n                ref={this.windowRef}\r\n\r\n                direction={this.props.dir}\r\n                scrollDirection={this.isHorizontal ? 'horizontal' : 'vertical'}\r\n\r\n                style={Object.assign({ outline: 'none' }, this.props.style)}\r\n                outerElementType={this.getOuterElementType()}\r\n\r\n                height={this.props.height}\r\n                width={this.props.width}\r\n\r\n                columnCount={this.isHorizontal ? this.props.itemCount : 1}\r\n                rowCount={this.isHorizontal ? 1 : this.props.itemCount}\r\n\r\n                columnWidth={this.isHorizontal ? this.props.itemSize : this.props.width - this.getVerticalScrollbarWidth()}\r\n                rowHeight={this.isHorizontal ? this.props.height - this.getHorizontalScrollbarWidth() : this.props.itemSize}\r\n\r\n                overscanColumnsCount={this.isHorizontal ? this.props.overscan : 0}\r\n                overscanRowCount={this.isHorizontal ? 0 : this.props.overscan}\r\n            >\r\n                {cellProps => this.renderRow(cellProps)}\r\n            </VirtualWindow>\r\n        );\r\n    }\r\n\r\n    private renderRow(cellProps: RenderWindowCellProps) {\r\n        const index = (this.props.layout === 'horizontal' ? cellProps.colIndex : cellProps.rowIndex);\r\n        const row = this.props.children(index);\r\n\r\n        return React.cloneElement(row, {\r\n            style: {\r\n                ...row.props.style\r\n            }\r\n        });\r\n    }\r\n\r\n    //\r\n    // render helpers\r\n    //\r\n\r\n    private getVerticalScrollbarWidth(): number {\r\n        const scrollableHeight = this.getScrollableHeight();\r\n        const hasVerticalScrollbar = scrollableHeight > this.props.height;\r\n        return (hasVerticalScrollbar && DomUtils.scrollbarWidth) || 0;\r\n    }\r\n\r\n    private getHorizontalScrollbarWidth(): number {\r\n        const scrollableWidth = this.getScrollableWidth();\r\n        const hasHorizontalScrollbar = scrollableWidth > this.props.width;\r\n        return (hasHorizontalScrollbar && DomUtils.scrollbarWidth) || 0;\r\n    }\r\n\r\n    private getScrollableHeight() {\r\n        if (this.windowRef.current)\r\n            return this.windowRef.current.getScrollableHeight();\r\n\r\n        // Body not rendered yet - have to calculate independently.  \r\n        // Not so DRY, breaks encapsulation and not very efficient either but I\r\n        // couldn't find a better way to do that which is not terribly ugly...\r\n        return this.initialCalculator.getTotalSize(\r\n            'row',\r\n            this.props.itemSize,\r\n            undefined,\r\n            this.props.itemCount\r\n        );\r\n    }\r\n\r\n    private getScrollableWidth() {\r\n        if (this.windowRef.current)\r\n            return this.windowRef.current.getScrollableWidth();\r\n\r\n        // Body not rendered yet - have to calculate independently.  \r\n        // Not so DRY, breaks encapsulation and not very efficient either but I\r\n        // couldn't find a better way to do that which is not terribly ugly...\r\n        return this.initialCalculator.getTotalSize(\r\n            'column',\r\n            this.props.itemSize,\r\n            undefined,\r\n            this.props.itemCount\r\n        );\r\n    }\r\n\r\n    private getOuterElementType() {\r\n        return this.props.customScrollbar ? CustomScrollbars : undefined;\r\n    }\r\n}","module.exports = require(\"react-virtualized-auto-sizer\");","import * as React from 'react';\r\nimport { CellRender } from './TableCell';\r\n\r\nexport class ColumnBodyProps {\r\n    public children?: CellRender;\r\n}\r\n\r\nexport class ColumnBody extends React.PureComponent<ColumnBodyProps> { }","import * as React from 'react';\r\nimport { TableCellProps } from './TableCell';\r\n\r\nexport interface ColumnHeadProps extends TableCellProps {\r\n}\r\n\r\nexport class ColumnHead extends React.PureComponent<ColumnHeadProps> { }","import styled from '@emotion/styled';\r\nimport { DomUtils } from '../internal/utils';\r\n\r\nconst tableBorder = '1px solid #ddd';\r\n\r\nexport const StyledTable = styled.div`\r\n    width: 100%;\r\n    overflow-y: hidden;\r\n`;\r\n\r\nexport const StyledTableCell = styled.div`\r\n    flex: 1;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    box-sizing: border-box;\r\n\r\n    ${props => props.theme.defaultTheme ? `\r\n        padding: 8px;\r\n        vertical-align: middle;\r\n        ` : ''};\r\n`;\r\n\r\nexport const StyledTableHead = styled.div`\r\n    direction: ${props => props.theme.dir};\r\n\r\n    display: flex;\r\n    overflow-y: hidden;\r\n\r\n    /* add padding to compensate for scrollbar width */\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-right')}: ${DomUtils.scrollbarWidth}px;\r\n    \r\n    ${props => props.theme.defaultTheme ? `\r\n        border-bottom: ${tableBorder};\r\n        ` : ''};\r\n\r\n    & ${StyledTableCell} {\r\n        ${props => props.theme.defaultTheme ? `\r\n            vertical-align: bottom;\r\n            font-weight: bold;\r\n            ` : ''}\r\n    }\r\n`;\r\n\r\nexport const StyledTableBody = styled.div`\r\n    /* no style... */\r\n`;\r\n\r\nexport interface RowProps {\r\n    index: number;\r\n}\r\n\r\nexport const StyledTableRow = styled.div<RowProps>`\r\n    display: flex;\r\n    justify-content: stretch;\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    ${props => props.theme.defaultTheme ? `\r\n        border-top: ${props.index === 0 ? 'none' : tableBorder};\r\n        ` : ''}\r\n    }\r\n`;\r\n","import * as React from 'react';\r\nimport { isNullOrUndefined } from '../internal/utils';\r\nimport { RowRender } from './TableRow';\r\n\r\nexport class TableBodyProps {\r\n    public children?: RowRender;\r\n}\r\n\r\nexport class TableBody extends React.PureComponent<TableBodyProps> {\r\n\r\n    public static hasChildren(body: TableBody): boolean {\r\n        if (!body)\r\n            return false;\r\n\r\n        if (isNullOrUndefined(body.props.children))\r\n            return false;\r\n\r\n        if (typeof body.props.children === 'function')\r\n            return true;\r\n\r\n        if (Array.isArray(body.props.children))\r\n            return body.props.children.length > 0;\r\n\r\n        const childrenCount = React.Children.count(body.props.children);\r\n        return childrenCount > 0;\r\n    }\r\n}","import * as React from 'react';\r\nimport { ErrorBoundary } from '../internal/ErrorBoundary';\r\nimport { StyledTableCell } from './style';\r\n\r\nconst TableCellSymbol = '__ReactTablize__TableCell__';\r\n\r\nexport type CellContent = React.ReactNode;\r\n\r\nexport interface TableCellProps extends React.DivProps {\r\n    children?: CellContent;\r\n    visible?: boolean;\r\n}\r\n\r\nexport class TableCell extends React.PureComponent<TableCellProps> {\r\n\r\n    public static defaultProps: TableCellProps = {\r\n        [TableCellSymbol as any]: true\r\n    };\r\n\r\n    public static isTableCell(cell: unknown): cell is React.ReactElement<TableCellProps> {\r\n        return React.isValidElement(cell) && (cell.props as any)[TableCellSymbol];\r\n    }\r\n\r\n    public static getCellProps(cell: unknown): TableCellProps {\r\n        return (TableCell.isTableCell(cell) && cell.props) || {};\r\n    }\r\n\r\n    public static getCellContent(cell: unknown): CellContent {\r\n        return TableCell.isTableCell(cell) ?\r\n            cell.props.children :\r\n            cell;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <StyledTableCell {...this.props}>\r\n                <ErrorBoundary>\r\n                    {this.props.children}\r\n                </ErrorBoundary>\r\n            </StyledTableCell>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface CellRenderArgs {\r\n    rowIndex: number;\r\n    columnIndex: number;\r\n}\r\n\r\nexport type CellRender = (args: CellRenderArgs) => TableCell | CellContent;","import * as React from 'react';\r\nimport { RowContent } from './TableRow';\r\n\r\nexport interface TableHeadProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableHead extends React.PureComponent<TableHeadProps> { }","import * as React from 'react';\r\nimport { ReactUtils } from '../internal/utils';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\nimport { TableBody } from './TableBody';\r\nimport { TableCell } from './TableCell';\r\nimport { TableHead } from './TableHead';\r\n\r\nexport class TableColumnProps {\r\n    public children?: [React.SubComp<ColumnHead>, React.SubComp<ColumnBody>];\r\n}\r\n\r\nexport class TableColumn extends React.PureComponent<TableColumnProps> { \r\n\r\n    public static createHeadFromColumns(columns: TableColumn[]): TableHead {\r\n\r\n        if (columns.every(col => !ReactUtils.singleChildOfType(col, ColumnHead)))\r\n            return null;\r\n\r\n        const head: any = (\r\n            <TableHead>\r\n                {columns.map(col => {\r\n                    const colHead = ReactUtils.singleChildOfType(col, ColumnHead);\r\n                    if (!colHead)\r\n                        return null;\r\n\r\n                    // eslint-disable-next-line react/jsx-key\r\n                    return <TableCell {...(colHead.props as any)} />;\r\n                })}\r\n            </TableHead>\r\n        );\r\n        return head;\r\n    }\r\n\r\n    public static createBodyFromColumns(columns: TableColumn[]): TableBody {\r\n        const body: any = (\r\n            <TableBody>\r\n                {(rowIndex: number) => columns.map((col, columnIndex) => {\r\n                    const cellRender = ReactUtils.singleChildOfType(col, ColumnBody).props.children;\r\n                    if (!cellRender)\r\n                        return null;\r\n                    return cellRender({ rowIndex, columnIndex });\r\n                })}\r\n            </TableBody>\r\n        );\r\n        return body;\r\n    }    \r\n}","import * as React from 'react';\r\nimport { ErrorBoundary } from '../internal/ErrorBoundary';\r\nimport { OneOrMore } from '../types';\r\nimport { StyledTableRow } from './style';\r\nimport { CellContent, TableCell } from './TableCell';\r\nconst flattenDeep = require('lodash.flattendeep');\r\n\r\nconst TableRowSymbol = '__ReactTablize__TableRow__';\r\n\r\n/**\r\n * One or more cells.\r\n */\r\nexport type RowContent = OneOrMore<React.SubComp<TableCell> | CellContent>;\r\n\r\nexport interface TableRowProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableRow extends React.PureComponent<TableRowProps> {\r\n\r\n    public static defaultProps: unknown = {\r\n        [TableRowSymbol as any]: true\r\n    };\r\n\r\n    public static isTableRow(row: unknown): row is React.ReactElement<TableRowProps> {\r\n        return React.isValidElement(row) && (row.props as any)[TableRowSymbol];\r\n    }\r\n\r\n    public static getRowProps(row: unknown): TableRowProps {\r\n        return (TableRow.isTableRow(row) && row.props) || {};\r\n    }\r\n\r\n    public static getRowContent(row: unknown): RowContent {\r\n\r\n        let content: RowContent = row;\r\n\r\n        // row element\r\n        if (TableRow.isTableRow(content)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        if (Array.isArray(content)) {\r\n            content = flattenDeep(content);\r\n        }\r\n        return content;\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <StyledTableRow\r\n                {...this.props}\r\n                index={this.props.key as number}\r\n            >\r\n                <ErrorBoundary>\r\n                    {this.props.children}\r\n                </ErrorBoundary>\r\n            </StyledTableRow>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport type RowRender = (index: number) => React.SubComp<TableRow> | RowContent;","import { Theme } from '@emotion/styled';\r\nimport { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ErrorBoundary } from '../internal/ErrorBoundary';\r\nimport { asArray, ElementHeights, isNullOrUndefined, ReactUtils, SizeUtils } from '../internal/utils';\r\nimport { List } from '../list';\r\nimport { DocDir, OneOrMore, SizeCallback } from '../types';\r\nimport { StyledTable, StyledTableBody, StyledTableHead } from './style';\r\nimport { TableBody } from './TableBody';\r\nimport { TableCell } from './TableCell';\r\nimport { TableColumn } from './TableColumn';\r\nimport { TableHead } from './TableHead';\r\nimport { RowRender, TableRow, TableRowProps } from './TableRow';\r\n\r\ninterface TableHeights {\r\n    total: string | number;\r\n    head: string | number;\r\n}\r\n\r\ntype TableChildren_RowsSyntax = [React.SubComp<TableHead>, React.SubComp<TableBody>];\r\n\r\ntype TableChildren_ColumnsSyntax = OneOrMore<React.SubComp<TableColumn>>;\r\n\r\n/**\r\n * Applicable only on non-virtual tables.\r\n */\r\nexport const RowAutoSize = (): number => undefined;\r\n\r\nexport type RowKeyCallback = (index: number) => React.Key;\r\n\r\nexport class TableProps {\r\n\r\n    //\r\n    // main props\r\n    //\r\n\r\n    public rowCount: number;\r\n    public rowKey?: RowKeyCallback;\r\n    public children?: TableChildren_RowsSyntax | TableChildren_ColumnsSyntax;\r\n\r\n    //\r\n    // appearance\r\n    //\r\n\r\n    public dir?: DocDir = 'ltr';\r\n    public className?: string;\r\n    public style?: React.CSSProperties;\r\n    /**\r\n     * Row height in pixels.  \r\n     * \r\n     * Default: 50\r\n     */\r\n    public rowHeight?: number | SizeCallback = 50;\r\n    public placeholder?: React.ReactNode;\r\n    public defaultStyle?= true;\r\n    public customScrollbars?: boolean;\r\n\r\n    //\r\n    // virtualization\r\n    //\r\n\r\n    /**\r\n     * Number of extra buffer items to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 20\r\n     */\r\n    public overscanCount?= 20;\r\n}\r\n\r\nexport class Table extends React.PureComponent<TableProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n    public static readonly defaultHeadHeight = '40px';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = TableHead;\r\n\r\n    public static Body = TableBody;\r\n\r\n    public static Row = TableRow;\r\n\r\n    public static Cell = TableCell;\r\n\r\n    public static Column = TableColumn;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps: unknown = new TableProps();\r\n\r\n    private tableElement = React.createRef<List>();\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public refresh() {\r\n        if (this.tableElement.current) {\r\n            this.tableElement.current.refresh();\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        // head & body\r\n        let head = ReactUtils.singleChildOfType(this, TableHead);\r\n        let body = ReactUtils.singleChildOfType(this, TableBody);\r\n        const columns = ReactUtils.childrenOfType(this, TableColumn);\r\n\r\n        // columns\r\n        if (columns && columns.length) {\r\n            if (head || body)\r\n                throw new Error('Can not specify head and/or body when specifying table columns.');\r\n\r\n            head = TableColumn.createHeadFromColumns(columns);\r\n            body = TableColumn.createBodyFromColumns(columns);\r\n        }\r\n\r\n        // render\r\n        return (\r\n            <ThemeProvider theme={this.getTheme()}>\r\n                <ErrorBoundary>\r\n                    <StyledTable\r\n                        className={this.props.className}\r\n                        style={{\r\n                            ...this.props.style,\r\n                            ...SizeUtils.getElementHeights(this, Table.defaultHeight)\r\n                        }}\r\n                    >\r\n                        {this.renderHead(head)}\r\n                        {this.renderBody(head, body)}\r\n                    </StyledTable>\r\n                </ErrorBoundary>\r\n            </ThemeProvider>\r\n        );\r\n    }\r\n\r\n    private renderHead(head: TableHead) {\r\n\r\n        if (!head)\r\n            return null;\r\n\r\n        const { children, ...divProps } = head.props;\r\n\r\n        return (\r\n            <StyledTableHead\r\n                dir={this.props.dir as any}\r\n                {...divProps}\r\n                style={{\r\n                    ...head.props.style,\r\n                    ...SizeUtils.getElementHeights(head, Table.defaultHeadHeight)\r\n                }}\r\n            >\r\n                {React.Children.map(children, this.renderCell)}\r\n            </StyledTableHead>\r\n        );\r\n    }\r\n\r\n    private renderBody(head: TableHead, body: TableBody) {\r\n\r\n        const bodyHeights = this.getBodyHeights(this, head, {\r\n            total: Table.defaultHeight,\r\n            head: Table.defaultHeadHeight\r\n        });\r\n\r\n        const showPlaceholder = (this.props.rowCount === 0 || !TableBody.hasChildren(body));\r\n        const rowRender = body?.props.children;\r\n\r\n        return (\r\n            <StyledTableBody\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    ...bodyHeights\r\n                }}\r\n            >\r\n                <ErrorBoundary>\r\n                    {showPlaceholder && this.renderRowsPlaceholder()}\r\n                    {!showPlaceholder && (\r\n                        <AutoSizer>\r\n                            {({ width, height }) => (\r\n                                <List\r\n                                    ref={this.tableElement}\r\n                                    style={{ outline: 'none' }}\r\n                                    dir={this.props.dir}\r\n                                    layout=\"vertical\"\r\n                                    height={height}\r\n                                    width={width}\r\n                                    itemCount={this.props.rowCount}\r\n                                    itemSize={this.getRowHeight}\r\n                                    overscan={this.props.overscanCount}\r\n                                    customScrollbar={this.props.customScrollbars}\r\n                                >\r\n                                    {index => this.renderBodyRow(index, rowRender)}\r\n                                </List>\r\n                            )}\r\n                        </AutoSizer>\r\n                    )}\r\n                </ErrorBoundary>\r\n            </StyledTableBody>\r\n        );\r\n    }\r\n\r\n    private renderBodyRow(index: number, rowRender: RowRender) {\r\n        if (!rowRender)\r\n            return null;\r\n\r\n        const row = rowRender(index);\r\n        let rowContent = TableRow.getRowContent(row);\r\n        rowContent = asArray(rowContent).map(this.renderCell);\r\n\r\n        // already a row - just adjust the content\r\n        if (TableRow.isTableRow(row)) {\r\n            const rowKey = this.getRowKey(row.props, index);\r\n            return React.cloneElement(row, { key: rowKey }, rowContent);\r\n        }\r\n\r\n        // not a row - wrap content with row element\r\n        else {\r\n            const rowKey = this.getRowKey({}, index);\r\n            return (\r\n                <TableRow key={rowKey}>\r\n                    {rowContent}\r\n                </TableRow>\r\n            );\r\n        }\r\n    }\r\n\r\n    private renderCell(cell: unknown, columnIndex: number) {\r\n        const cellProps = TableCell.getCellProps(cell);\r\n        if (cellProps.visible === false)\r\n            return null;\r\n\r\n        // already a cell - just add key and return\r\n        if (TableCell.isTableCell(cell)) {\r\n            return React.cloneElement(cell, { key: columnIndex });\r\n        }\r\n\r\n        // not a cell - wrap content with cell element\r\n        return (\r\n            <TableCell key={columnIndex}>\r\n                {cell}\r\n            </TableCell>\r\n        );\r\n    }\r\n\r\n    private renderRowsPlaceholder() {\r\n\r\n        if (this.props.placeholder)\r\n            return this.props.placeholder;\r\n\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    No Items to Display\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //\r\n    // helpers\r\n    //\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir,\r\n            defaultTheme: this.props.defaultStyle\r\n        };\r\n    }\r\n\r\n    private getRowKey(rowProps: TableRowProps, index: number): React.Key {\r\n\r\n        if (!isNullOrUndefined(rowProps.key))\r\n            return rowProps.key;\r\n\r\n        if (typeof this.props.rowKey === 'function')\r\n            return this.props.rowKey(index);\r\n\r\n        return index;\r\n    }\r\n\r\n    private getRowHeight = (rowIndex: number): number => {\r\n        if (typeof this.props.rowHeight === 'function')\r\n            return this.props.rowHeight(rowIndex);\r\n        return this.props.rowHeight;\r\n    };\r\n\r\n    private getBodyHeights(table: React.ComponentWithStyle, head: React.ComponentWithStyle, defaultHeights: TableHeights): ElementHeights {\r\n\r\n        const totalHeights = SizeUtils.getElementHeights(table, defaultHeights.total);\r\n        const headHeight = this.getHeadHeight(head, defaultHeights.head);\r\n        const bodyHeights = SizeUtils.getElementHeights(table, undefined);\r\n\r\n        let height = bodyHeights.height || totalHeights.height;\r\n        let minHeight = bodyHeights.minHeight || totalHeights.minHeight;\r\n        let maxHeight = bodyHeights.maxHeight || totalHeights.maxHeight;\r\n\r\n        if (headHeight) {\r\n            height = `calc(${height} - ${headHeight})`;\r\n            if (minHeight)\r\n                minHeight = `calc(${minHeight} - ${headHeight})`;\r\n            if (maxHeight)\r\n                maxHeight = `calc(${maxHeight} - ${headHeight})`;\r\n        }\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    private getHeadHeight(head: React.ComponentWithStyle, defaultHeight: string | number): string | number {\r\n        if (head) {\r\n            return SizeUtils.getElementHeights(head, defaultHeight).height;\r\n        }\r\n        return 0;\r\n    }\r\n}","export * from './ColumnBody';\r\nexport * from './ColumnHead';\r\nexport * from './Table';\r\nexport * from './TableBody';\r\nexport * from './TableCell';\r\nexport * from './TableColumn';\r\nexport * from './TableHead';\r\nexport * from './TableRow';\r\n","import * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ErrorBoundary } from '../internal/ErrorBoundary';\r\nimport { areShallowEqual, DomUtils, ScrollUtils, SizeUtils } from '../internal/utils';\r\nimport { VirtualWindow, VirtualWindowProps, WindowCalculator } from '../internal/window';\r\nimport { DocDir, ScrollEvent, SizeCallback } from '../types';\r\n\r\nexport enum TileKey {\r\n    HeaderLeft = 'Header_Left',\r\n    HeaderCenter = 'Header_Center',\r\n    HeaderRight = 'Header_Right',\r\n    BodyLeft = 'Body_Left',\r\n    BodyCenter = 'Body_Center',\r\n    BodyRight = 'Body_Right',\r\n    FooterLeft = 'Footer_Left',\r\n    FooterCenter = 'Footer_Center',\r\n    FooterRight = 'Footer_Right'\r\n}\r\n\r\nexport type TileVerticalPosition = 'header' | 'body' | 'footer';\r\nexport type TileHorizontalPosition = 'left' | 'center' | 'right';\r\n\r\nexport interface TilePosition {\r\n    vertical: TileVerticalPosition;\r\n    horizontal: TileHorizontalPosition;\r\n}\r\n\r\nexport interface RenderCellProps {\r\n    /**\r\n     * Absolute column index, taking into account fixed columns.\r\n     */\r\n    absColIndex: number;\r\n    /**\r\n     * Absolute row index, taking into account fixed header and/or footer.\r\n     */\r\n    absRowIndex: number;\r\n    /**\r\n     * Column index relative to the current tile.\r\n     */\r\n    relColIndex: number;\r\n    /**\r\n     * Row index relative to the current tile.\r\n     */\r\n    relRowIndex: number;\r\n    tileKey: TileKey;\r\n    tilePosition: TilePosition;\r\n    /**\r\n     * The height of the rendered cell.  \r\n     * You don't have to do anything with it, it's just an informative prop.\r\n     */\r\n    height: number;\r\n    /**\r\n     * The width of the rendered cell.  \r\n     * You don't have to do anything with it, it's just an informative prop.\r\n     */\r\n    width: number;\r\n}\r\n\r\ninterface TileEntry {\r\n    ref: React.RefObject<VirtualWindow>;\r\n    position: TilePosition;\r\n    tileRowTop: number;\r\n    rowIndexOffset: number;\r\n    columnIndexOffset: number;\r\n    props: Omit<VirtualWindowProps, \"children\">;\r\n}\r\n\r\ntype TilesMap = {\r\n    [key in TileKey]: TileEntry\r\n};\r\n\r\nclass GridState {\r\n    public scrollTop = 0;\r\n    public normalizedScrollLeft = 0;\r\n    public rawScrollLeft: number;\r\n}\r\n\r\nexport class GridProps {\r\n\r\n    /**\r\n     * Number of columns in the grid, excluding fixed columns.\r\n     */\r\n    public columnCount: number;\r\n    /**\r\n     * Number of rows in the grid, excluding the header and footer.\r\n     */\r\n    public rowCount: number;\r\n    public columnWidth: number | SizeCallback;\r\n    public rowHeight: number | SizeCallback;\r\n    public overscanColumnsCount?= 0;\r\n    public overscanRowCount?= 0;\r\n\r\n    public fixedHeaderHeight?= 0;\r\n    public fixedFooterHeight?= 0;\r\n    public fixedLeftWidth?= 0;\r\n    public fixedRightWidth?= 0;\r\n\r\n    public style?: React.CSSProperties;\r\n    public className?: string;\r\n\r\n    public onClick?: React.MouseEventHandler<HTMLElement>;\r\n    public onScroll?: (e: ScrollEvent) => void;\r\n\r\n    public children: (props: RenderCellProps) => React.ReactNode;\r\n}\r\n\r\nexport class Grid extends React.PureComponent<GridProps, GridState> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n\r\n    public static defaultProps: unknown = new GridProps();\r\n\r\n    private get direction(): DocDir {\r\n        return this.props.style?.direction === 'rtl' ? 'rtl' : 'ltr';\r\n    }\r\n\r\n    private get activeTiles(): TileKey[] {\r\n        return Object.keys(this.tiles) as TileKey[];\r\n    }\r\n\r\n    private width = 0;\r\n    private height = 0;\r\n\r\n    private tiles: Partial<TilesMap> = {};\r\n\r\n    private initialCalculator = new WindowCalculator();\r\n\r\n    private prevProps: GridProps;\r\n\r\n    constructor(props: GridProps) {\r\n        super(props);\r\n        this.state = new GridState();\r\n        this.tiles = this.createTilesMap();\r\n    }\r\n\r\n    public refresh() {\r\n        this.clearCache();\r\n        this.forceUpdate();\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        if (!areShallowEqual(this.props, this.prevProps)) {\r\n            this.prevProps = this.props;\r\n            this.clearCache();\r\n        }\r\n\r\n        return (\r\n            <ErrorBoundary>\r\n                <div\r\n                    className={this.props.className}\r\n                    style={{\r\n                        direction: this.direction,\r\n                        width: '100%',\r\n                        ...this.props.style,\r\n                        ...SizeUtils.getElementHeights(this, Grid.defaultHeight)\r\n                    }}\r\n                    onClick={this.props.onClick}\r\n                >\r\n                    <AutoSizer>\r\n                        {({ width, height }) => this.renderGrid(width, height)}\r\n                    </AutoSizer>\r\n                </div>\r\n            </ErrorBoundary >\r\n        );\r\n    }\r\n\r\n    private renderGrid(width: number, height: number) {\r\n\r\n        // assign width and height\r\n        if (this.width !== width || this.height !== height) {\r\n            setTimeout(() => this.refresh(), 0);\r\n        }\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        // render\r\n        return (\r\n            <div\r\n                className={this.createClassName('Main_Container')}\r\n                style={{\r\n                    direction: this.direction,\r\n                    position: 'relative',\r\n                    height: this.getContainerHeight(),\r\n                    width: this.getContainerWidth(),\r\n                    overflow: 'auto',\r\n                    ...this.props.style\r\n                }}\r\n                onScroll={this.handleScroll}\r\n            >\r\n                <div\r\n                    className={this.createClassName('Main_ScrollableArea')}\r\n                    style={{\r\n                        height: this.getScrollableHeight(),\r\n                        width: this.getScrollableWidth()\r\n                    }}\r\n                >\r\n                    {this.renderTilesRow('header')}\r\n                    {this.renderTilesRow('body')}\r\n                    {this.renderTilesRow('footer')}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderTilesRow(rowKey: TileVerticalPosition) {\r\n        const tileKeys = this.getTilesInRow(rowKey);\r\n        if (!tileKeys?.length)\r\n            return null;\r\n\r\n        const firstTile = this.tiles[tileKeys[0]];\r\n\r\n        const isRtl = this.direction === 'rtl';\r\n        const rightOrLeft = isRtl ? 'right' : 'left';\r\n\r\n        const isSticky = DomUtils.isPositionStickySupported;\r\n        const position = isSticky ? 'sticky' : 'absolute';\r\n        const topOffset = (isSticky ? 0 : this.state.scrollTop);\r\n        const leftOffset = (isSticky ? 0 : this.state.normalizedScrollLeft);\r\n\r\n        const width = tileKeys\r\n            .map(key => this.tiles[key].props.width)\r\n            .reduce((total, cur) => total + cur, 0);\r\n\r\n        // https://stackoverflow.com/questions/58578298/position-sticky-with-direction-rtl-not-working\r\n        const marginLeft = (isSticky && isRtl ?\r\n            (this.state.rawScrollLeft ?? (this.getScrollableWidth() - width)) :\r\n            0);\r\n\r\n        return (\r\n            <div\r\n                className={this.createClassName('TilesRow')}\r\n                style={{\r\n                    display: 'flex',\r\n                    position,\r\n                    top: firstTile.tileRowTop + topOffset,\r\n                    [rightOrLeft]: 0 + leftOffset,\r\n                    marginLeft,\r\n                    height: firstTile.props.height,\r\n                    width\r\n                }}\r\n            >\r\n                {tileKeys.map(this.renderTile)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private renderTile = (tileKey: TileKey): React.ReactNode => {\r\n        const { ref, props, rowIndexOffset, columnIndexOffset } = this.tiles[tileKey];\r\n        return (\r\n            <VirtualWindow\r\n                key={tileKey}\r\n                ref={ref}\r\n                {...props}\r\n            >\r\n                {renderProps => this.props.children({\r\n                    tileKey,\r\n                    tilePosition: this.getTilePosition(tileKey),\r\n                    absRowIndex: renderProps.rowIndex + rowIndexOffset,\r\n                    absColIndex: renderProps.colIndex + columnIndexOffset,\r\n                    relRowIndex: renderProps.rowIndex,\r\n                    relColIndex: renderProps.colIndex,\r\n                    height: renderProps.height,\r\n                    width: renderProps.width\r\n                })}\r\n            </VirtualWindow>\r\n        );\r\n    };\r\n\r\n    //\r\n    // event handlers\r\n    //\r\n\r\n    private handleScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n        const normalized = ScrollUtils.normalizeScrollEvent(e, this.direction);\r\n        const isRtl = this.direction === 'rtl';\r\n\r\n        if (!DomUtils.isPositionStickySupported || isRtl) {\r\n\r\n            // Need to restore tiles position\r\n            this.setState({\r\n                scrollTop: normalized.scrollTop,\r\n                normalizedScrollLeft: normalized.normalizedScrollLeft,\r\n                rawScrollLeft: normalized.rawScrollLeft\r\n            });\r\n        }\r\n\r\n        // Scroll tiles content\r\n        for (const tileKey of this.activeTiles) {\r\n            const { ref } = this.tiles[tileKey];\r\n            ref.current.scrollTo(normalized);\r\n        }\r\n    };\r\n\r\n    //\r\n    // render helpers\r\n    //\r\n\r\n    private clearCache() {\r\n        this.initialCalculator = new WindowCalculator();\r\n        this.tiles = this.createTilesMap();\r\n    }\r\n\r\n    private getTilesInRow(rowKey: TileVerticalPosition): TileKey[] {\r\n        return this.activeTiles.filter(key => this.tiles[key].position.vertical === rowKey);\r\n    }\r\n\r\n    private createTilesMap(): Partial<TilesMap> {\r\n        this.resetTiles();\r\n\r\n        const map: Partial<TilesMap> = {};\r\n\r\n        const hasHeader = !!this.props.fixedHeaderHeight;\r\n        const hasFooter = !!this.props.fixedFooterHeight;\r\n        const hasFixedLeftColumn = !!this.props.fixedLeftWidth;\r\n        const hasFixedRightColumn = !!this.props.fixedRightWidth;\r\n\r\n        const createTilesMapEntry = this.createTileMapEntryFactory();\r\n\r\n        // header\r\n\r\n        if (hasHeader) {\r\n\r\n            if (hasFixedLeftColumn) {\r\n                map[TileKey.HeaderLeft] = createTilesMapEntry(TileKey.HeaderLeft);\r\n            }\r\n\r\n            map[TileKey.HeaderCenter] = createTilesMapEntry(TileKey.HeaderCenter);\r\n\r\n            if (hasFixedRightColumn) {\r\n                map[TileKey.HeaderRight] = createTilesMapEntry(TileKey.HeaderRight);\r\n            }\r\n        }\r\n\r\n        // body\r\n\r\n        if (hasFixedLeftColumn) {\r\n            map[TileKey.BodyLeft] = createTilesMapEntry(TileKey.BodyLeft);\r\n        }\r\n\r\n        map[TileKey.BodyCenter] = createTilesMapEntry(TileKey.BodyCenter);\r\n\r\n        if (hasFixedRightColumn) {\r\n            map[TileKey.BodyRight] = createTilesMapEntry(TileKey.BodyRight);\r\n        }\r\n\r\n        // footer\r\n\r\n        if (hasFooter) {\r\n\r\n            if (hasFixedLeftColumn) {\r\n                map[TileKey.FooterLeft] = createTilesMapEntry(TileKey.FooterLeft);\r\n            }\r\n\r\n            map[TileKey.FooterCenter] = createTilesMapEntry(TileKey.FooterCenter);\r\n\r\n            if (hasFixedRightColumn) {\r\n                map[TileKey.FooterRight] = createTilesMapEntry(TileKey.FooterRight);\r\n            }\r\n        }\r\n\r\n        return map;\r\n    }\r\n\r\n    private createTileMapEntryFactory() {\r\n\r\n        // calculate base dimensions\r\n\r\n        const horizontalScrollbarWidth = this.getHorizontalScrollbarWidth();\r\n        const verticalScrollbarWidth = this.getVerticalScrollbarWidth();\r\n\r\n        const containerHeight = this.getContainerHeight();\r\n        const containerWidth = this.getContainerWidth();\r\n\r\n        const headerHeight = this.props.fixedHeaderHeight;\r\n        const footerHeight = this.props.fixedFooterHeight;\r\n        const bodyHeight = containerHeight - horizontalScrollbarWidth - headerHeight - footerHeight;\r\n\r\n        const leftWidth = this.props.fixedLeftWidth;\r\n        const rightWidth = this.props.fixedRightWidth;\r\n        const centerWidth = containerWidth - verticalScrollbarWidth - leftWidth - rightWidth;\r\n\r\n        // create factory method\r\n\r\n        return (tileKey: TileKey): TileEntry => {\r\n\r\n            const { vertical, horizontal } = this.getTilePosition(tileKey);\r\n\r\n            const isVerticalFixed = vertical === 'header' || vertical === 'footer';\r\n            const isHorizontalFixed = horizontal === 'left' || horizontal === 'right';\r\n            const isCorner = isVerticalFixed && isHorizontalFixed;\r\n\r\n            return {\r\n                ref: React.createRef<VirtualWindow>(),\r\n\r\n                position: {\r\n                    vertical,\r\n                    horizontal\r\n                },\r\n\r\n                tileRowTop: vertical === 'header' ? 0 :\r\n                    vertical === 'body' ? headerHeight :\r\n                        headerHeight + bodyHeight,\r\n\r\n                rowIndexOffset: vertical === 'header' ? 0 :\r\n                    vertical === 'body' ? (headerHeight && 1) :\r\n                        this.props.rowCount + (headerHeight && 1),\r\n\r\n                columnIndexOffset: horizontal === 'left' ? 0 :\r\n                    horizontal === 'center' ? (leftWidth && 1) :\r\n                        this.props.columnCount + (leftWidth && 1),\r\n\r\n                props: {\r\n                    className: this.createClassName(tileKey),\r\n\r\n                    controlledScroll: true,\r\n\r\n                    scrollDirection: isCorner ? 'none' :\r\n                        isVerticalFixed ? 'horizontal' :\r\n                            isHorizontalFixed ? 'vertical' :\r\n                                'both',\r\n\r\n                    direction: this.direction,\r\n\r\n                    height: vertical === 'header' ? headerHeight :\r\n                        vertical === 'body' ? bodyHeight :\r\n                            footerHeight,\r\n\r\n                    width: horizontal === 'left' ? leftWidth :\r\n                        horizontal === 'center' ? centerWidth :\r\n                            rightWidth,\r\n\r\n                    columnCount: horizontal === 'left' ? 1 :\r\n                        horizontal === 'center' ? this.props.columnCount :\r\n                            1,\r\n\r\n                    rowCount: vertical === 'header' ? 1 :\r\n                        vertical === 'body' ? this.props.rowCount :\r\n                            1,\r\n\r\n                    columnWidth: horizontal === 'left' ? leftWidth :\r\n                        horizontal === 'center' ? this.props.columnWidth :\r\n                            rightWidth,\r\n\r\n                    rowHeight: vertical === 'header' ? headerHeight :\r\n                        vertical === 'body' ? this.props.rowHeight :\r\n                            footerHeight,\r\n\r\n                    overscanColumnsCount: horizontal === 'left' ? 0 :\r\n                        horizontal === 'center' ? this.props.overscanColumnsCount :\r\n                            0,\r\n\r\n                    overscanRowCount: vertical === 'header' ? 0 :\r\n                        vertical === 'body' ? this.props.overscanRowCount :\r\n                            0\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    private getTilePosition(tileKey: TileKey): TilePosition {\r\n        const [vertical, horizontal] = tileKey.toLowerCase().split('_');\r\n        return {\r\n            vertical,\r\n            horizontal\r\n\r\n        } as TilePosition;\r\n    }\r\n\r\n    private resetTiles() {\r\n        for (const tileKey of this.activeTiles) {\r\n            this.tiles[tileKey].ref.current?.clearCache();\r\n        }\r\n        this.tiles = {};\r\n    }\r\n\r\n    private getContainerHeight(): number {\r\n        const scrollableHeight = this.getScrollableHeight();\r\n        const horizontalScrollbarWidth = this.getHorizontalScrollbarWidth();\r\n        return Math.min(this.height, scrollableHeight + horizontalScrollbarWidth);\r\n    }\r\n\r\n    private getContainerWidth(): number {\r\n        const scrollableWidth = this.getScrollableWidth();\r\n        const verticalScrollbarWidth = this.getVerticalScrollbarWidth();\r\n        return Math.min(this.width, scrollableWidth + verticalScrollbarWidth);\r\n    }\r\n\r\n    private getScrollableHeight() {\r\n\r\n        const headerHeight = this.props.fixedHeaderHeight;\r\n        const footerHeight = this.props.fixedFooterHeight;\r\n        const bodyHeight = this.getBodyScrollableHeight();\r\n\r\n        return bodyHeight + headerHeight + footerHeight;\r\n    }\r\n\r\n    private getScrollableWidth() {\r\n\r\n        const leftWidth = this.props.fixedLeftWidth;\r\n        const rightWidth = this.props.fixedRightWidth;\r\n        const bodyWidth = this.getBodyScrollableWidth();\r\n\r\n        return bodyWidth + leftWidth + rightWidth;\r\n    }\r\n\r\n    private getBodyScrollableHeight() {\r\n        const body = this.tiles[TileKey.BodyCenter]?.ref?.current;\r\n        if (body)\r\n            return body.getScrollableHeight();\r\n\r\n        // Body not rendered yet - have to calculate independently.  \r\n        // Not so DRY, breaks encapsulation and not very efficient either but I\r\n        // couldn't find a better way to do that which is not terribly ugly...\r\n        return this.initialCalculator.getTotalSize(\r\n            'row',\r\n            this.props.rowHeight,\r\n            null, // this.props.estimatedRowHeight,\r\n            this.props.rowCount\r\n        );\r\n    }\r\n\r\n    private getBodyScrollableWidth() {\r\n        const body = this.tiles[TileKey.BodyCenter]?.ref?.current;\r\n        if (body)\r\n            return body.getScrollableWidth();\r\n\r\n        // Body not rendered yet - have to calculate independently.  \r\n        // Not so DRY, breaks encapsulation and not very efficient either but I\r\n        // couldn't find a better way to do that which is not terribly ugly...\r\n        return this.initialCalculator.getTotalSize(\r\n            'column',\r\n            this.props.columnWidth,\r\n            null, // this.props.estimatedColumnWidth,\r\n            this.props.columnCount\r\n        );\r\n    }\r\n\r\n    private getVerticalScrollbarWidth(): number {\r\n        const scrollableHeight = this.getScrollableHeight();\r\n        const hasVerticalScrollbar = scrollableHeight > this.height;\r\n        return (hasVerticalScrollbar && DomUtils.scrollbarWidth) || 0;\r\n    }\r\n\r\n    private getHorizontalScrollbarWidth(): number {\r\n        const scrollableWidth = this.getScrollableWidth();\r\n        const hasHorizontalScrollbar = scrollableWidth > this.width;\r\n        return (hasHorizontalScrollbar && DomUtils.scrollbarWidth) || 0;\r\n    }\r\n\r\n    /**\r\n     * We are only using classes for easier debug inspection...\r\n     */\r\n    private createClassName(className: string): string {\r\n        return `ReactTablize__VirtualGrid__${className}`;\r\n    }\r\n}","module.exports = require(\"react-custom-scrollbars\");","module.exports = require(\"emotion-theming\");","export * from './grid';\r\nexport * from './list';\r\nexport * from './table';\r\nexport * from './types';\r\n","module.exports = require(\"lodash.flattendeep\");"],"sourceRoot":""}