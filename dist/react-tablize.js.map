{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\ErrorBoundary.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\reactUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridFooter.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\styled.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableColumn.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableRow.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\index.ts","external \"@emotion/styled\"","external \"emotion-theming\"","external \"lodash.flattendeep\"","external \"react\"","external \"react-scroll-sync\"","external \"react-virtualized-auto-sizer\"","external \"react-window\""],"names":["ErrorBoundaryState","ErrorBoundary","props","state","hasError","error","errorInfo","setState","console","children","undefined","React","ReactUtils","elem","type","prototype","isPrototypeOf","createPropsToAdd","map","child","index","propsToAdd","parentElement","Array","isArray","childrenArray","filter","elementInstanceOf","matchingChildren","childrenOfType","length","Error","name","isNullOrUndefined","val","asArray","cssSizeString","size","Number","isFinite","getHeights","style","defaultHeight","height","minHeight","maxHeight","randomInt","min","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","Math","floor","random","range","count","keys","GridBody","GridCellSymbol","GridCell","cell","cellElemChildren","cellElemProps","content","GridFooter","GridHead","styledWithTheme","scrollbarWidth","tableBorder","StyledGridView","styled","div","StyledGridHead","theme","dir","StyledGridHeadCell","StyledGridBody","StyledGridBodyCell","GridView","colIndex","columnWidth","rowHeightProp","rowIndex","columnCount","divProps","getTheme","Object","assign","direction","utils","renderHead","renderBody","renderFooter","head","singleChildOfType","cellRender","freezeColumns","defaultHeadHeight","width","display","renderHeadCell","headList","overflow","getFrozenColumnsWidth","getColumnWidth","columnIndex","extract","cellProps","cellContent","body","rowCount","rowHeight","heights","getBodyHeights","frozenColumnsWidth","freezedColumnsList","getRowHeight","renderBodyCell","footer","totalHeights","headHeight","getHeadHeight","bodyHeights","bodyHeight","bodyMinHeight","bodyMaxHeight","reduce","a","b","ColumnBodyProps","ColumnBody","ColumnHeadProps","ColumnHead","TableBodyProps","TableBody","TableCell","TableColumnProps","TableColumn","TableHeadProps","TableHead","TableRow","StyledTableView","StyledTableHead","StyledTableHeadRow","StyledTableHeadCell","StyledTableBody","StyledTableBodyRow","StyledTableBodyCell","flattenDeep","require","TableViewProps","TableViewState","TableView","columns","createHeadFromColumns","createBodyFromColumns","className","renderTableHead","renderTableBody","headCell","getHeadCellProps","visible","getHeadCellContent","headProps","getHeadProps","heightValues","renderTableRows","items","hasBody","renderItemsPlaceHolder","outline","rowRender","item","row","getRowProps","rowStyle","rowProps","rowKey","getRowKey","rowContent","getRowContent","getCellProps","getCellContent","textAlign","emptyMessage","itemId","id","col","itemIndex","childrenCount","isReactFragment","key","getItemId"],"mappings":"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","file":"react-tablize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-tablize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-tablize\"] = factory();\n\telse\n\t\troot[\"react-tablize\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as React from 'react';\r\n\r\nclass ErrorBoundaryState {\r\n    public hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<{}, ErrorBoundaryState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n        this.setState({ hasError: true });\r\n        console.error(error);\r\n    }\r\n\r\n    public render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <span>X</span>\r\n            );\r\n        }\r\n        return this.props.children !== undefined ? this.props.children : null;\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport class ReactUtils {\r\n\r\n    //\r\n    // props\r\n    //\r\n\r\n    public static getProps<T>(elem: any): T {\r\n        return (elem && (elem as any).props) || {};\r\n    }\r\n\r\n    //\r\n    // react element\r\n    //\r\n\r\n    public static elementInstanceOf<T>(elem: any, type: Constructor<T>): elem is T {\r\n        if (!elem)\r\n            return false;\r\n        if (!elem.type)\r\n            return false;\r\n\r\n        // https://stackoverflow.com/questions/39387405/using-instanceof-to-test-for-base-class-of-a-react-component\r\n        // https://stackoverflow.com/questions/14486110/how-to-check-if-a-javascript-class-inherits-another-without-creating-an-obj\r\n        // https://stackoverflow.com/questions/2464426/whats-the-difference-between-isprototypeof-and-instanceof-in-javascript\r\n\r\n        return elem.type === type ||\r\n            elem.type.prototype instanceof type ||\r\n            type.isPrototypeOf(elem.type);\r\n    }\r\n\r\n    public static isReactFragment(elem: any): boolean {\r\n        return React.isValidElement(elem) && elem.type === React.Fragment;\r\n    }\r\n\r\n    //\r\n    // react children\r\n    //\r\n\r\n    public static addPropsToChildren(children: React.ReactNode, createPropsToAdd: (child: React.ReactElement<any>, index?: number) => any) {\r\n\r\n        // https://stackoverflow.com/questions/32370994/how-to-pass-props-to-this-props-children\r\n        return React.Children.map(children, (child: React.ReactElement<any>, index: number) => {\r\n            const propsToAdd = createPropsToAdd(child, index);\r\n            return React.cloneElement(child, propsToAdd);\r\n        });\r\n    }\r\n\r\n    public static childrenArray(parentElement: any): React.ReactChild[] {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (Array.isArray(children))\r\n            return children;\r\n\r\n        return React.Children.map(children, child => child);\r\n    }\r\n\r\n    public static childrenOfType<T>(parentElement: any, type: Constructor<T>): T[] {\r\n        const children = ReactUtils.childrenArray(parentElement);\r\n        if (!children)\r\n            return null;\r\n        return children.filter(child => ReactUtils.elementInstanceOf(child, type)) as any;\r\n    }\r\n\r\n    /**\r\n     * Return the only child that matches the given type.  \r\n     * If more than one child matches an error is thrown.  \r\n     * \r\n     * Notice that this function gives no indication of the total number of\r\n     * children, only the number of matching children.\r\n     * @param parentElement \r\n     * @param type \r\n     */\r\n    public static singleChildOfType<T>(parentElement: any, type: Constructor<T>): T {\r\n        const matchingChildren = ReactUtils.childrenOfType(parentElement, type);\r\n        if (!matchingChildren || !matchingChildren.length)\r\n            return null;\r\n\r\n        if (matchingChildren.length > 1)\r\n            throw new Error(`Only one ${type.name} child element is allowed.`);\r\n\r\n        return matchingChildren[0] as any;\r\n    }\r\n\r\n    // tslint:disable-next-line:ban-types\r\n    public static singleFunctionChild(parentElement: any): Function {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (typeof parentElement.props.children !== 'function')\r\n            return null;\r\n\r\n        return children;\r\n    }\r\n}","\r\nexport function isNullOrUndefined(val: any): boolean {\r\n    return val === null || val === undefined;\r\n}\r\n\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n    if (Array.isArray(val))\r\n        return val;\r\n\r\n    return [val];\r\n}\r\n\r\nexport function cssSizeString(size: any): string {\r\n    if (Number.isFinite(size))\r\n        return size + 'px';\r\n    return size;\r\n}\r\n\r\nexport function getHeights(style: React.CSSProperties, defaultHeight: number | string): Heights {\r\n    style = style || {};\r\n\r\n    let height = style.height;\r\n    let minHeight = style.minHeight;\r\n    let maxHeight = style.maxHeight;\r\n\r\n    if (height === undefined && minHeight === undefined) {\r\n        height = defaultHeight;\r\n    }\r\n\r\n    height = cssSizeString(height);\r\n    minHeight = cssSizeString(minHeight);\r\n    maxHeight = cssSizeString(maxHeight);\r\n\r\n    return {\r\n        height,\r\n        minHeight,\r\n        maxHeight\r\n    };\r\n}\r\n\r\nexport function randomInt(min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER): number {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport function range(count: number): number[] {\r\n    // https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp\r\n    return [...Array(count || 0).keys()];\r\n}","import * as React from 'react';\r\n\r\nexport interface BodyCellRenderArgs {\r\n    rowIndex: number; \r\n    columnIndex: number;\r\n}\r\n\r\nexport type BodyCellRender = (args: BodyCellRenderArgs) => React.ReactNode;\r\n\r\nexport interface GridBodyProps extends React.DivProps {\r\n    rowCount: number;\r\n    /**\r\n     * Body row height.  \r\n     * To adjust the head height set the head `style` prop.\r\n     */\r\n    rowHeight: number | SizeCallback;\r\n    children?: BodyCellRender;\r\n}\r\n\r\nexport class GridBody extends React.PureComponent<GridBodyProps> { }","import * as React from 'react';\r\nimport { randomInt } from '../utils/utils';\r\n\r\nconst GridCellSymbol = '__ReactTablize__GridCell__' + randomInt(0);\r\n\r\nexport interface GridCellExtractResult {\r\n    props: GridCellProps;\r\n    content: React.ReactNode;\r\n}\r\n\r\nexport interface GridCellProps extends React.DivProps {\r\n}\r\n\r\nexport class GridCell extends React.PureComponent<GridCellProps> {\r\n\r\n    public static defaultProps: GridCellProps = {\r\n        [GridCellSymbol]: true\r\n    };\r\n\r\n    public static extract(cell: any): GridCellExtractResult {\r\n        if (cell && cell.props && cell.props[GridCellSymbol]) {\r\n            const { children: cellElemChildren, ...cellElemProps } = cell.props;\r\n            return {\r\n                props: cellElemProps,\r\n                content: cellElemChildren\r\n            };\r\n        } else {\r\n            return {\r\n                props: {},\r\n                content: cell\r\n            };\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return this.props.children;\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport interface GridFooterProps extends React.DivProps {    \r\n    children?: (columnIndex: number) => React.ReactNode;\r\n}\r\n\r\nexport class GridFooter extends React.PureComponent<GridFooterProps> { }","import * as React from 'react';\r\n\r\nexport interface HeadCellRenderArgs {\r\n    columnIndex: number;\r\n}\r\n\r\nexport type HeadCellRender = (args: HeadCellRenderArgs) => React.ReactNode;\r\n\r\nexport interface GridHeadProps extends React.DivProps {    \r\n    children?: HeadCellRender;\r\n}\r\n\r\nexport class GridHead extends React.PureComponent<GridHeadProps> { }","import styled, { CreateStyled } from '@emotion/styled';\r\n\r\nexport interface Theme {\r\n    dir: DocDir;\r\n}\r\n\r\nconst styledWithTheme = (styled as CreateStyled<Theme>);\r\n\r\nexport { styledWithTheme as styled };","import { styled } from '../styled';\r\n\r\n//\r\n// constants\r\n//\r\n\r\nexport const scrollbarWidth = 17;\r\nconst tableBorder = '1px solid #ddd';\r\n\r\n//\r\n// grid\r\n//\r\n\r\nexport const StyledGridView = styled.div`\r\n    label: grid-view;\r\n\r\n    width: 100%;\r\n`;\r\n\r\n//\r\n// head\r\n//\r\n\r\nexport const StyledGridHead = styled.div`\r\n    label: grid-head;\r\n\r\n    display: flex;\r\n\r\n    font-weight: bold;\r\n    vertical-align: middle;\r\n\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-right')}: ${scrollbarWidth}px;\r\n    border-bottom: ${tableBorder};\r\n`;\r\n\r\nexport const StyledGridHeadCell = styled.div`\r\n    label: grid-head-cell;\r\n\r\n    display: flex;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    align-items: flex-end;\r\n    vertical-align: bottom;\r\n`;\r\n\r\n//\r\n// body\r\n//\r\n\r\nexport const StyledGridBody = styled.div`\r\n    label: grid-body;\r\n`;\r\n\r\nexport const StyledGridBodyCell = styled.div`\r\n    label: grid-body-cell;\r\n\r\n    display: flex;\r\n\r\n    height: 100%;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    align-items: center;\r\n    vertical-align: middle;\r\n`;","import { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\n// @ts-ignore\r\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { VariableSizeGrid, VariableSizeList } from 'react-window';\r\nimport { Theme } from '../styled';\r\nimport { ErrorBoundary } from '../utils/ErrorBoundary';\r\nimport { ReactUtils } from '../utils/reactUtils';\r\nimport * as utils from '../utils/utils';\r\nimport { BodyCellRender, GridBody } from './GridBody';\r\nimport { GridCell } from './GridCell';\r\nimport { GridFooter } from './GridFooter';\r\nimport { GridHead, HeadCellRender } from './GridHead';\r\nimport { scrollbarWidth, StyledGridBody, StyledGridBodyCell, StyledGridHead, StyledGridHeadCell, StyledGridView } from './style';\r\n\r\ntype GridChildren_FullSyntax = [React.SubComp<GridHead>, React.SubComp<GridBody>];\r\ntype GridChildren = GridChildren_FullSyntax | BodyCellRender;\r\n\r\nexport interface GridViewProps extends React.DivProps {\r\n\r\n    columnCount: number;\r\n    columnWidth: number | SizeCallback;\r\n    /**\r\n     * Number of columns to freeze (always the first columns).\r\n     */\r\n    freezeColumns?: number;\r\n\r\n    dir?: DocDir;\r\n\r\n    children?: GridChildren;\r\n}\r\n\r\nexport class GridView extends React.PureComponent<GridViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n    public static readonly defaultHeadHeight = '40px';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = GridHead;\r\n\r\n    public static Body = GridBody;\r\n\r\n    // TODO: public static Footer = GridFooter;\r\n\r\n    public static Cell = GridCell;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    private headList = React.createRef<VariableSizeList>();\r\n    private freezedColumnsList = React.createRef<VariableSizeList>();\r\n\r\n    public render() {\r\n        const { columnCount, columnWidth, children, ...divProps } = this.props;\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <ScrollSync>\r\n                        <StyledGridView\r\n                            {...divProps}\r\n                            style={Object.assign(\r\n                                { direction: this.props.dir },\r\n                                this.props.style,\r\n                                utils.getHeights(divProps.style, GridView.defaultHeight))\r\n                            }\r\n                        >\r\n                            {this.renderHead()}\r\n                            {this.renderBody()}\r\n                            {this.renderFooter()}\r\n                        </StyledGridView>\r\n                    </ScrollSync>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderHead() {\r\n        const head = ReactUtils.singleChildOfType(this, GridHead);\r\n        if (!head)\r\n            return null;\r\n\r\n        const { children: cellRender, ...divProps } = head.props;\r\n        const freezeColumns = this.props.freezeColumns || 0;\r\n\r\n        return (\r\n            <StyledGridHead\r\n                {...divProps}\r\n                style={Object.assign({}, head.props.style, utils.getHeights(divProps.style, GridView.defaultHeadHeight))}\r\n            >\r\n                <ErrorBoundary>\r\n                    <AutoSizer>\r\n                        {({ width, height }) => (\r\n                            <div style={{ width, height, display: 'flex' }}>\r\n\r\n                                {/* frozen first columns */}\r\n                                {utils.range(freezeColumns).map(index => this.renderHeadCell(cellRender, index))}\r\n\r\n                                {/* main columns */}\r\n                                <ScrollSyncPane>\r\n                                    <VariableSizeList\r\n                                        ref={this.headList}\r\n                                        direction={this.props.dir}\r\n                                        style={{ overflow: 'hidden' }}\r\n                                        layout=\"horizontal\"\r\n                                        height={height}\r\n                                        width={width - this.getFrozenColumnsWidth()}\r\n                                        itemCount={this.props.columnCount - freezeColumns}\r\n                                        itemSize={colIndex => this.getColumnWidth(colIndex + freezeColumns)}\r\n                                    >\r\n                                        {({ index, style }) => this.renderHeadCell(cellRender, index + freezeColumns, style)}\r\n                                    </VariableSizeList>\r\n                                </ScrollSyncPane>\r\n\r\n                            </div>\r\n                        )}\r\n                    </AutoSizer>\r\n                </ErrorBoundary>\r\n            </StyledGridHead>\r\n        );\r\n    }\r\n\r\n    private renderHeadCell(cellRender: HeadCellRender, columnIndex: number, style?: React.CSSProperties) {\r\n\r\n        // create the cell\r\n        const cell: any = cellRender({ columnIndex });\r\n\r\n        // get cell props & content\r\n        const { props: cellProps, content: cellContent } = GridCell.extract(cell);\r\n        const columnWidth = this.getColumnWidth(columnIndex);\r\n\r\n        // render\r\n        return (\r\n            <StyledGridHeadCell\r\n                key={columnIndex}\r\n                {...cellProps}\r\n                style={Object.assign({ width: columnWidth }, cellProps.style, style)}\r\n            >\r\n                <ErrorBoundary>\r\n                    {cellContent}\r\n                </ErrorBoundary>\r\n            </StyledGridHeadCell>\r\n        );\r\n    }\r\n\r\n    private renderBody() {\r\n\r\n        const body = ReactUtils.singleChildOfType(this, GridBody);\r\n        if (!body)\r\n            return null;\r\n        const { children: cellRender, rowCount, rowHeight, ...divProps } = body.props;\r\n\r\n        const heights = this.getBodyHeights();\r\n        const freezeColumns = this.props.freezeColumns || 0;\r\n        const frozenColumnsWidth = this.getFrozenColumnsWidth();\r\n\r\n        return (\r\n            <StyledGridBody\r\n                {...divProps}\r\n                style={Object.assign({}, divProps.style, heights)}\r\n            >\r\n                <ErrorBoundary>\r\n                    <AutoSizer>\r\n                        {({ height, width }) => (\r\n                            <div style={{ width, height, display: 'flex' }}>\r\n\r\n                                {/* frozen first columns */}\r\n                                <ScrollSyncPane>\r\n                                    <VariableSizeList\r\n                                        ref={this.freezedColumnsList}\r\n                                        style={{ overflow: 'hidden' }}\r\n                                        height={height - scrollbarWidth}\r\n                                        width={frozenColumnsWidth}\r\n                                        itemCount={rowCount}\r\n                                        itemSize={this.getRowHeight(rowHeight)}\r\n                                    >\r\n                                        {({ index: rowIndex, style }) =>\r\n                                            <div style={style}>\r\n                                                {utils.range(freezeColumns)\r\n                                                    .map(columnIndex =>\r\n                                                        this.renderBodyCell(cellRender, rowIndex, columnIndex)\r\n                                                    )}\r\n                                            </div>\r\n                                        }\r\n                                    </VariableSizeList>\r\n                                </ScrollSyncPane>\r\n\r\n                                <ScrollSyncPane>\r\n                                    <VariableSizeGrid\r\n                                        direction={this.props.dir}\r\n                                        height={height}\r\n                                        width={width - frozenColumnsWidth}\r\n                                        columnCount={this.props.columnCount - freezeColumns}\r\n                                        columnWidth={colIndex => this.getColumnWidth(colIndex + freezeColumns)}\r\n                                        rowCount={rowCount}\r\n                                        rowHeight={this.getRowHeight(rowHeight)}\r\n                                    >\r\n                                        {({ rowIndex, columnIndex, style }) =>\r\n                                            this.renderBodyCell(cellRender, rowIndex, columnIndex + freezeColumns, style)\r\n                                        }\r\n                                    </VariableSizeGrid>\r\n                                </ScrollSyncPane>\r\n                            </div>\r\n                        )}\r\n                    </AutoSizer>\r\n                </ErrorBoundary>\r\n            </StyledGridBody>\r\n        );\r\n    }\r\n\r\n    private renderBodyCell(cellRender: BodyCellRender, rowIndex: number, columnIndex: number, style?: React.CSSProperties) {\r\n\r\n        // create the cell\r\n        const cell: any = cellRender({ rowIndex, columnIndex });\r\n\r\n        // get cell props & content\r\n        const { props: cellProps, content: cellContent } = GridCell.extract(cell);\r\n\r\n        // render\r\n        return (\r\n            <StyledGridBodyCell\r\n                key={`[ ${rowIndex}, ${columnIndex} ]`}\r\n                {...cellProps}\r\n                style={Object.assign({}, cellProps.style, style)}\r\n            >\r\n                <ErrorBoundary>\r\n                    {cellContent}\r\n                </ErrorBoundary>\r\n            </StyledGridBodyCell>\r\n        );\r\n    }\r\n\r\n    private renderFooter() {\r\n        const footer = ReactUtils.singleChildOfType(this, GridFooter);\r\n        if (!footer)\r\n            return null;\r\n\r\n        return (\r\n            <span>Footer</span>\r\n        );\r\n    }\r\n\r\n    //\r\n    // helpers\r\n    //\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir\r\n        };\r\n    }\r\n\r\n    private getBodyHeights(): Heights {\r\n\r\n        const totalHeights = utils.getHeights(this.props.style, GridView.defaultHeight);\r\n        const headHeight = this.getHeadHeight();\r\n        const bodyHeights = utils.getHeights(this.props.style, undefined);\r\n\r\n        const bodyHeight = bodyHeights.height || `calc(${totalHeights.height} - ${headHeight})`;\r\n\r\n        let bodyMinHeight: string | number;\r\n        if (bodyHeights.minHeight || totalHeights.minHeight)\r\n            bodyMinHeight = bodyHeights.minHeight || `calc(${totalHeights.minHeight} - ${headHeight})`;\r\n\r\n        let bodyMaxHeight: string | number;\r\n        if (bodyHeights.maxHeight || totalHeights.maxHeight)\r\n            bodyMaxHeight = bodyHeights.maxHeight || `calc(${totalHeights.maxHeight} - ${headHeight})`;\r\n\r\n        return {\r\n            height: bodyHeight,\r\n            minHeight: bodyMinHeight,\r\n            maxHeight: bodyMaxHeight\r\n        };\r\n    }\r\n\r\n    private getHeadHeight(): string | number {\r\n        const head = ReactUtils.singleChildOfType(this, GridHead);\r\n        let headHeight: string | number = 0;\r\n        if (head) {\r\n            headHeight = utils.getHeights(head.props.style, GridView.defaultHeadHeight).height;\r\n        }\r\n        return headHeight;\r\n    }\r\n\r\n    private getFrozenColumnsWidth(): number {\r\n        if (!this.props.freezeColumns)\r\n            return 0;\r\n        const width = utils.range(this.props.freezeColumns)\r\n            .map(this.getColumnWidth)\r\n            .reduce((a, b) => a + b, 0);\r\n        return width;\r\n    }\r\n\r\n    private getColumnWidth = (colIndex: number): number => {\r\n        if (typeof this.props.columnWidth === 'function')\r\n            return this.props.columnWidth(colIndex);\r\n        return this.props.columnWidth;\r\n    }\r\n\r\n    private getRowHeight = (rowHeightProp: number | SizeCallback) => (rowIndex: number): number => {\r\n        if (typeof rowHeightProp === 'function')\r\n            return rowHeightProp(rowIndex);\r\n        return rowHeightProp;\r\n    }\r\n}","import * as React from 'react';\r\nimport { CellRender } from './TableCell';\r\n\r\nexport class ColumnBodyProps<T> {\r\n    public children?: CellRender<T>;\r\n}\r\n\r\nexport class ColumnBody<T> extends React.PureComponent<ColumnBodyProps<T>> { }","import * as React from 'react';\r\nimport { TableCell, CellContent } from './TableCell';\r\n\r\nexport class ColumnHeadProps<T> {\r\n\r\n    /**\r\n     * Default: 40px\r\n     */\r\n    public height?= '40px';\r\n    public children: TableCell<T> | CellContent;\r\n}\r\n\r\nexport class ColumnHead<T> extends React.PureComponent<ColumnHeadProps<T>> { }","import * as React from 'react';\r\nimport { RowRender } from './TableRow';\r\n\r\nexport class TableBodyProps<T> {\r\n    public children?: RowRender<T>;\r\n}\r\n\r\nexport class TableBody<T> extends React.PureComponent<TableBodyProps<T>> { }","import * as React from 'react';\r\n\r\nexport type CellContent = React.ReactNode;\r\n\r\nexport interface TableCellProps<T> extends React.DivProps {\r\n    children?: CellContent;\r\n    visible?: boolean;\r\n}\r\n\r\nexport class TableCell<T> extends React.PureComponent<TableCellProps<T>> { }\r\n\r\nexport type CellRender<T> = (item: T, itemIndex: number, columnIndex: number) => TableCell<T> | CellContent;","import * as React from 'react';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\n\r\nexport class TableColumnProps<T> {\r\n    public children?: [React.SubComp<ColumnHead<T>>, React.SubComp<ColumnBody<T>>];\r\n}\r\n\r\nexport class TableColumn<T> extends React.PureComponent<TableColumnProps<T>> { }","import * as React from 'react';\r\nimport { RowContent } from './TableRow';\r\n\r\nexport class TableHeadProps<T> {\r\n\r\n    /**\r\n     * Default: 40px\r\n     */\r\n    public height?= '40px';\r\n    public children: RowContent<T>;\r\n}\r\n\r\nexport class TableHead<T> extends React.PureComponent<TableHeadProps<T>> { }","import * as React from 'react';\r\nimport { TableCell, CellContent } from './TableCell';\r\n\r\nexport type RowContent<T> = OneOrMore<React.SubComp<TableCell<T>> | CellContent>;\r\n\r\nexport interface TableRowProps<T> extends React.DivProps {\r\n    children?: RowContent<T>;\r\n}\r\n\r\nexport class TableRow<T> extends React.PureComponent<TableRowProps<T>> { }\r\n\r\nexport type RowRender<T> = (item: T, itemIndex: number) => React.SubComp<TableRow<T>> | RowContent<T>;","import { styled } from '../styled';\r\n\r\n//\r\n// constants\r\n//\r\n\r\nconst scrollbarWidth = '17px';\r\nconst tableBorder = '1px solid #ddd';\r\n\r\n//\r\n// table\r\n//\r\n\r\nexport const StyledTableView = styled.div`\r\n    background-color: #fff;\r\n    width: 100%;\r\n    overflow-y: hidden;\r\n`;\r\n\r\n//\r\n// head\r\n//\r\n\r\nexport const StyledTableHead = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    overflow-y: hidden;\r\n\r\n    font-weight: bold;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const StyledTableHeadRow = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: stretch;\r\n\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-dir')}: ${scrollbarWidth};\r\n\r\n    border-bottom: ${tableBorder};\r\n`;\r\n\r\nexport const StyledTableHeadCell = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    padding: 8px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    align-items: flex-end;\r\n    vertical-align: bottom;\r\n`;\r\n\r\n//\r\n// body\r\n//\r\n\r\nexport const StyledTableBody = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const StyledTableBodyRow = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: stretch;\r\n\r\n    border-top: ${tableBorder};\r\n\r\n    &:first-of-type {\r\n        border-top: none;\r\n    }\r\n`;\r\n\r\nexport const StyledTableBodyCell = styled.div`\r\n    flex: 1;\r\n    padding: 8px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;","import { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { FixedSizeList } from 'react-window';\r\nimport { Theme } from '../styled';\r\nimport { ErrorBoundary } from '../utils/ErrorBoundary';\r\nimport { ReactUtils } from '../utils/reactUtils';\r\nimport * as utils from '../utils/utils';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\nimport { StyledTableBody, StyledTableBodyCell, StyledTableBodyRow, StyledTableHead, StyledTableHeadCell, StyledTableHeadRow, StyledTableView } from './style';\r\nimport { TableBody } from './TableBody';\r\nimport { CellContent, TableCell, TableCellProps } from './TableCell';\r\nimport { TableColumn } from './TableColumn';\r\nimport { TableHead, TableHeadProps } from './TableHead';\r\nimport { RowContent, TableRow, TableRowProps } from './TableRow';\r\nconst flattenDeep = require('lodash.flattendeep');\r\n\r\ninterface Heights {\r\n    height: any;\r\n    minHeight: any;\r\n    maxHeight: any;\r\n}\r\n\r\ntype TableChildren_RowsSyntax<T> = [React.SubComp<TableHead<T>>, React.SubComp<TableBody<T>>];\r\n\r\ntype TableChildren_ColumnsSyntax<T> = OneOrMore<React.SubComp<TableColumn<T>>>;\r\n\r\nexport type ItemIdCallback<T> = (item: T, index: number) => any;\r\n\r\nexport class TableViewProps<T> {\r\n\r\n    //\r\n    // main props\r\n    //\r\n\r\n    public items: T[];\r\n    public itemId?: ItemIdCallback<T>;\r\n    public children?: TableChildren_RowsSyntax<T> | TableChildren_ColumnsSyntax<T>;\r\n\r\n    //\r\n    // appearance\r\n    //\r\n\r\n    public dir?: DocDir = 'ltr';\r\n    public className?: string;\r\n    public style?: React.CSSProperties;\r\n    /**\r\n     * Row height in pixels.  \r\n     * Default: 50\r\n     */\r\n    public rowHeight?= 50;\r\n    public emptyMessage?= \"No Items to Display\";\r\n\r\n    //\r\n    // virtualization\r\n    //\r\n\r\n    /**\r\n     * Number of extra buffer items to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 20\r\n     */\r\n    public overscanCount?= 20;\r\n\r\n}\r\n\r\nclass TableViewState<T> {\r\n    public selectedItems: IMap<T> = {};\r\n}\r\n\r\nexport class TableView<T> extends React.PureComponent<TableViewProps<T>, TableViewState<T>> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = TableHead;\r\n\r\n    public static Body = TableBody;\r\n\r\n    public static Row = TableRow;\r\n\r\n    public static Cell = TableCell;\r\n\r\n    public static Column = TableColumn;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps = new TableViewProps();\r\n\r\n    constructor(props: TableViewProps<T>) {\r\n        super(props);\r\n        this.state = new TableViewState<T>();\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        // head & body\r\n        let head = ReactUtils.singleChildOfType(this, TableHead);\r\n        let body = ReactUtils.singleChildOfType(this, TableBody);\r\n        const columns = ReactUtils.childrenOfType(this, TableColumn);\r\n\r\n        // columns\r\n        if (columns && columns.length) {\r\n            if (head || body)\r\n                throw new Error('Can not specify head and/or body when specifying table columns.');\r\n\r\n            head = this.createHeadFromColumns(columns);\r\n            body = this.createBodyFromColumns(columns);\r\n        }\r\n\r\n        // render\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <StyledTableView\r\n                        className={this.props.className}\r\n                        style={Object.assign({}, this.props.style, this.getHeights())}\r\n                    >\r\n                        {this.renderTableHead(head)}\r\n                        {this.renderTableBody(head, body)}\r\n                    </StyledTableView>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderTableHead(head: TableHead<T>) {\r\n\r\n        if (!head)\r\n            return null;\r\n\r\n        return (\r\n\r\n            <StyledTableHead style={{ height: head.props.height }}>\r\n                <StyledTableHeadRow>\r\n                    <ErrorBoundary>\r\n\r\n                        {/* main columns */}\r\n                        {React.Children.map(head.props.children, (cell, index) => {\r\n\r\n                            const headCell: TableCell<T> = cell as any;\r\n                            const cellProps = this.getHeadCellProps(headCell);\r\n                            if (cellProps.visible === false)\r\n                                return null;\r\n\r\n                            const cellContent = this.getHeadCellContent(headCell);\r\n                            return (\r\n                                <StyledTableHeadCell\r\n                                    key={index}\r\n                                    {...cellProps}\r\n                                >\r\n                                    <ErrorBoundary>\r\n                                        {cellContent}\r\n                                    </ErrorBoundary>\r\n                                </StyledTableHeadCell>\r\n                            );\r\n                        })}\r\n\r\n                    </ErrorBoundary>\r\n                </StyledTableHeadRow>\r\n            </StyledTableHead>\r\n        );\r\n    }\r\n\r\n    private renderTableBody(head: TableHead<T>, body: TableBody<T>) {\r\n\r\n        const headProps = this.getHeadProps(head);\r\n        const heightValues = this.getHeights();\r\n        const bodyHeight = `calc(${heightValues.height} - ${headProps.height})`;\r\n        const bodyMinHeight = `calc(${heightValues.minHeight} - ${headProps.height})`;\r\n        const bodyMaxHeight = `calc(${heightValues.maxHeight} - ${headProps.height})`;\r\n\r\n        return (\r\n            <StyledTableBody\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    height: bodyHeight,\r\n                    minHeight: bodyMinHeight,\r\n                    maxHeight: bodyMaxHeight\r\n                }}\r\n            >\r\n                <ErrorBoundary>\r\n                    {this.renderTableRows(body)}\r\n                </ErrorBoundary>\r\n            </StyledTableBody>\r\n        );\r\n    }\r\n\r\n    private renderTableRows(body: TableBody<T>) {\r\n\r\n        // placeholder\r\n        if (this.props.items.length === 0 || !this.hasBody(body)) {\r\n            return this.renderItemsPlaceHolder();\r\n        }\r\n\r\n        // table rows\r\n        return (\r\n            <AutoSizer>\r\n                {({ width, height }) => (\r\n                    <FixedSizeList\r\n                        style={{ outline: 'none' }}\r\n                        direction={this.props.dir}\r\n                        layout=\"vertical\"\r\n                        height={height}\r\n                        width={width}\r\n                        itemCount={this.props.items.length}\r\n                        itemSize={this.props.rowHeight}\r\n                    >\r\n                        {({ index, style }) => {\r\n\r\n                            const rowRender = body.props.children;\r\n                            if (!rowRender)\r\n                                return null;\r\n\r\n                            const item = this.props.items[index];\r\n\r\n                            const row = rowRender(item, index);\r\n                            const { style: rowStyle, ...rowProps } = this.getRowProps(row);\r\n                            const rowKey = this.getRowKey(rowProps, item, index);\r\n                            const rowContent = this.getRowContent(row);\r\n\r\n                            return (\r\n                                <StyledTableBodyRow\r\n                                    style={Object.assign({}, style, rowStyle || {})}\r\n                                    key={rowKey}\r\n                                    {...rowProps}\r\n                                >\r\n                                    <ErrorBoundary>\r\n\r\n                                        {/* main columns */}\r\n                                        {utils.asArray(rowContent).map((cell, columnIndex) => {\r\n\r\n                                            const cellProps = this.getCellProps(cell);\r\n                                            if (cellProps.visible === false)\r\n                                                return null;\r\n\r\n                                            return (\r\n                                                <StyledTableBodyCell\r\n                                                    key={columnIndex}\r\n                                                    {...cellProps}\r\n                                                >\r\n                                                    <ErrorBoundary>\r\n                                                        {this.getCellContent(cell)}\r\n                                                    </ErrorBoundary>\r\n                                                </StyledTableBodyCell>\r\n                                            );\r\n                                        })}\r\n\r\n                                    </ErrorBoundary>\r\n                                </StyledTableBodyRow>\r\n                            );\r\n                        }}\r\n                    </FixedSizeList>\r\n                )}\r\n            </AutoSizer>\r\n        );\r\n    }\r\n\r\n    private renderItemsPlaceHolder() {\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {this.props.emptyMessage}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir\r\n        };\r\n    }\r\n\r\n    private getHeights(): Heights {\r\n        let height = (this.props.style || {}).height;\r\n        let minHeight = (this.props.style || {}).minHeight;\r\n        let maxHeight = (this.props.style || {}).maxHeight;\r\n\r\n        if (height === undefined && minHeight === undefined) {\r\n            height = TableView.defaultHeight;\r\n        }\r\n\r\n        height = utils.cssSizeString(height);\r\n        minHeight = utils.cssSizeString(minHeight);\r\n        maxHeight = utils.cssSizeString(maxHeight);\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    //\r\n    // item methods\r\n    //\r\n\r\n    private getItemId(item: T, index: number): Id {\r\n        if (typeof this.props.itemId === 'function') {\r\n            return this.props.itemId(item, index);\r\n        } else {\r\n            return (item as any).id;\r\n        }\r\n    }\r\n\r\n    //\r\n    // components structure handling\r\n    //  \r\n\r\n    private createHeadFromColumns(columns: TableColumn<T>[]): TableHead<T> {\r\n        const head: any = (\r\n            <TableHead>\r\n                {columns.map(col => ReactUtils.singleChildOfType(col, ColumnHead).props.children)}\r\n            </TableHead>\r\n        );\r\n        return head;\r\n    }\r\n\r\n    private createBodyFromColumns(columns: TableColumn<T>[]): TableBody<T> {\r\n        const body: any = (\r\n            <TableBody>\r\n                {(item: T, itemIndex: number) => columns.map((col, columnIndex) => {\r\n                    const cellRender = ReactUtils.singleChildOfType(col, ColumnBody).props.children;\r\n                    if (!cellRender)\r\n                        return null;\r\n                    return cellRender(item, itemIndex, columnIndex);\r\n                })}\r\n            </TableBody>\r\n        );\r\n        return body;\r\n    }\r\n\r\n    private getHeadProps(head: TableHead<T>): TableHeadProps<T> {\r\n        if (ReactUtils.elementInstanceOf(head, TableRow)) {\r\n            return head.props;\r\n        } else {\r\n            return new TableHeadProps();\r\n        }\r\n    }\r\n\r\n    private getHeadCellProps(cell: TableCell<T>): TableCellProps<T> {\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell))\r\n            return cell.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getHeadCellContent(cell: TableCell<T>): CellContent {\r\n\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell)) {\r\n            return cell.props.children;\r\n        }\r\n\r\n        return cell;\r\n    }\r\n\r\n    private hasBody(body: TableBody<T>): boolean {\r\n\r\n        if (!body)\r\n            return false;\r\n\r\n        if (utils.isNullOrUndefined(body.props.children))\r\n            return false;\r\n\r\n        if (typeof body.props.children === 'function')\r\n            return true;\r\n\r\n        if (Array.isArray(body.props.children))\r\n            return body.props.children.length > 0;\r\n\r\n        const childrenCount = React.Children.count(body.props.children);\r\n        return childrenCount > 0;\r\n    }\r\n\r\n    private getRowProps(row: any): TableRowProps<T> {\r\n\r\n        if (ReactUtils.elementInstanceOf(row, TableRow))\r\n            return row.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getRowContent(row: any): RowContent<T> {\r\n\r\n        let content: RowContent<T> = row;\r\n\r\n        // fragment element\r\n        if (ReactUtils.isReactFragment(content)) {\r\n            throw new Error('Can not use React.Fragment as row content. Consider wrapping your content with a row element.');\r\n        }\r\n\r\n        // row element\r\n        if (ReactUtils.elementInstanceOf(content, TableRow)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        if (Array.isArray(content)) {\r\n            content = flattenDeep(content);\r\n        }\r\n        return content;\r\n    }\r\n\r\n    private getRowKey(rowProps: TableRowProps<T>, item: T, index: number): React.Key {\r\n\r\n        if (!utils.isNullOrUndefined(rowProps.key))\r\n            return rowProps.key;\r\n\r\n        const itemId = this.getItemId(item, index);\r\n        if (!utils.isNullOrUndefined(itemId))\r\n            return itemId;\r\n\r\n        return index;\r\n    }\r\n\r\n    private getCellProps(cell: any): TableCellProps<T> {\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell))\r\n            return cell.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getCellContent(cell: any): CellContent {\r\n\r\n        let content = cell;\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(content, TableCell)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        return content || null;\r\n    }\r\n}","export * from './ColumnBody';\r\nexport * from './ColumnHead';\r\nexport * from './TableBody';\r\nexport * from './TableCell';\r\nexport * from './TableColumn';\r\nexport * from './TableHead';\r\nexport * from './TableRow';\r\nexport * from './TableView';\r\n","export * from './grid';\r\nexport * from './table';\r\n","module.exports = require(\"@emotion/styled\");","module.exports = require(\"emotion-theming\");","module.exports = require(\"lodash.flattendeep\");","module.exports = require(\"react\");","module.exports = require(\"react-scroll-sync\");","module.exports = require(\"react-virtualized-auto-sizer\");","module.exports = require(\"react-window\");"],"sourceRoot":""}