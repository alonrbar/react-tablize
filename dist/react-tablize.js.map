{"version":3,"sources":["webpack/universalModuleDefinition","webpack/bootstrap","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\ErrorBoundary.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\keys.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\reactUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\sizeUtils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\utils.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\utils\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\NonVirtualList.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\NonVirtualGrid.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\VirtualGrid.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\grid\\GridView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\ColumnHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableBody.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableCell.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableColumn.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableHead.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableRow.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\CustomScrollbars.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\styled.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\style.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\TableView.tsx","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\table\\index.ts","C:\\Users\\Alon\\Documents\\devel\\react-tablize\\src\\index.ts","external \"@emotion/styled\"","external \"@emotion/styled-base\"","external \"emotion-theming\"","external \"lodash.flattendeep\"","external \"react\"","external \"react-custom-scrollbars\"","external \"react-dom\"","external \"react-virtualized-auto-sizer\"","external \"react-window\""],"names":["ErrorBoundaryState","ErrorBoundary","props","state","hasError","error","errorInfo","setState","console","children","undefined","React","Keys","ReactUtils","elem","type","prototype","Object","isPrototypeOf","call","createPropsToAdd","map","child","index","propsToAdd","parentElement","Array","isArray","childrenArray","filter","elementInstanceOf","matchingChildren","childrenOfType","length","Error","name","SizeUtils","component","defaultHeight","style","height","minHeight","maxHeight","cssSizeString","table","head","defaultHeights","totalHeights","geElementHeights","total","headHeight","getHeadHeight","bodyHeights","size","Number","isFinite","_scrollbarWidth","div","document","createElement","width","overflow","position","top","body","appendChild","offsetWidth","clientWidth","removeChild","isNullOrUndefined","val","asArray","randomInt","min","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","Math","floor","random","range","count","keys","NonVirtualList","scrollOffset","currentInner","innerElement","current","currentOffset","isHorizontal","scrollLeft","scrollTop","disableScrollEvents","scrollTo","left","e","onScroll","currentTarget","scrollDirection","scrollUpdateWasRequested","outerStyle","direction","outline","innerStyle","boxSizing","display","hideScrollbar","paddingBottom","scrollbarWidth","paddingDir","outerElementType","handleOnScroll","innerElementType","ref","itemCount","fill","_","key","itemSize","data","layout","GridBody","GridCellSymbol","GridCell","cell","cellElemChildren","cellElemProps","content","GridHead","NonVirtualGrid","currentGrid","horizontalScrollDirection","verticalScrollDirection","hideVerticalScrollbar","totalWidth","columnCount","columnWidth","reduce","cur","rowCount","rowIndex","rowHeight","minWidth","columnIndex","isScrolling","OuterNonVirtualGrid","InnerNonVirtualGrid","NonVirtualGridRow","tableBorder","StyledGridView","StyledGridCell","StyledGridHead","theme","dir","StyledGridBody","VirtualGrid","assign","OuterVirtualGrid","InnerVirtualGrid","VariableSizeGrid","GridView","headList","freezedColumnsGrid","mainBodyGrid","colIndex","rowHeightProp","divProps","getTheme","renderHead","renderBody","singleChildOfType","cellRender","freezeColumns","ListComponent","isVirtual","VariableSizeList","defaultHeadHeight","renderCell","getFrozenColumnsWidth","getColumnWidth","overscanColumnsCount","useIsScrolling","heights","getBodyHeights","renderFrozenColumns","renderMainGrid","frozenColumnsWidth","gridProps","getRowHeight","handleFrozenColumnsScroll","overscanRowsCount","GridComponent","handleMainGridScroll","args","extract","cellProps","cellContent","a","b","ColumnBodyProps","ColumnBody","ColumnHead","TableBodyProps","TableBody","TableCell","TableColumnProps","TableColumn","TableHead","TableRow","CustomScrollbarsInner","refSetter","forwardedRef","view","CustomScrollbars","displayName","styledWithTheme","StyledTableView","styled","StyledTableHead","TableHeadRow","hairlines","TableHeadCell","StyledTableBody","TableBodyRow","TableBodyCell","flattenDeep","require","scrollKeys","PageUp","PageDown","End","Home","TableViewProps","TableView","window","addEventListener","scrollByKey","removeEventListener","tableElement","tableInnerRef","tableOuterRef","scrollElement","customScrollbars","ReactDOM","bodyHeight","clientHeight","pageSize","minOffset","maxOffset","offsetByKey","setScrollOffset","offset","resetAfterIndex","forceUpdate","columns","createHeadFromColumns","createBodyFromColumns","className","getKeyScrollProps","renderTableHead","renderTableBody","headCell","getHeadCellProps","visible","getHeadCellContent","renderTableRows","hasBody","renderItemsPlaceHolder","rowRender","renderTableRows_virtual","renderTableRows_nonVirtual","getOuterElementType","overscanCount","renderBodyRow","row","getRowProps","rowStyle","rowProps","rowKey","getRowKey","rowContent","getRowContent","getCellProps","getCellContent","textAlign","emptyMessage","keyScroll","onMouseEnter","registerKeyHandlers","onMouseLeave","removeKeyHandlers","onKeyDown","every","col","colHead","childrenCount","isReactFragment"],"mappings":"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","file":"react-tablize.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-tablize\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-tablize\"] = factory();\n\telse\n\t\troot[\"react-tablize\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as React from 'react';\r\n\r\nclass ErrorBoundaryState {\r\n    public hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<{}, ErrorBoundaryState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n\r\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\r\n        this.setState({ hasError: true });\r\n        console.error(error);  // eslint-disable-line no-console\r\n    }\r\n\r\n    public render() {\r\n        if (this.state.hasError) {\r\n            return (\r\n                <span>X</span>\r\n            );\r\n        }\r\n        return this.props.children !== undefined ? this.props.children : null;\r\n    }\r\n}","export enum Keys {\r\n    PageUp = 'PageUp',\r\n    PageDown = 'PageDown',\r\n    End ='End',\r\n    Home ='Home',\r\n}","import * as React from 'react';\r\n\r\nexport class ReactUtils {\r\n\r\n    //\r\n    // props\r\n    //\r\n\r\n    public static getProps<T>(elem: any): T {\r\n        return (elem && (elem as any).props) || {};\r\n    }\r\n\r\n    //\r\n    // react element\r\n    //\r\n\r\n    public static elementInstanceOf<T>(elem: any, type: Constructor<T>): elem is T {\r\n        if (!elem)\r\n            return false;\r\n        if (!elem.type)\r\n            return false;\r\n\r\n        // https://stackoverflow.com/questions/39387405/using-instanceof-to-test-for-base-class-of-a-react-component\r\n        // https://stackoverflow.com/questions/14486110/how-to-check-if-a-javascript-class-inherits-another-without-creating-an-obj\r\n        // https://stackoverflow.com/questions/2464426/whats-the-difference-between-isprototypeof-and-instanceof-in-javascript\r\n\r\n        return elem.type === type ||\r\n            elem.type.prototype instanceof type ||\r\n            Object.prototype.isPrototypeOf.call(type, elem.type);\r\n    }\r\n\r\n    public static isReactFragment(elem: any): boolean {\r\n        return React.isValidElement(elem) && elem.type === React.Fragment;\r\n    }\r\n\r\n    //\r\n    // react children\r\n    //\r\n\r\n    public static addPropsToChildren(children: React.ReactNode, createPropsToAdd: (child: React.ReactElement<any>, index?: number) => any) {\r\n\r\n        // https://stackoverflow.com/questions/32370994/how-to-pass-props-to-this-props-children\r\n        return React.Children.map(children, (child: React.ReactElement<any>, index: number) => {\r\n            const propsToAdd = createPropsToAdd(child, index);\r\n            return React.cloneElement(child, propsToAdd);\r\n        });\r\n    }\r\n\r\n    public static childrenArray(parentElement: any): React.ReactChild[] {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (Array.isArray(children))\r\n            return children;\r\n\r\n        return React.Children.map(children, child => child);\r\n    }\r\n\r\n    public static childrenOfType<T>(parentElement: any, type: Constructor<T>): T[] {\r\n        const children = ReactUtils.childrenArray(parentElement);\r\n        if (!children)\r\n            return null;\r\n        return children.filter(child => ReactUtils.elementInstanceOf(child, type)) as any;\r\n    }\r\n\r\n    /**\r\n     * Return the only child that matches the given type.  \r\n     * If more than one child matches an error is thrown.  \r\n     * \r\n     * Notice that this function gives no indication of the total number of\r\n     * children, only the number of matching children.\r\n     * @param parentElement \r\n     * @param type \r\n     */\r\n    public static singleChildOfType<T>(parentElement: any, type: Constructor<T>): T {\r\n        const matchingChildren = ReactUtils.childrenOfType(parentElement, type);\r\n        if (!matchingChildren || !matchingChildren.length)\r\n            return null;\r\n\r\n        if (matchingChildren.length > 1)\r\n            throw new Error(`Only one ${type.name} child element is allowed.`);\r\n\r\n        return matchingChildren[0] as any;\r\n    }\r\n\r\n    // tslint:disable-next-line:ban-types\r\n    public static singleFunctionChild(parentElement: any): Function {\r\n        if (!parentElement)\r\n            return null;\r\n        if (!parentElement.props)\r\n            return null;\r\n\r\n        const children = parentElement.props.children;\r\n        if (typeof parentElement.props.children !== 'function')\r\n            return null;\r\n\r\n        return children;\r\n    }\r\n}","\r\nexport interface ElementHeights {\r\n    height: string | number;\r\n    minHeight: string | number;\r\n    maxHeight: string | number;\r\n}\r\n\r\nexport interface TableHeights {\r\n    total: string | number;\r\n    head: string | number;\r\n}\r\n\r\nexport type ComponentWithStyle = React.Component<{ style?: React.CSSProperties }>;\r\n\r\nexport class SizeUtils {\r\n\r\n    public static get scrollbarWidth(): number {\r\n        if (this._scrollbarWidth === null) {\r\n            \r\n            // https://github.com/sonicdoe/measure-scrollbar/blob/master/index.js\r\n\r\n            const div = document.createElement('div');\r\n\r\n            div.style.width = '100px';\r\n            div.style.height = '100px';\r\n            div.style.overflow = 'scroll';\r\n            div.style.position = 'absolute';\r\n            div.style.top = '-9999px';\r\n\r\n            document.body.appendChild(div);\r\n\r\n            this._scrollbarWidth = div.offsetWidth - div.clientWidth;\r\n\r\n            document.body.removeChild(div);\r\n        }\r\n\r\n        return this._scrollbarWidth;\r\n    }\r\n\r\n    private static _scrollbarWidth: number = null;\r\n\r\n    public static geElementHeights(component: ComponentWithStyle, defaultHeight: number | string): ElementHeights {\r\n        const style = (component && component.props.style) || {};\r\n\r\n        let height = style.height;\r\n        let minHeight = style.minHeight;\r\n        let maxHeight = style.maxHeight;\r\n\r\n        if (height === undefined && minHeight === undefined) {\r\n            height = defaultHeight;\r\n        }\r\n\r\n        height = this.cssSizeString(height);\r\n        minHeight = this.cssSizeString(minHeight);\r\n        maxHeight = this.cssSizeString(maxHeight);\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    public static getBodyHeights(table: ComponentWithStyle, head: ComponentWithStyle, defaultHeights: TableHeights): ElementHeights {\r\n\r\n        const totalHeights = this.geElementHeights(table, defaultHeights.total);\r\n        const headHeight = this.getHeadHeight(head, defaultHeights.head);\r\n        const bodyHeights = this.geElementHeights(table, undefined);\r\n\r\n        let height = bodyHeights.height || totalHeights.height;\r\n        let minHeight = bodyHeights.minHeight || totalHeights.minHeight;\r\n        let maxHeight = bodyHeights.maxHeight || totalHeights.maxHeight;\r\n\r\n        if (headHeight) {\r\n            height = `calc(${height} - ${headHeight})`;\r\n            if (minHeight)\r\n                minHeight = `calc(${minHeight} - ${headHeight})`;\r\n            if (maxHeight)\r\n                maxHeight = `calc(${maxHeight} - ${headHeight})`;\r\n        }\r\n\r\n        return {\r\n            height,\r\n            minHeight,\r\n            maxHeight\r\n        };\r\n    }\r\n\r\n    private static getHeadHeight(head: ComponentWithStyle, defaultHeight: string | number): string | number {\r\n        if (head) {\r\n            return this.geElementHeights(head, defaultHeight).height;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public static cssSizeString(size: any): string {\r\n        if (Number.isFinite(size))\r\n            return size + 'px';\r\n        return size;\r\n    }\r\n}","\r\nexport function isNullOrUndefined(val: any): boolean {\r\n    return val === null || val === undefined;\r\n}\r\n\r\nexport function asArray<T>(val: T | T[]): T[] {\r\n    if (Array.isArray(val))\r\n        return val;\r\n\r\n    return [val];\r\n}\r\n\r\nexport function randomInt(min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER): number {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport function range(count: number): number[] {\r\n    // https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp\r\n    return [...Array(count || 0).keys()];\r\n}","export * from './ErrorBoundary';\r\nexport * from './keys';\r\nexport * from './reactUtils';\r\nexport * from './sizeUtils';\r\nexport * from './utils';\r\n","import { DirectionProperty } from 'csstype';\r\nimport * as React from 'react';\r\nimport { VariableSizeListProps } from 'react-window';\r\nimport { SizeUtils } from '../utils';\r\n\r\nexport interface NonVirtualListProps extends VariableSizeListProps {\r\n    hideScrollbar?: boolean;\r\n}\r\n\r\nexport class NonVirtualList extends React.PureComponent<NonVirtualListProps> {\r\n\r\n    private get isHorizontal(): boolean {\r\n        return this.props.layout === 'horizontal';\r\n    }\r\n\r\n    private disableScrollEvents = false;\r\n\r\n    private readonly innerElement = React.createRef<HTMLDivElement>();\r\n\r\n    public scrollTo = (scrollOffset: number) => {\r\n        const currentInner = this.innerElement.current;\r\n        if (currentInner) {\r\n\r\n            if (scrollOffset === undefined)\r\n                return;\r\n\r\n            const currentOffset = (this.isHorizontal ? currentInner.scrollLeft : currentInner.scrollTop);\r\n            if (scrollOffset === currentOffset)\r\n                return;\r\n\r\n            this.disableScrollEvents = true;\r\n            currentInner.scrollTo({\r\n                top: (this.isHorizontal ? undefined : scrollOffset),\r\n                left: (this.isHorizontal ? scrollOffset : undefined)\r\n            });\r\n        }\r\n    }\r\n\r\n    public render() {\r\n\r\n        const outerStyle: React.CSSProperties = {\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n            direction: (this.props.direction as DirectionProperty),\r\n            outline: 'none',\r\n            overflow: 'hidden'\r\n        };\r\n        const innerStyle: React.CSSProperties = {\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n            boxSizing: 'content-box',\r\n            outline: 'none',\r\n            overflow: 'auto',\r\n            [this.isHorizontal ? 'overflowY' : 'overflowX']: 'hidden'\r\n        };\r\n\r\n        if (this.isHorizontal) {\r\n            innerStyle.display = 'flex';\r\n        }\r\n\r\n        if (this.props.hideScrollbar) {\r\n            if (this.isHorizontal) {\r\n                innerStyle.paddingBottom = SizeUtils.scrollbarWidth;\r\n            } else {\r\n                const paddingDir = (this.props.direction === 'rtl' ? 'paddingLeft' : 'paddingRight');\r\n                innerStyle[paddingDir] = SizeUtils.scrollbarWidth;\r\n            }\r\n        }\r\n\r\n        return React.createElement(this.props.outerElementType || 'div',\r\n            {                \r\n                style: outerStyle,\r\n                onScroll: this.handleOnScroll\r\n            },\r\n            React.createElement(this.props.innerElementType || 'div',\r\n                {\r\n                    ref: this.innerElement,\r\n                    style: innerStyle\r\n                },\r\n                Array(this.props.itemCount).fill(0).map((_, index) => (\r\n                    React.createElement(this.props.children, {\r\n                        key: index,\r\n                        index,\r\n                        style: {\r\n                            [this.isHorizontal ? 'minWidth' : 'minHeight']: this.props.itemSize(index),\r\n                            [this.isHorizontal ? 'height' : 'width']: (this.isHorizontal ? this.props.height : this.props.width)\r\n                        },\r\n                        data: null\r\n                    })\r\n                ))\r\n            )\r\n        );\r\n    }\r\n\r\n    private handleOnScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n        if (this.disableScrollEvents) {\r\n            this.disableScrollEvents = false;\r\n            return;\r\n        }\r\n\r\n        if (!this.props.onScroll)\r\n            return;\r\n\r\n        const { scrollTop, scrollLeft } = e.currentTarget;\r\n        this.props.onScroll({\r\n            scrollOffset: (this.isHorizontal ? scrollLeft : scrollTop),\r\n            scrollDirection: undefined,\r\n            scrollUpdateWasRequested: false\r\n        });\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport interface BodyCellRenderArgs {\r\n    rowIndex: number; \r\n    columnIndex: number;\r\n    isScrolling?: boolean;\r\n}\r\n\r\nexport type BodyCellRender = (args: BodyCellRenderArgs) => React.ReactNode;\r\n\r\nexport interface GridBodyProps extends React.DivProps {\r\n    rowCount: number;\r\n    /**\r\n     * Body row height.  \r\n     * To adjust the head height set the head `style` prop.\r\n     */\r\n    rowHeight: number | SizeCallback;\r\n    children?: BodyCellRender;\r\n}\r\n\r\nexport class GridBody extends React.PureComponent<GridBodyProps> { }","import * as React from 'react';\r\nimport { randomInt } from '../utils/utils';\r\n\r\nconst GridCellSymbol = '__ReactTablize__GridCell__' + randomInt(0);\r\n\r\nexport interface GridCellExtractResult {\r\n    props: GridCellProps;\r\n    content: React.ReactNode;\r\n}\r\n\r\nexport interface GridCellProps extends React.DivProps {\r\n}\r\n\r\nexport class GridCell extends React.PureComponent<GridCellProps> {\r\n\r\n    public static defaultProps: GridCellProps = {\r\n        [GridCellSymbol]: true\r\n    };\r\n\r\n    public static extract(cell: any): GridCellExtractResult {\r\n        if (cell && cell.props && cell.props[GridCellSymbol]) {\r\n            const { children: cellElemChildren, ...cellElemProps } = cell.props;\r\n            return {\r\n                props: cellElemProps,\r\n                content: cellElemChildren\r\n            };\r\n        } else {\r\n            return {\r\n                props: {},\r\n                content: cell\r\n            };\r\n        }\r\n    }\r\n\r\n    public render() {\r\n        return this.props.children;\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport interface HeadCellRenderArgs {\r\n    columnIndex: number;\r\n    isScrolling?: boolean;\r\n}\r\n\r\nexport type HeadCellRender = (args: HeadCellRenderArgs) => React.ReactNode;\r\n\r\nexport interface GridHeadProps extends React.DivProps {    \r\n    children?: HeadCellRender;\r\n}\r\n\r\nexport class GridHead extends React.PureComponent<GridHeadProps> { }","import styled from '@emotion/styled';\r\nimport * as React from 'react';\r\nimport { VariableSizeGridProps } from 'react-window';\r\nimport { range, SizeUtils } from '../utils';\r\n\r\nexport interface NonVirtualGridProps extends VariableSizeGridProps {\r\n    hideVerticalScrollbar?: boolean;\r\n}\r\n\r\nexport class NonVirtualGrid extends React.PureComponent<NonVirtualGridProps> {\r\n\r\n    private disableScrollEvents = false;\r\n    \r\n    private readonly innerElement = React.createRef<HTMLDivElement>();\r\n\r\n    public scrollTo = (e: ScrollEvent) => {\r\n        const currentGrid = this.innerElement.current;\r\n        if (currentGrid) {\r\n\r\n            if (\r\n                (e.scrollLeft === undefined || e.scrollLeft === currentGrid.scrollLeft) &&\r\n                (e.scrollTop === undefined || e.scrollTop === currentGrid.scrollTop)\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            this.disableScrollEvents = true;\r\n            currentGrid.scrollTo({\r\n                top: e.scrollTop,\r\n                left: e.scrollLeft\r\n            });\r\n        }\r\n    }\r\n\r\n    public render() {\r\n\r\n        const outerStyle: React.CSSProperties = {\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n        };\r\n\r\n        const innerStyle: React.CSSProperties = {\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n        };\r\n\r\n        if (this.props.hideVerticalScrollbar) {\r\n            const paddingDir = (this.props.direction === 'rtl' ? 'paddingLeft' : 'paddingRight');\r\n            innerStyle[paddingDir] = SizeUtils.scrollbarWidth;\r\n        }\r\n\r\n        const totalWidth = range(this.props.columnCount).map(this.props.columnWidth).reduce((total, cur) => total + cur, 0);\r\n\r\n        return (\r\n            <OuterNonVirtualGrid style={outerStyle}>\r\n                <InnerNonVirtualGrid\r\n                    ref={this.innerElement}\r\n                    style={innerStyle}\r\n                    onScroll={this.handleOnScroll}\r\n                >\r\n                    {range(this.props.rowCount).map(rowIndex => (\r\n                        <NonVirtualGridRow\r\n                            key={rowIndex}\r\n                            style={{\r\n                                height: this.props.rowHeight(rowIndex),\r\n                                width: totalWidth,\r\n                                minWidth: this.props.width\r\n                            }}\r\n                        >\r\n                            {range(this.props.columnCount).map(columnIndex => (\r\n                                React.createElement(this.props.children, {\r\n                                    key: columnIndex,\r\n                                    columnIndex,\r\n                                    rowIndex,\r\n                                    data: null,\r\n                                    isScrolling: false,\r\n                                    style: {\r\n                                        height: this.props.rowHeight(rowIndex),\r\n                                        width: this.props.columnWidth(columnIndex),\r\n                                        minWidth: this.props.columnWidth(columnIndex)\r\n                                    },\r\n                                })\r\n                            ))}\r\n                        </NonVirtualGridRow>\r\n                    ))}\r\n                </InnerNonVirtualGrid>\r\n            </OuterNonVirtualGrid>\r\n        );\r\n    }\r\n\r\n    private handleOnScroll = (e: React.UIEvent<HTMLDivElement>): void => {\r\n        if (this.disableScrollEvents) {\r\n            this.disableScrollEvents = false;\r\n            return;\r\n        }\r\n\r\n        if (!this.props.onScroll)\r\n            return;\r\n\r\n        const { scrollTop, scrollLeft } = e.currentTarget;\r\n        this.props.onScroll({\r\n            scrollTop,\r\n            scrollLeft,\r\n            horizontalScrollDirection: undefined,\r\n            verticalScrollDirection: undefined,\r\n            scrollUpdateWasRequested: false\r\n        });\r\n    }\r\n}\r\n\r\n// ---------------- //\r\n//      styles      //\r\n// ---------------- //\r\n\r\nconst OuterNonVirtualGrid = styled.div`\r\n    overflow: hidden;    \r\n`;\r\n\r\nexport const InnerNonVirtualGrid = styled.div`\r\n    overflow: auto;\r\n    box-sizing: content-box;\r\n`;\r\n\r\nconst NonVirtualGridRow = styled.div`\r\n    display: flex;\r\n`;","import styled from '@emotion/styled';\r\nimport { SizeUtils } from '../utils';\r\n\r\n//\r\n// constants\r\n//\r\n\r\nconst tableBorder = '1px solid #ddd';\r\n\r\n//\r\n// grid\r\n//\r\n\r\nexport const StyledGridView = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nexport const StyledGridCell = styled.div`\r\n    display: flex;\r\n\r\n    height: 100%;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    align-items: center;\r\n    vertical-align: middle;\r\n`;\r\n\r\n//\r\n// head\r\n//\r\n\r\nexport const StyledGridHead = styled.div`\r\n    display: flex;\r\n\r\n    font-weight: bold;\r\n    vertical-align: middle;\r\n\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-right')}: ${SizeUtils.scrollbarWidth}px;\r\n    border-bottom: ${tableBorder};\r\n\r\n    & ${StyledGridCell} {\r\n        align-items: flex-end;\r\n    }\r\n`;\r\n\r\n//\r\n// body\r\n//\r\n\r\nexport const StyledGridBody = styled.div`\r\n`;","import styled from '@emotion/styled';\r\nimport * as React from 'react';\r\nimport { VariableSizeGrid, VariableSizeGridProps } from 'react-window';\r\nimport { SizeUtils } from '../utils';\r\n\r\nexport interface VirtualGridProps extends VariableSizeGridProps {\r\n    hideVerticalScrollbar?: boolean;\r\n}\r\n\r\nexport class VirtualGrid extends React.PureComponent<VirtualGridProps> {\r\n\r\n    private readonly innerElement = React.createRef<VariableSizeGrid>();\r\n\r\n    public scrollTo = (e: ScrollEvent) => {\r\n        if (this.innerElement.current) {\r\n            this.innerElement.current.scrollTo(e);\r\n        }\r\n    }\r\n\r\n    public render() {\r\n\r\n        const outerStyle: React.CSSProperties = {\r\n            height: this.props.height,\r\n            width: this.props.width,\r\n        };\r\n\r\n        const innerStyle: React.CSSProperties = {};\r\n\r\n        if (this.props.hideVerticalScrollbar) {\r\n            const paddingDir = (this.props.direction === 'rtl' ? 'paddingLeft' : 'paddingRight');\r\n            innerStyle[paddingDir] = SizeUtils.scrollbarWidth;\r\n        }\r\n\r\n        return (\r\n            <OuterVirtualGrid style={outerStyle}>\r\n                <InnerVirtualGrid\r\n                    {...this.props}\r\n                    ref={this.innerElement}\r\n                    style={Object.assign({}, this.props.style, innerStyle)}\r\n                />\r\n            </OuterVirtualGrid>\r\n        );\r\n    }\r\n}\r\n\r\n// ---------------- //\r\n//      styles      //\r\n// ---------------- //\r\n\r\nconst OuterVirtualGrid = styled.div`\r\n    overflow: hidden;    \r\n`;\r\n\r\nexport const InnerVirtualGrid = styled(VariableSizeGrid)`\r\n    overflow: auto;\r\n    box-sizing: content-box;\r\n`;","import { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { VariableSizeGrid, VariableSizeGridProps, VariableSizeList } from 'react-window';\r\nimport { Theme } from '../styled';\r\nimport { NonVirtualList } from '../table/NonVirtualList';\r\nimport { ErrorBoundary, range, ReactUtils, SizeUtils } from '../utils';\r\nimport { BodyCellRender, GridBody } from './GridBody';\r\nimport { GridCell } from './GridCell';\r\nimport { GridHead } from './GridHead';\r\nimport { NonVirtualGrid } from './NonVirtualGrid';\r\nimport { StyledGridBody, StyledGridCell, StyledGridHead, StyledGridView } from './style';\r\nimport { VirtualGrid } from './VirtualGrid';\r\n\r\ntype GridChildren_FullSyntax = [React.SubComp<GridHead>, React.SubComp<GridBody>];\r\ntype GridChildren_PartialSyntax = React.SubComp<GridHead> | React.SubComp<GridBody>;\r\ntype GridChildren = GridChildren_FullSyntax | GridChildren_PartialSyntax | BodyCellRender;\r\n\r\ninterface RenderBodyCellArgs {\r\n    cellRender: BodyCellRender;\r\n    rowIndex: number;\r\n    columnIndex: number;\r\n    isScrolling: boolean;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nexport interface GridViewProps extends React.DivProps {\r\n\r\n    isVirtual?: boolean;\r\n    columnCount: number;\r\n    columnWidth: number | SizeCallback;\r\n    /**\r\n     * Number of columns to freeze (always the first columns).\r\n     */\r\n    freezeColumns?: number;\r\n\r\n    dir?: DocDir;\r\n\r\n    /**\r\n     * Number of extra rows to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 1\r\n     */\r\n    overscanRowsCount?: number;\r\n    /**\r\n     * Number of extra columns to render before/after the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 1\r\n     */\r\n    overscanColumnsCount?: number;\r\n    /**\r\n     * Adds an additional isScrolling parameter to the children render function.\r\n     * This parameter can be used to show a placeholder row or column while the\r\n     * list is being scrolled.\r\n     *\r\n     * Note that using this parameter will result in an additional render call\r\n     * after scrolling has stopped (when isScrolling changes from true to\r\n     * false).\r\n     */\r\n    useIsScrolling?: boolean;\r\n\r\n    children?: GridChildren;\r\n}\r\n\r\nexport class GridView extends React.PureComponent<GridViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n    public static readonly defaultHeadHeight = '40px';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = GridHead;\r\n\r\n    public static Body = GridBody;\r\n\r\n    // TODO: public static Footer = GridFooter;\r\n\r\n    public static Cell = GridCell;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps: Partial<GridViewProps> = {\r\n        overscanRowsCount: 1,\r\n        overscanColumnsCount: 1\r\n    };\r\n\r\n    private headList = React.createRef<VariableSizeList>();\r\n    private mainBodyGrid = React.createRef<VariableSizeGrid>();\r\n    private freezedColumnsGrid = React.createRef<VariableSizeGrid>();\r\n\r\n    public render() {\r\n        const { columnCount, columnWidth, children, ...divProps } = this.props;\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <StyledGridView\r\n                        {...divProps}\r\n                        style={Object.assign(\r\n                            { direction: this.props.dir },\r\n                            this.props.style,\r\n                            SizeUtils.geElementHeights(this, GridView.defaultHeight))\r\n                        }\r\n                    >\r\n                        {this.renderHead()}\r\n                        {this.renderBody()}\r\n                    </StyledGridView>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderHead() {\r\n        const head = ReactUtils.singleChildOfType(this, GridHead);\r\n        if (!head)\r\n            return null;\r\n\r\n        const { children: cellRender, ...divProps } = head.props;\r\n        const freezeColumns = this.props.freezeColumns || 0;\r\n\r\n        const ListComponent = this.props.isVirtual !== false ?\r\n            VariableSizeList :\r\n            NonVirtualList;\r\n\r\n        return (\r\n            <StyledGridHead\r\n                {...divProps}\r\n                style={Object.assign({}, head.props.style, SizeUtils.geElementHeights(head, GridView.defaultHeadHeight))}\r\n            >\r\n                <ErrorBoundary>\r\n                    <AutoSizer>\r\n                        {({ width, height }) => (\r\n                            <div style={{ width, height, display: 'flex' }}>\r\n\r\n                                {/* frozen first columns */}\r\n                                {range(freezeColumns).map(columnIndex => this.renderCell({\r\n                                    cellRender,\r\n                                    rowIndex: 0,\r\n                                    columnIndex,\r\n                                    isScrolling: false\r\n                                }))}\r\n\r\n                                {/* main columns */}\r\n                                <ListComponent\r\n                                    ref={this.headList}\r\n                                    hideScrollbar={true}\r\n                                    direction={this.props.dir}\r\n                                    style={{ overflow: 'hidden' }}\r\n                                    layout=\"horizontal\"\r\n                                    height={height}\r\n                                    width={width - this.getFrozenColumnsWidth()}\r\n                                    itemCount={this.props.columnCount - freezeColumns}\r\n                                    itemSize={colIndex => this.getColumnWidth(colIndex + freezeColumns)}\r\n                                    overscanCount={this.props.overscanColumnsCount}\r\n                                    useIsScrolling={this.props.useIsScrolling}\r\n                                >\r\n                                    {({ index, style, isScrolling }) =>\r\n                                        this.renderCell({\r\n                                            cellRender,\r\n                                            rowIndex: 0,\r\n                                            columnIndex: index + freezeColumns,\r\n                                            isScrolling,\r\n                                            style\r\n                                        })\r\n                                    }\r\n                                </ListComponent>\r\n\r\n                            </div>\r\n                        )}\r\n                    </AutoSizer>\r\n                </ErrorBoundary>\r\n            </StyledGridHead>\r\n        );\r\n    }\r\n\r\n    private renderBody() {\r\n\r\n        const body = ReactUtils.singleChildOfType(this, GridBody);\r\n        if (!body)\r\n            return null;\r\n        const { children: cellRender, rowCount, rowHeight, ...divProps } = body.props;\r\n\r\n        const head = ReactUtils.singleChildOfType(this, GridHead);\r\n        const heights = SizeUtils.getBodyHeights(this, head, {\r\n            total: GridView.defaultHeight,\r\n            head: GridView.defaultHeadHeight\r\n        });\r\n\r\n        return (\r\n            <StyledGridBody\r\n                {...divProps}\r\n                style={Object.assign({}, divProps.style, heights)}\r\n            >\r\n                <ErrorBoundary>\r\n                    <AutoSizer>\r\n                        {({ height, width }) => (\r\n                            <div style={{ width, height, display: 'flex' }}>\r\n                                {this.renderFrozenColumns(height, width, body)}\r\n                                {this.renderMainGrid(height, width, body)}\r\n                            </div>\r\n                        )}\r\n                    </AutoSizer>\r\n                </ErrorBoundary>\r\n            </StyledGridBody>\r\n        );\r\n    }\r\n\r\n    private renderFrozenColumns(height: number, width: number, body: GridBody) {\r\n        const freezeColumns = this.props.freezeColumns || 0;\r\n        const frozenColumnsWidth = this.getFrozenColumnsWidth();\r\n        const { children: cellRender, rowCount, rowHeight } = body.props;\r\n\r\n        const gridProps: VariableSizeGridProps = {\r\n            direction: this.props.dir,\r\n            height: height - SizeUtils.scrollbarWidth,\r\n            width: frozenColumnsWidth,\r\n            columnCount: freezeColumns,\r\n            columnWidth: this.getColumnWidth,\r\n            rowCount,\r\n            rowHeight: this.getRowHeight(rowHeight),\r\n            onScroll: this.handleFrozenColumnsScroll,\r\n            overscanRowsCount: this.props.overscanRowsCount,\r\n            overscanColumnsCount: this.props.overscanColumnsCount,\r\n            useIsScrolling: this.props.useIsScrolling,\r\n            children: ({ rowIndex, columnIndex, style, isScrolling }) =>\r\n                this.renderCell({\r\n                    cellRender,\r\n                    rowIndex,\r\n                    columnIndex,\r\n                    isScrolling,\r\n                    style\r\n                })\r\n        };\r\n\r\n        const GridComponent = this.props.isVirtual !== false ?\r\n            VirtualGrid :\r\n            NonVirtualGrid;\r\n\r\n        return (\r\n            <GridComponent\r\n                ref={this.freezedColumnsGrid as React.Ref<any>}\r\n                hideVerticalScrollbar={true}\r\n                {...gridProps}\r\n            />\r\n        );\r\n    }\r\n\r\n    private renderMainGrid(height: number, width: number, body: GridBody) {\r\n        const freezeColumns = this.props.freezeColumns || 0;\r\n        const frozenColumnsWidth = this.getFrozenColumnsWidth();\r\n        const { children: cellRender, rowCount, rowHeight } = body.props;\r\n\r\n        const gridProps: VariableSizeGridProps = {\r\n            direction: this.props.dir,\r\n            height,\r\n            width: width - frozenColumnsWidth,\r\n            columnCount: this.props.columnCount - freezeColumns,\r\n            columnWidth: colIndex => this.getColumnWidth(colIndex + freezeColumns),\r\n            rowCount,\r\n            rowHeight: this.getRowHeight(rowHeight),\r\n            onScroll: this.handleMainGridScroll,\r\n            overscanRowsCount: this.props.overscanRowsCount,\r\n            overscanColumnsCount: this.props.overscanColumnsCount,\r\n            useIsScrolling: this.props.useIsScrolling,\r\n            children: ({ rowIndex, columnIndex, style, isScrolling }) =>\r\n                this.renderCell({\r\n                    cellRender,\r\n                    rowIndex,\r\n                    columnIndex: columnIndex + freezeColumns,\r\n                    isScrolling,\r\n                    style\r\n                })\r\n        };\r\n\r\n        const GridComponent = this.props.isVirtual !== false ?\r\n            VariableSizeGrid :\r\n            NonVirtualGrid;\r\n\r\n        return (\r\n            <GridComponent\r\n                ref={this.mainBodyGrid}\r\n                {...gridProps}\r\n            />\r\n        );\r\n    }\r\n\r\n    private renderCell(args: RenderBodyCellArgs) {\r\n\r\n        const {\r\n            rowIndex,\r\n            columnIndex,\r\n            cellRender,\r\n            isScrolling,\r\n            style\r\n        } = args;\r\n\r\n        // create the cell\r\n        const cell: any = cellRender({ rowIndex, columnIndex, isScrolling });\r\n\r\n        // get cell props & content\r\n        const { props: cellProps, content: cellContent } = GridCell.extract(cell);\r\n        const columnWidth = this.getColumnWidth(columnIndex);\r\n\r\n        // render\r\n        return (\r\n            <StyledGridCell\r\n                key={`[ ${rowIndex}, ${columnIndex} ]`}\r\n                {...cellProps}\r\n                style={Object.assign({ width: columnWidth }, cellProps.style, style)}\r\n            >\r\n                <ErrorBoundary>\r\n                    {cellContent}\r\n                </ErrorBoundary>\r\n            </StyledGridCell>\r\n        );\r\n    }\r\n\r\n    //\r\n    // event handlers\r\n    //\r\n\r\n    private handleMainGridScroll = (e: ScrollEvent) => {\r\n        const { scrollTop, scrollLeft } = e;\r\n\r\n        // synchronize head\r\n        if (this.headList.current) {\r\n            this.headList.current.scrollTo(scrollLeft);\r\n        }\r\n\r\n        // synchronize frozen body columns\r\n        if (this.freezedColumnsGrid.current) {\r\n            this.freezedColumnsGrid.current.scrollTo({ scrollTop } as any);\r\n        }\r\n    }\r\n\r\n    private handleFrozenColumnsScroll = (e: ScrollEvent) => {\r\n        const { scrollTop } = e;\r\n\r\n        // synchronize main grid\r\n        if (this.mainBodyGrid.current) {\r\n            this.mainBodyGrid.current.scrollTo({ scrollTop } as any);\r\n        }\r\n    }\r\n\r\n    //\r\n    // helpers\r\n    //\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir\r\n        };\r\n    }\r\n\r\n    private getFrozenColumnsWidth(): number {\r\n        if (!this.props.freezeColumns)\r\n            return 0;\r\n        const width = range(this.props.freezeColumns)\r\n            .map(this.getColumnWidth)\r\n            .reduce((a, b) => a + b, 0);\r\n        return width;\r\n    }\r\n\r\n    private getColumnWidth = (colIndex: number): number => {\r\n        if (typeof this.props.columnWidth === 'function')\r\n            return this.props.columnWidth(colIndex);\r\n        return this.props.columnWidth;\r\n    }\r\n\r\n    private getRowHeight = (rowHeightProp: number | SizeCallback) => (rowIndex: number): number => {\r\n        if (typeof rowHeightProp === 'function')\r\n            return rowHeightProp(rowIndex);\r\n        return rowHeightProp;\r\n    }\r\n}","import * as React from 'react';\r\nimport { CellRender } from './TableCell';\r\n\r\nexport class ColumnBodyProps {\r\n    public children?: CellRender;\r\n}\r\n\r\nexport class ColumnBody extends React.PureComponent<ColumnBodyProps> { }","import * as React from 'react';\r\nimport { TableCellProps } from './TableCell';\r\n\r\nexport interface ColumnHeadProps extends TableCellProps {\r\n}\r\n\r\nexport class ColumnHead extends React.PureComponent<ColumnHeadProps> { }","import * as React from 'react';\r\nimport { RowRender } from './TableRow';\r\n\r\nexport class TableBodyProps {\r\n    public children?: RowRender;\r\n}\r\n\r\nexport class TableBody extends React.PureComponent<TableBodyProps> { }","import * as React from 'react';\r\n\r\nexport type CellContent = React.ReactNode;\r\n\r\nexport interface TableCellProps extends React.DivProps {\r\n    children?: CellContent;\r\n    visible?: boolean;\r\n}\r\n\r\nexport class TableCell extends React.PureComponent<TableCellProps> { }\r\n\r\nexport interface CellRenderArgs {\r\n    rowIndex: number;\r\n    columnIndex: number;\r\n}\r\n\r\nexport type CellRender = (args: CellRenderArgs) => TableCell | CellContent;","import * as React from 'react';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\n\r\nexport class TableColumnProps {\r\n    public children?: [React.SubComp<ColumnHead>, React.SubComp<ColumnBody>];\r\n}\r\n\r\nexport class TableColumn extends React.PureComponent<TableColumnProps> { }","import * as React from 'react';\r\nimport { RowContent } from './TableRow';\r\n\r\nexport interface TableHeadProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableHead extends React.PureComponent<TableHeadProps> { }","import * as React from 'react';\r\nimport { TableCell, CellContent } from './TableCell';\r\n\r\nexport type RowContent = OneOrMore<React.SubComp<TableCell> | CellContent>;\r\n\r\nexport interface TableRowProps extends React.DivProps {\r\n    children?: RowContent;\r\n}\r\n\r\nexport class TableRow extends React.PureComponent<TableRowProps> { }\r\n\r\nexport type RowRender = (index: number, isScrolling: boolean) => React.SubComp<TableRow> | RowContent;","import * as React from 'react';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\n\r\nexport interface CustomScrollbarsProps {\r\n    style?: React.CSSProperties;\r\n    onScroll?: any;\r\n    forwardedRef: (elem: Element) => void;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nclass CustomScrollbarsInner extends React.PureComponent<CustomScrollbarsProps> {\r\n    public render() {\r\n\r\n        // https://github.com/bvaughn/react-window/issues/110#issuecomment-469061213\r\n\r\n        const refSetter = (elem: any) => {\r\n            if (!this.props.forwardedRef)\r\n                return;\r\n            this.props.forwardedRef((elem || {}).view);\r\n        };\r\n\r\n        return (\r\n            <Scrollbars\r\n                ref={refSetter}\r\n                style={{\r\n                    ...this.props.style,\r\n                    overflow: 'hidden',\r\n                    direction: 'ltr'\r\n                }}\r\n                onScroll={this.props.onScroll}\r\n            >\r\n                {this.props.children}\r\n            </Scrollbars>\r\n        );\r\n    }\r\n}\r\n\r\nexport const CustomScrollbars = React.forwardRef((props, ref) => (\r\n    <CustomScrollbarsInner {...props} forwardedRef={ref as any} />\r\n));\r\nCustomScrollbars.displayName = 'CustomScrollbars';","import styled, { CreateStyled } from '@emotion/styled';\r\n\r\nexport interface Theme {\r\n    dir: DocDir;\r\n    hairlines?: boolean;\r\n}\r\n\r\nconst styledWithTheme = (styled as CreateStyled<Theme>);\r\n\r\nexport { styledWithTheme as styled };","import { styled } from '../styled';\r\n\r\n//\r\n// constants\r\n//\r\n\r\nconst scrollbarWidth = '17px';\r\nconst tableBorder = '1px solid #ddd';\r\n\r\n//\r\n// table\r\n//\r\n\r\nexport const StyledTableView = styled.div`\r\n    width: 100%;\r\n    overflow-y: hidden;\r\n`;\r\n\r\n//\r\n// head\r\n//\r\n\r\nexport const StyledTableHead = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    overflow-y: hidden;\r\n\r\n    font-weight: bold;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const TableHeadRow = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: stretch;\r\n\r\n    ${props => (props.theme.dir === 'rtl' ? 'padding-left' : 'padding-right')}: ${scrollbarWidth};\r\n    ${props => props.theme.hairlines ? `border-bottom: ${tableBorder}` : ''};\r\n`;\r\n\r\nexport const TableHeadCell = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    padding: 8px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    align-items: flex-end;\r\n    vertical-align: bottom;\r\n`;\r\n\r\n//\r\n// body\r\n//\r\n\r\nexport const StyledTableBody = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const TableBodyRow = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: stretch;\r\n\r\n    ${props => props.theme.hairlines ? `border-top: ${tableBorder}` : ''};\r\n\r\n    &:first-of-type {\r\n        border-top: none;\r\n    }\r\n`;\r\n\r\nexport const TableBodyCell = styled.div`\r\n    flex: 1;\r\n    padding: 8px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;","import { ThemeProvider } from 'emotion-theming';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { VariableSizeList } from 'react-window';\r\nimport { Theme } from '../styled';\r\nimport { asArray, ErrorBoundary, isNullOrUndefined, Keys, ReactUtils, SizeUtils } from '../utils';\r\nimport { ColumnBody } from './ColumnBody';\r\nimport { ColumnHead } from './ColumnHead';\r\nimport { CustomScrollbars } from './CustomScrollbars';\r\nimport { StyledTableBody, StyledTableHead, StyledTableView, TableBodyCell, TableBodyRow, TableHeadCell, TableHeadRow } from './style';\r\nimport { TableBody } from './TableBody';\r\nimport { CellContent, TableCell, TableCellProps } from './TableCell';\r\nimport { TableColumn } from './TableColumn';\r\nimport { TableHead } from './TableHead';\r\nimport { RowContent, RowRender, TableRow, TableRowProps } from './TableRow';\r\nconst flattenDeep = require('lodash.flattendeep');\r\n\r\ninterface KeyEvent {\r\n    key: string;\r\n}\r\n\r\nconst scrollKeys: IMap<boolean> = {\r\n    [Keys.PageUp]: true,\r\n    [Keys.PageDown]: true,\r\n    [Keys.End]: true,\r\n    [Keys.Home]: true,\r\n};\r\n\r\ntype TableChildren_RowsSyntax = [React.SubComp<TableHead>, React.SubComp<TableBody>];\r\n\r\ntype TableChildren_ColumnsSyntax = OneOrMore<React.SubComp<TableColumn>>;\r\n\r\nexport type RowKeyCallback = (index: number) => React.Key;\r\n\r\nexport class TableViewProps {\r\n\r\n    //\r\n    // main props\r\n    //\r\n\r\n    public isVirtual?: boolean;\r\n    public rowCount: number;\r\n    public rowKey?: RowKeyCallback;\r\n    public children?: TableChildren_RowsSyntax | TableChildren_ColumnsSyntax;\r\n\r\n    //\r\n    // appearance\r\n    //\r\n\r\n    public dir?: DocDir = 'ltr';\r\n    public className?: string;\r\n    public style?: React.CSSProperties;\r\n    /**\r\n     * Row height in pixels.  \r\n     * \r\n     * Default: 50\r\n     */\r\n    public rowHeight?: number | SizeCallback = 50;\r\n    public emptyMessage?= \"No Items to Display\";\r\n    public customScrollbars?: boolean;\r\n    public hairlines?: boolean;\r\n\r\n    //\r\n    // behavior\r\n    //\r\n\r\n    public keyScroll?: boolean;\r\n\r\n    //\r\n    // virtualization\r\n    //\r\n\r\n    /**\r\n     * Number of extra buffer items to render above/below the visible items.\r\n     * Tweaking this can help reduce scroll flickering on certain\r\n     * browsers/devices.  \r\n     * \r\n     * Default: 20\r\n     */\r\n    public overscanCount?= 20;\r\n    /**\r\n     * Adds an additional isScrolling parameter to the children render function.\r\n     * This parameter can be used to show a placeholder row or column while the\r\n     * list is being scrolled.\r\n     *\r\n     * Note that using this parameter will result in an additional render call\r\n     * after scrolling has stopped (when isScrolling changes from true to\r\n     * false).\r\n     */\r\n    public useIsScrolling?: boolean;\r\n\r\n}\r\n\r\nexport class TableView extends React.PureComponent<TableViewProps> {\r\n\r\n    public static readonly defaultHeight = '35vh';\r\n    public static readonly defaultHeadHeight = '40px';\r\n\r\n    //\r\n    // nested types\r\n    //\r\n\r\n    public static Head = TableHead;\r\n\r\n    public static Body = TableBody;\r\n\r\n    public static Row = TableRow;\r\n\r\n    public static Cell = TableCell;\r\n\r\n    public static Column = TableColumn;\r\n\r\n    //\r\n    // component code\r\n    //\r\n\r\n    public static defaultProps = new TableViewProps();\r\n\r\n    private tableElement = React.createRef<VariableSizeList>();\r\n    private tableInnerRef = React.createRef<HTMLElement>();\r\n    private tableOuterRef = React.createRef<HTMLElement>();\r\n\r\n    //\r\n    // public methods\r\n    //\r\n\r\n    public refresh() {\r\n        if (this.tableElement.current) {\r\n            this.tableElement.current.resetAfterIndex(0, false);\r\n        }\r\n        this.forceUpdate();\r\n    }\r\n\r\n    //\r\n    // render methods\r\n    //\r\n\r\n    public render() {\r\n\r\n        // head & body\r\n        let head = ReactUtils.singleChildOfType(this, TableHead);\r\n        let body = ReactUtils.singleChildOfType(this, TableBody);\r\n        const columns = ReactUtils.childrenOfType(this, TableColumn);\r\n\r\n        // columns\r\n        if (columns && columns.length) {\r\n            if (head || body)\r\n                throw new Error('Can not specify head and/or body when specifying table columns.');\r\n\r\n            head = this.createHeadFromColumns(columns);\r\n            body = this.createBodyFromColumns(columns);\r\n        }\r\n\r\n        // render\r\n        return (\r\n            <ErrorBoundary>\r\n                <ThemeProvider theme={this.getTheme()}>\r\n                    <StyledTableView\r\n                        className={this.props.className}\r\n                        style={Object.assign({},\r\n                            this.props.style,\r\n                            SizeUtils.geElementHeights(this, TableView.defaultHeight)\r\n                        )}\r\n                        {...this.getKeyScrollProps()}\r\n                    >\r\n                        {this.renderTableHead(head)}\r\n                        {this.renderTableBody(head, body)}\r\n                    </StyledTableView>\r\n                </ThemeProvider>\r\n            </ErrorBoundary>\r\n        );\r\n    }\r\n\r\n    private renderTableHead(head: TableHead) {\r\n\r\n        if (!head)\r\n            return null;\r\n\r\n        const { children, ...divProps } = head.props;\r\n\r\n        return (\r\n\r\n            <StyledTableHead\r\n                {...divProps}\r\n                style={Object.assign({}, head.props.style, SizeUtils.geElementHeights(head, TableView.defaultHeadHeight))}\r\n            >\r\n                <TableHeadRow>\r\n                    <ErrorBoundary>\r\n                        {React.Children.map(children, (cell, index) => {\r\n\r\n                            const headCell: TableCell = cell as any;\r\n                            const cellProps = this.getHeadCellProps(headCell);\r\n                            if (cellProps.visible === false)\r\n                                return null;\r\n\r\n                            const cellContent = this.getHeadCellContent(headCell);\r\n                            return (\r\n                                <TableHeadCell\r\n                                    key={index}\r\n                                    {...cellProps}\r\n                                >\r\n                                    <ErrorBoundary>\r\n                                        {cellContent}\r\n                                    </ErrorBoundary>\r\n                                </TableHeadCell>\r\n                            );\r\n                        })}\r\n                    </ErrorBoundary>\r\n                </TableHeadRow>\r\n            </StyledTableHead>\r\n        );\r\n    }\r\n\r\n    private renderTableBody(head: TableHead, body: TableBody) {\r\n\r\n        const bodyHeights = SizeUtils.getBodyHeights(this, head, {\r\n            total: TableView.defaultHeight,\r\n            head: TableView.defaultHeadHeight\r\n        });\r\n\r\n        return (\r\n            <StyledTableBody\r\n                style={{\r\n                    direction: this.props.dir,\r\n                    ...bodyHeights\r\n                }}\r\n            >\r\n                <ErrorBoundary>\r\n                    {this.renderTableRows(body)}\r\n                </ErrorBoundary>\r\n            </StyledTableBody>\r\n        );\r\n    }\r\n\r\n    private renderTableRows(body: TableBody) {\r\n\r\n        // placeholder\r\n        if (this.props.rowCount === 0 || !this.hasBody(body)) {\r\n            return this.renderItemsPlaceHolder();\r\n        }\r\n\r\n        // table rows\r\n        const rowRender = body.props.children;\r\n        return (\r\n            <AutoSizer>\r\n                {({ width, height }) => (\r\n                    this.props.isVirtual !== false ?\r\n                        this.renderTableRows_virtual(width, height, rowRender) :\r\n                        this.renderTableRows_nonVirtual(width, height, rowRender)\r\n                )}\r\n            </AutoSizer>\r\n        );\r\n    }\r\n\r\n    private renderTableRows_virtual(width: number, height: number, rowRender: RowRender) {\r\n        return (\r\n            <VariableSizeList\r\n                ref={this.tableElement}\r\n                innerRef={this.tableInnerRef}\r\n                outerRef={this.tableOuterRef}\r\n                style={{ outline: 'none' }}\r\n                outerElementType={this.getOuterElementType()}\r\n                direction={this.props.dir}\r\n                layout=\"vertical\"\r\n                height={height}\r\n                width={width}\r\n                itemCount={this.props.rowCount}\r\n                itemSize={this.getRowHeight}\r\n                overscanCount={this.props.overscanCount}\r\n                useIsScrolling={this.props.useIsScrolling}\r\n            >\r\n                {({ index, style, isScrolling }) => this.renderBodyRow(index, rowRender, style, isScrolling)}\r\n            </VariableSizeList>\r\n        );\r\n    }\r\n\r\n    private renderTableRows_nonVirtual(width: number, height: number, rowRender: RowRender) {\r\n        return React.createElement(this.getOuterElementType() || 'div',\r\n            {\r\n                style: {\r\n                    height,\r\n                    width,\r\n                    direction: this.props.dir,\r\n                    outline: 'none',\r\n                    overflow: 'auto',\r\n                }\r\n            } as any,\r\n            (rowRender && (\r\n                Array(this.props.rowCount).fill(0).map((_, index) => (\r\n                    this.renderBodyRow(index, rowRender, { height: this.getRowHeight(index) })\r\n                ))\r\n            ))\r\n        );\r\n    }\r\n\r\n    private renderBodyRow(index: number, rowRender: RowRender, style: React.CSSProperties, isScrolling?: boolean) {\r\n        if (!rowRender)\r\n            return null;\r\n\r\n        const row = rowRender(index, isScrolling);\r\n        const { style: rowStyle, ...rowProps } = this.getRowProps(row);\r\n        const rowKey = this.getRowKey(rowProps, index);\r\n        const rowContent = this.getRowContent(row);\r\n\r\n        return (\r\n            <TableBodyRow\r\n                style={Object.assign({}, style, rowStyle)}\r\n                key={rowKey}\r\n                {...rowProps}\r\n            >\r\n                <ErrorBoundary>\r\n                    {asArray(rowContent).map((cell, columnIndex) => {\r\n\r\n                        const cellProps = this.getCellProps(cell);\r\n                        if (cellProps.visible === false)\r\n                            return null;\r\n\r\n                        return (\r\n                            <TableBodyCell\r\n                                key={columnIndex}\r\n                                {...cellProps}\r\n                            >\r\n                                <ErrorBoundary>\r\n                                    {this.getCellContent(cell)}\r\n                                </ErrorBoundary>\r\n                            </TableBodyCell>\r\n                        );\r\n                    })}\r\n                </ErrorBoundary>\r\n            </TableBodyRow>\r\n        );\r\n    }\r\n\r\n    private renderItemsPlaceHolder() {\r\n        return (\r\n            <div>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    {this.props.emptyMessage}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //\r\n    // scroll with keys\r\n    //\r\n\r\n    private getKeyScrollProps() {\r\n        if (this.props.keyScroll === false)\r\n            return {};\r\n        return {\r\n            onMouseEnter: this.registerKeyHandlers,\r\n            onMouseLeave: this.removeKeyHandlers,\r\n            onKeyDown: (e: KeyEvent) => this.scrollByKey(e)\r\n        };\r\n    }\r\n\r\n    private registerKeyHandlers = () => {\r\n        window.addEventListener('keydown', this.scrollByKey);\r\n    }\r\n\r\n    private removeKeyHandlers = () => {\r\n        window.removeEventListener('keydown', this.scrollByKey);\r\n    }\r\n\r\n    private scrollByKey = ({ key }: KeyEvent) => {\r\n\r\n        // https://dev.to/dance2die/scrolling-with-page-up-down-keys-in-react-window-31ei\r\n\r\n        if (!scrollKeys[key])\r\n            return;\r\n\r\n        if (!this.tableElement.current || !this.tableInnerRef.current || !this.tableOuterRef.current)\r\n            return;\r\n\r\n        const scrollElement = (this.props.customScrollbars ? this.tableOuterRef.current : this.tableElement.current);\r\n        const table = (ReactDOM.findDOMNode(scrollElement) as HTMLElement);\r\n        const currentOffset = table.scrollTop;\r\n        const bodyHeight = table.clientHeight;\r\n        const pageSize = bodyHeight * 0.85;\r\n        const minOffset = 0.1;\r\n        const maxOffset = this.tableInnerRef.current.clientHeight;\r\n\r\n        const offsetByKey: IMap<number> = {\r\n            [Keys.PageUp]: Math.max(minOffset, currentOffset - pageSize),\r\n            [Keys.PageDown]: Math.min(currentOffset + pageSize, maxOffset),\r\n            [Keys.End]: maxOffset,\r\n            [Keys.Home]: minOffset,\r\n        };\r\n\r\n        this.setScrollOffset(offsetByKey[key]);\r\n    }\r\n\r\n    private setScrollOffset = (offset: number) => {\r\n        if (!this.tableElement.current)\r\n            return;\r\n\r\n        this.tableElement.current.scrollTo(offset);\r\n    }\r\n\r\n    //\r\n    // components structure handling\r\n    //  \r\n\r\n    private createHeadFromColumns(columns: TableColumn[]): TableHead {\r\n\r\n        if (columns.every(col => !ReactUtils.singleChildOfType(col, ColumnHead)))\r\n            return null;\r\n\r\n        const head: any = (\r\n            <TableHead>\r\n                {columns.map(col => {\r\n                    const colHead = ReactUtils.singleChildOfType(col, ColumnHead);\r\n                    if (!colHead)\r\n                        return null;\r\n\r\n                    // eslint-disable-next-line react/jsx-key\r\n                    return <TableCell {...(colHead.props as any)} />;\r\n                })}\r\n            </TableHead>\r\n        );\r\n        return head;\r\n    }\r\n\r\n    private createBodyFromColumns(columns: TableColumn[]): TableBody {\r\n        const body: any = (\r\n            <TableBody>\r\n                {(rowIndex: number) => columns.map((col, columnIndex) => {\r\n                    const cellRender = ReactUtils.singleChildOfType(col, ColumnBody).props.children;\r\n                    if (!cellRender)\r\n                        return null;\r\n                    return cellRender({ rowIndex, columnIndex });\r\n                })}\r\n            </TableBody>\r\n        );\r\n        return body;\r\n    }\r\n\r\n    private getHeadCellProps(cell: TableCell): TableCellProps {\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell))\r\n            return cell.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getHeadCellContent(cell: TableCell): CellContent {\r\n\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell)) {\r\n            return cell.props.children;\r\n        }\r\n\r\n        return cell;\r\n    }\r\n\r\n    private hasBody(body: TableBody): boolean {\r\n\r\n        if (!body)\r\n            return false;\r\n\r\n        if (isNullOrUndefined(body.props.children))\r\n            return false;\r\n\r\n        if (typeof body.props.children === 'function')\r\n            return true;\r\n\r\n        if (Array.isArray(body.props.children))\r\n            return body.props.children.length > 0;\r\n\r\n        const childrenCount = React.Children.count(body.props.children);\r\n        return childrenCount > 0;\r\n    }\r\n\r\n    private getRowProps(row: any): TableRowProps {\r\n\r\n        if (ReactUtils.elementInstanceOf(row, TableRow))\r\n            return row.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getRowContent(row: any): RowContent {\r\n\r\n        let content: RowContent = row;\r\n\r\n        // fragment element\r\n        if (ReactUtils.isReactFragment(content)) {\r\n            throw new Error('Can not use React.Fragment as row content. Consider wrapping your content with a row element.');\r\n        }\r\n\r\n        // row element\r\n        if (ReactUtils.elementInstanceOf(content, TableRow)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        if (Array.isArray(content)) {\r\n            content = flattenDeep(content);\r\n        }\r\n        return content;\r\n    }\r\n\r\n    private getRowKey(rowProps: TableRowProps, index: number): React.Key {\r\n\r\n        if (!isNullOrUndefined(rowProps.key))\r\n            return rowProps.key;\r\n\r\n        if (typeof this.props.rowKey === 'function')\r\n            return this.props.rowKey(index);\r\n\r\n        return index;\r\n    }\r\n\r\n    private getCellProps(cell: any): TableCellProps {\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(cell, TableCell))\r\n            return cell.props || {};\r\n\r\n        // default props\r\n        return {};\r\n    }\r\n\r\n    private getCellContent(cell: any): CellContent {\r\n\r\n        let content = cell;\r\n\r\n        // cell element\r\n        if (ReactUtils.elementInstanceOf(content, TableCell)) {\r\n            content = content.props.children;\r\n        }\r\n\r\n        // actual content\r\n        return content || null;\r\n    }\r\n\r\n    //\r\n    // helpers\r\n    //\r\n\r\n    private getTheme(): Theme {\r\n        return {\r\n            dir: this.props.dir,\r\n            hairlines: (this.props.hairlines !== false)\r\n        };\r\n    }\r\n\r\n    private getRowHeight = (rowIndex: number): number => {\r\n        if (typeof this.props.rowHeight === 'function')\r\n            return this.props.rowHeight(rowIndex);\r\n        return this.props.rowHeight;\r\n    }\r\n\r\n    private getOuterElementType() {\r\n        return this.props.customScrollbars ? CustomScrollbars : undefined;\r\n    }\r\n}","export * from './ColumnBody';\r\nexport * from './ColumnHead';\r\nexport * from './TableBody';\r\nexport * from './TableCell';\r\nexport * from './TableColumn';\r\nexport * from './TableHead';\r\nexport * from './TableRow';\r\nexport * from './TableView';\r\n","export * from './grid';\r\nexport * from './table';\r\n","module.exports = require(\"@emotion/styled\");","module.exports = require(\"@emotion/styled-base\");","module.exports = require(\"emotion-theming\");","module.exports = require(\"lodash.flattendeep\");","module.exports = require(\"react\");","module.exports = require(\"react-custom-scrollbars\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-virtualized-auto-sizer\");","module.exports = require(\"react-window\");"],"sourceRoot":""}